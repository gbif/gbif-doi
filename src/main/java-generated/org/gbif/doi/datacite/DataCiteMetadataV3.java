//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.02 at 12:12:51 PM CET 
//


package org.gbif.doi.datacite;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlList;
import javax.xml.bind.annotation.XmlMixed;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.google.common.base.Objects;
import com.kscs.util.jaxb.PropertyTree;
import com.kscs.util.jaxb.PropertyTreeUse;


/**
 * No content in this wrapper element.
 * 
 * <p>Java class for resource element declaration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;element name="resource">
 *   &lt;complexType>
 *     &lt;complexContent>
 *       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *         &lt;all>
 *           &lt;element name="nameIdentifier">
 *             &lt;complexType>
 *               &lt;simpleContent>
 *                 &lt;extension base="&lt;http://datacite.org/schema/kernel-3>doiType">
 *                   &lt;attribute name="identifierType" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" fixed="DOI" />
 *                 &lt;/extension>
 *               &lt;/simpleContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="creators">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="creator" maxOccurs="unbounded">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;sequence>
 *                               &lt;element name="creatorName">
 *                                 &lt;simpleType>
 *                                   &lt;restriction base="{http://datacite.org/schema/kernel-3}nonemptycontentStringType">
 *                                   &lt;/restriction>
 *                                 &lt;/simpleType>
 *                               &lt;/element>
 *                               &lt;element name="nameIdentifier" minOccurs="0">
 *                                 &lt;complexType>
 *                                   &lt;simpleContent>
 *                                     &lt;extension base="&lt;http://datacite.org/schema/kernel-3>nonemptycontentStringType">
 *                                       &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                                       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                                     &lt;/extension>
 *                                   &lt;/simpleContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                               &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
 *                             &lt;/sequence>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="titles">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="titles" maxOccurs="unbounded">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://datacite.org/schema/kernel-3>nonemptycontentStringType">
 *                             &lt;attribute name="titleType" type="{http://datacite.org/schema/kernel-3}titleType" />
 *                             &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="publisher">
 *             &lt;simpleType>
 *               &lt;restriction base="{http://datacite.org/schema/kernel-3}nonemptycontentStringType">
 *               &lt;/restriction>
 *             &lt;/simpleType>
 *           &lt;/element>
 *           &lt;element name="publicationYear">
 *             &lt;simpleType>
 *               &lt;restriction base="{http://datacite.org/schema/kernel-3}yearType">
 *               &lt;/restriction>
 *             &lt;/simpleType>
 *           &lt;/element>
 *           &lt;element name="subjects" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="subject" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                             &lt;attribute name="subjectScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                             &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                             &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="contributors" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="contributor" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;sequence>
 *                               &lt;element name="contributorName">
 *                                 &lt;simpleType>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                                     &lt;minLength value="1"/>
 *                                   &lt;/restriction>
 *                                 &lt;/simpleType>
 *                               &lt;/element>
 *                               &lt;element name="nameIdentifier" minOccurs="0">
 *                                 &lt;complexType>
 *                                   &lt;simpleContent>
 *                                     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                                       &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                                       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                                     &lt;/extension>
 *                                   &lt;/simpleContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                               &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
 *                             &lt;/sequence>
 *                             &lt;attribute name="contributorType" use="required" type="{http://datacite.org/schema/kernel-3}contributorType" />
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="dates" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="dates" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                             &lt;attribute name="dateType" use="required" type="{http://datacite.org/schema/kernel-3}dateType" />
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="language" type="{http://www.w3.org/2001/XMLSchema}language" minOccurs="0"/>
 *           &lt;element name="resourceType" minOccurs="0">
 *             &lt;complexType>
 *               &lt;simpleContent>
 *                 &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                   &lt;attribute name="resourceTypeGeneral" use="required" type="{http://datacite.org/schema/kernel-3}resourceType" />
 *                 &lt;/extension>
 *               &lt;/simpleContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="alternateIdentifiers" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="alternateIdentifier" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                             &lt;attribute name="alternateIdentifierType" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="relatedIdentifiers" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="relatedIdentifier" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                             &lt;attribute name="relatedIdentifierType" use="required" type="{http://datacite.org/schema/kernel-3}relatedIdentifierType" />
 *                             &lt;attribute name="relationType" use="required" type="{http://datacite.org/schema/kernel-3}relationType" />
 *                             &lt;attribute name="relatedMetadataScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                             &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                             &lt;attribute name="schemeType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="sizes" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="sizes" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="format" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="format" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="version" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *           &lt;element name="rightsList" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="right" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                             &lt;attribute name="rightsURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="description" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="description" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;choice>
 *                               &lt;element name="br" maxOccurs="unbounded" minOccurs="0">
 *                                 &lt;simpleType>
 *                                   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                                     &lt;length value="0"/>
 *                                   &lt;/restriction>
 *                                 &lt;/simpleType>
 *                               &lt;/element>
 *                             &lt;/choice>
 *                             &lt;attribute name="descriptionType" use="required" type="{http://datacite.org/schema/kernel-3}descriptionType" />
 *                             &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="geoLocations" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="geoLocation" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;sequence>
 *                               &lt;element name="geoLocationPoint" type="{http://datacite.org/schema/kernel-3}point" minOccurs="0"/>
 *                               &lt;element name="geoLocationBox" type="{http://datacite.org/schema/kernel-3}box" minOccurs="0"/>
 *                               &lt;element name="geoLocationPlace" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
 *                             &lt;/sequence>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *         &lt;/all>
 *       &lt;/restriction>
 *     &lt;/complexContent>
 *   &lt;/complexType>
 * &lt;/element>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "resource")
public class DataCiteMetadataV3 {

    @XmlElement(required = true)
    protected DataCiteMetadataV3 .NameIdentifier nameIdentifier;
    @XmlElement(required = true)
    protected DataCiteMetadataV3 .Creators creators;
    @XmlElement(required = true)
    protected DataCiteMetadataV3 .Titles titles;
    @XmlElement(required = true)
    protected String publisher;
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String publicationYear;
    protected DataCiteMetadataV3 .Subjects subjects;
    protected DataCiteMetadataV3 .Contributors contributors;
    protected DataCiteMetadataV3 .Dates dates;
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "language")
    protected String language;
    protected DataCiteMetadataV3 .ResourceType resourceType;
    protected DataCiteMetadataV3 .AlternateIdentifiers alternateIdentifiers;
    protected DataCiteMetadataV3 .RelatedIdentifiers relatedIdentifiers;
    protected DataCiteMetadataV3 .Sizes sizes;
    protected DataCiteMetadataV3 .Format format;
    protected String version;
    protected DataCiteMetadataV3 .RightsList rightsList;
    protected DataCiteMetadataV3 .Description description;
    protected DataCiteMetadataV3 .GeoLocations geoLocations;

    /**
     * Gets the value of the nameIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .NameIdentifier }
     *     
     */
    public DataCiteMetadataV3 .NameIdentifier getNameIdentifier() {
        return nameIdentifier;
    }

    /**
     * Sets the value of the nameIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .NameIdentifier }
     *     
     */
    protected void setNameIdentifier(DataCiteMetadataV3 .NameIdentifier value) {
        this.nameIdentifier = value;
    }

    /**
     * Gets the value of the creators property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .Creators }
     *     
     */
    public DataCiteMetadataV3 .Creators getCreators() {
        return creators;
    }

    /**
     * Sets the value of the creators property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .Creators }
     *     
     */
    protected void setCreators(DataCiteMetadataV3 .Creators value) {
        this.creators = value;
    }

    /**
     * Gets the value of the titles property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .Titles }
     *     
     */
    public DataCiteMetadataV3 .Titles getTitles() {
        return titles;
    }

    /**
     * Sets the value of the titles property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .Titles }
     *     
     */
    protected void setTitles(DataCiteMetadataV3 .Titles value) {
        this.titles = value;
    }

    /**
     * Gets the value of the publisher property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPublisher() {
        return publisher;
    }

    /**
     * Sets the value of the publisher property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    protected void setPublisher(String value) {
        this.publisher = value;
    }

    /**
     * Gets the value of the publicationYear property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPublicationYear() {
        return publicationYear;
    }

    /**
     * Sets the value of the publicationYear property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    protected void setPublicationYear(String value) {
        this.publicationYear = value;
    }

    /**
     * Gets the value of the subjects property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .Subjects }
     *     
     */
    public DataCiteMetadataV3 .Subjects getSubjects() {
        return subjects;
    }

    /**
     * Sets the value of the subjects property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .Subjects }
     *     
     */
    protected void setSubjects(DataCiteMetadataV3 .Subjects value) {
        this.subjects = value;
    }

    /**
     * Gets the value of the contributors property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .Contributors }
     *     
     */
    public DataCiteMetadataV3 .Contributors getContributors() {
        return contributors;
    }

    /**
     * Sets the value of the contributors property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .Contributors }
     *     
     */
    protected void setContributors(DataCiteMetadataV3 .Contributors value) {
        this.contributors = value;
    }

    /**
     * Gets the value of the dates property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .Dates }
     *     
     */
    public DataCiteMetadataV3 .Dates getDates() {
        return dates;
    }

    /**
     * Sets the value of the dates property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .Dates }
     *     
     */
    protected void setDates(DataCiteMetadataV3 .Dates value) {
        this.dates = value;
    }

    /**
     * Gets the value of the language property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLanguage() {
        return language;
    }

    /**
     * Sets the value of the language property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    protected void setLanguage(String value) {
        this.language = value;
    }

    /**
     * Gets the value of the resourceType property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .ResourceType }
     *     
     */
    public DataCiteMetadataV3 .ResourceType getResourceType() {
        return resourceType;
    }

    /**
     * Sets the value of the resourceType property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .ResourceType }
     *     
     */
    protected void setResourceType(DataCiteMetadataV3 .ResourceType value) {
        this.resourceType = value;
    }

    /**
     * Gets the value of the alternateIdentifiers property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .AlternateIdentifiers }
     *     
     */
    public DataCiteMetadataV3 .AlternateIdentifiers getAlternateIdentifiers() {
        return alternateIdentifiers;
    }

    /**
     * Sets the value of the alternateIdentifiers property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .AlternateIdentifiers }
     *     
     */
    protected void setAlternateIdentifiers(DataCiteMetadataV3 .AlternateIdentifiers value) {
        this.alternateIdentifiers = value;
    }

    /**
     * Gets the value of the relatedIdentifiers property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .RelatedIdentifiers }
     *     
     */
    public DataCiteMetadataV3 .RelatedIdentifiers getRelatedIdentifiers() {
        return relatedIdentifiers;
    }

    /**
     * Sets the value of the relatedIdentifiers property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .RelatedIdentifiers }
     *     
     */
    protected void setRelatedIdentifiers(DataCiteMetadataV3 .RelatedIdentifiers value) {
        this.relatedIdentifiers = value;
    }

    /**
     * Gets the value of the sizes property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .Sizes }
     *     
     */
    public DataCiteMetadataV3 .Sizes getSizes() {
        return sizes;
    }

    /**
     * Sets the value of the sizes property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .Sizes }
     *     
     */
    protected void setSizes(DataCiteMetadataV3 .Sizes value) {
        this.sizes = value;
    }

    /**
     * Gets the value of the format property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .Format }
     *     
     */
    public DataCiteMetadataV3 .Format getFormat() {
        return format;
    }

    /**
     * Sets the value of the format property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .Format }
     *     
     */
    protected void setFormat(DataCiteMetadataV3 .Format value) {
        this.format = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    protected void setVersion(String value) {
        this.version = value;
    }

    /**
     * Gets the value of the rightsList property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .RightsList }
     *     
     */
    public DataCiteMetadataV3 .RightsList getRightsList() {
        return rightsList;
    }

    /**
     * Sets the value of the rightsList property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .RightsList }
     *     
     */
    protected void setRightsList(DataCiteMetadataV3 .RightsList value) {
        this.rightsList = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .Description }
     *     
     */
    public DataCiteMetadataV3 .Description getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .Description }
     *     
     */
    protected void setDescription(DataCiteMetadataV3 .Description value) {
        this.description = value;
    }

    /**
     * Gets the value of the geoLocations property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadataV3 .GeoLocations }
     *     
     */
    public DataCiteMetadataV3 .GeoLocations getGeoLocations() {
        return geoLocations;
    }

    /**
     * Sets the value of the geoLocations property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadataV3 .GeoLocations }
     *     
     */
    protected void setGeoLocations(DataCiteMetadataV3 .GeoLocations value) {
        this.geoLocations = value;
    }

    public static DataCiteMetadataV3 .Builder<Void> builder() {
        return new DataCiteMetadataV3 .Builder<Void>(null, null, false);
    }

    public static DataCiteMetadataV3 .Builder<Void> copyOf(final DataCiteMetadataV3 other) {
        return new DataCiteMetadataV3 .Builder<Void>(null, other, true);
    }

    public static DataCiteMetadataV3 .Builder<Void> copyOf(final DataCiteMetadataV3 other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
        return new DataCiteMetadataV3 .Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
    }

    public static DataCiteMetadataV3 .Builder<Void> copyExcept(final DataCiteMetadataV3 other, final PropertyTree propertyTree) {
        return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
    }

    public static DataCiteMetadataV3 .Builder<Void> copyOnly(final DataCiteMetadataV3 other, final PropertyTree propertyTree) {
        return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
    }

    @Override
    public String toString() {
        return Objects.toStringHelper(this).add("nameIdentifier", nameIdentifier).add("creators", creators).add("titles", titles).add("publisher", publisher).add("publicationYear", publicationYear).add("subjects", subjects).add("contributors", contributors).add("dates", dates).add("language", language).add("resourceType", resourceType).add("alternateIdentifiers", alternateIdentifiers).add("relatedIdentifiers", relatedIdentifiers).add("sizes", sizes).add("format", format).add("version", version).add("rightsList", rightsList).add("description", description).add("geoLocations", geoLocations).toString();
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(nameIdentifier, creators, titles, publisher, publicationYear, subjects, contributors, dates, language, resourceType, alternateIdentifiers, relatedIdentifiers, sizes, format, version, rightsList, description, geoLocations);
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) {
            return true;
        }
        if (other == null) {
            return false;
        }
        if (getClass()!= other.getClass()) {
            return false;
        }
        final DataCiteMetadataV3 o = ((DataCiteMetadataV3) other);
        return (((((((((((((((((Objects.equal(nameIdentifier, o.nameIdentifier)&&Objects.equal(creators, o.creators))&&Objects.equal(titles, o.titles))&&Objects.equal(publisher, o.publisher))&&Objects.equal(publicationYear, o.publicationYear))&&Objects.equal(subjects, o.subjects))&&Objects.equal(contributors, o.contributors))&&Objects.equal(dates, o.dates))&&Objects.equal(language, o.language))&&Objects.equal(resourceType, o.resourceType))&&Objects.equal(alternateIdentifiers, o.alternateIdentifiers))&&Objects.equal(relatedIdentifiers, o.relatedIdentifiers))&&Objects.equal(sizes, o.sizes))&&Objects.equal(format, o.format))&&Objects.equal(version, o.version))&&Objects.equal(rightsList, o.rightsList))&&Objects.equal(description, o.description))&&Objects.equal(geoLocations, o.geoLocations));
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="alternateIdentifier" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="alternateIdentifierType" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "alternateIdentifier"
    })
    public static class AlternateIdentifiers {

        protected List<DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier> alternateIdentifier;
        protected transient List<DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier> alternateIdentifier_RO = null;

        public List<DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier> getAlternateIdentifier() {
            if (this.alternateIdentifier == null) {
                this.alternateIdentifier = new ArrayList<DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier>();
            }
            if (this.alternateIdentifier_RO == null) {
                this.alternateIdentifier_RO = ((alternateIdentifier == null)?null:Collections.unmodifiableList(this.alternateIdentifier));
            }
            return this.alternateIdentifier_RO;
        }

        public static DataCiteMetadataV3 .AlternateIdentifiers.Builder<Void> builder() {
            return new DataCiteMetadataV3 .AlternateIdentifiers.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .AlternateIdentifiers.Builder<Void> copyOf(final DataCiteMetadataV3 .AlternateIdentifiers other) {
            return new DataCiteMetadataV3 .AlternateIdentifiers.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .AlternateIdentifiers.Builder<Void> copyOf(final DataCiteMetadataV3 .AlternateIdentifiers other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .AlternateIdentifiers.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .AlternateIdentifiers.Builder<Void> copyExcept(final DataCiteMetadataV3 .AlternateIdentifiers other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .AlternateIdentifiers.Builder<Void> copyOnly(final DataCiteMetadataV3 .AlternateIdentifiers other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("alternateIdentifier", alternateIdentifier).add("alternateIdentifier_RO", alternateIdentifier_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(alternateIdentifier, alternateIdentifier_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .AlternateIdentifiers o = ((DataCiteMetadataV3 .AlternateIdentifiers) other);
            return (Objects.equal(alternateIdentifier, o.alternateIdentifier)&&Objects.equal(alternateIdentifier_RO, o.alternateIdentifier_RO));
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="alternateIdentifierType" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class AlternateIdentifier {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "alternateIdentifierType", required = true)
            @XmlSchemaType(name = "anySimpleType")
            protected String alternateIdentifierType;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the alternateIdentifierType property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getAlternateIdentifierType() {
                return alternateIdentifierType;
            }

            /**
             * Sets the value of the alternateIdentifierType property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setAlternateIdentifierType(String value) {
                this.alternateIdentifierType = value;
            }

            public static DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<Void> builder() {
                return new DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<Void> copyOf(final DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier other) {
                return new DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<Void>(null, other, true);
            }

            public static DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<Void> copyOf(final DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                return new DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
            }

            public static DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<Void> copyExcept(final DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<Void> copyOnly(final DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("alternateIdentifierType", alternateIdentifierType).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, alternateIdentifierType);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier o = ((DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier) other);
                return (Objects.equal(value, o.value)&&Objects.equal(alternateIdentifierType, o.alternateIdentifierType));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier _product;
                private String value;
                private String alternateIdentifierType;

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier other, final boolean copy) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        this.value = other.value;
                        this.alternateIdentifierType = other.alternateIdentifierType;
                    } else {
                        this._product = other;
                    }
                }

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = other.value;
                        }
                        final PropertyTree alternateIdentifierTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("alternateIdentifierType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(alternateIdentifierTypePropertyTree!= null):((alternateIdentifierTypePropertyTree == null)||(!alternateIdentifierTypePropertyTree.isLeaf())))) {
                            this.alternateIdentifierType = other.alternateIdentifierType;
                        }
                    } else {
                        this._product = other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier >P init(final P product) {
                    product.value = this.value;
                    product.alternateIdentifierType = this.alternateIdentifierType;
                    return product;
                }

                public DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                public DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<TParentBuilder> withAlternateIdentifierType(final String alternateIdentifierType) {
                    this.alternateIdentifierType = alternateIdentifierType;
                    return this;
                }

                public DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier());
                    } else {
                        return ((DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier) this._product);
                    }
                }

            }

        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .AlternateIdentifiers _product;
            private List<DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>>> alternateIdentifier;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .AlternateIdentifiers other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    if (other.alternateIdentifier == null) {
                        this.alternateIdentifier = null;
                    } else {
                        this.alternateIdentifier = new ArrayList<DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>>>();
                        for (DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier item: other.alternateIdentifier) {
                            this.alternateIdentifier.add(((item == null)?null:new DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>>(this, item, true)));
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .AlternateIdentifiers other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree alternateIdentifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("alternateIdentifier"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(alternateIdentifierPropertyTree!= null):((alternateIdentifierPropertyTree == null)||(!alternateIdentifierPropertyTree.isLeaf())))) {
                        if (other.alternateIdentifier == null) {
                            this.alternateIdentifier = null;
                        } else {
                            this.alternateIdentifier = new ArrayList<DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>>>();
                            for (DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier item: other.alternateIdentifier) {
                                this.alternateIdentifier.add(((item == null)?null:new DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>>(this, item, true, alternateIdentifierPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .AlternateIdentifiers >P init(final P product) {
                if (this.alternateIdentifier!= null) {
                    final List<DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier> alternateIdentifier = new ArrayList<DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier>(this.alternateIdentifier.size());
                    for (DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>> item: this.alternateIdentifier) {
                        alternateIdentifier.add(item.build());
                    }
                    product.alternateIdentifier = alternateIdentifier;
                }
                product.alternateIdentifier_RO = ((alternateIdentifier == null)?null:Collections.unmodifiableList(product.alternateIdentifier));
                return product;
            }

            public DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder> addAlternateIdentifier(final List<? extends DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier> alternateIdentifier) {
                if (this.alternateIdentifier == null) {
                    this.alternateIdentifier = new ArrayList<DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier item: alternateIdentifier) {
                    this.alternateIdentifier.add(new DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>>(this, item, false));
                }
                return this;
            }

            public DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder> withAlternateIdentifier(final List<? extends DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier> alternateIdentifier) {
                if (this.alternateIdentifier!= null) {
                    this.alternateIdentifier.clear();
                }
                return addAlternateIdentifier(alternateIdentifier);
            }

            public DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder> addAlternateIdentifier(DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier... alternateIdentifier) {
                addAlternateIdentifier(Arrays.asList(alternateIdentifier));
                return this;
            }

            public DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder> withAlternateIdentifier(DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier... alternateIdentifier) {
                withAlternateIdentifier(Arrays.asList(alternateIdentifier));
                return this;
            }

            public DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<? extends DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>> addAlternateIdentifier() {
                if (this.alternateIdentifier == null) {
                    this.alternateIdentifier = new ArrayList<DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>> alternateIdentifierBuilder = new DataCiteMetadataV3 .AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadataV3 .AlternateIdentifiers.Builder<TParentBuilder>>(this, null, false);
                this.alternateIdentifier.add(alternateIdentifierBuilder);
                return alternateIdentifierBuilder;
            }

            public DataCiteMetadataV3 .AlternateIdentifiers build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .AlternateIdentifiers());
                } else {
                    return ((DataCiteMetadataV3 .AlternateIdentifiers) this._product);
                }
            }

        }

    }

    public static class Builder<TParentBuilder >{

        protected final TParentBuilder _parentBuilder;
        protected final DataCiteMetadataV3 _product;
        private DataCiteMetadataV3 .NameIdentifier.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> nameIdentifier;
        private DataCiteMetadataV3 .Creators.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> creators;
        private DataCiteMetadataV3 .Titles.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> titles;
        private String publisher;
        private String publicationYear;
        private DataCiteMetadataV3 .Subjects.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> subjects;
        private DataCiteMetadataV3 .Contributors.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> contributors;
        private DataCiteMetadataV3 .Dates.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> dates;
        private String language;
        private DataCiteMetadataV3 .ResourceType.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> resourceType;
        private DataCiteMetadataV3 .AlternateIdentifiers.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> alternateIdentifiers;
        private DataCiteMetadataV3 .RelatedIdentifiers.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> relatedIdentifiers;
        private DataCiteMetadataV3 .Sizes.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> sizes;
        private DataCiteMetadataV3 .Format.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> format;
        private String version;
        private DataCiteMetadataV3 .RightsList.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> rightsList;
        private DataCiteMetadataV3 .Description.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> description;
        private DataCiteMetadataV3 .GeoLocations.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>> geoLocations;

        public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 other, final boolean copy) {
            this._parentBuilder = parentBuilder;
            if (copy) {
                this._product = null;
                this.nameIdentifier = ((other.nameIdentifier == null)?null:new DataCiteMetadataV3 .NameIdentifier.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.nameIdentifier, true));
                this.creators = ((other.creators == null)?null:new DataCiteMetadataV3 .Creators.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.creators, true));
                this.titles = ((other.titles == null)?null:new DataCiteMetadataV3 .Titles.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.titles, true));
                this.publisher = other.publisher;
                this.publicationYear = other.publicationYear;
                this.subjects = ((other.subjects == null)?null:new DataCiteMetadataV3 .Subjects.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.subjects, true));
                this.contributors = ((other.contributors == null)?null:new DataCiteMetadataV3 .Contributors.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.contributors, true));
                this.dates = ((other.dates == null)?null:new DataCiteMetadataV3 .Dates.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.dates, true));
                this.language = other.language;
                this.resourceType = ((other.resourceType == null)?null:new DataCiteMetadataV3 .ResourceType.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.resourceType, true));
                this.alternateIdentifiers = ((other.alternateIdentifiers == null)?null:new DataCiteMetadataV3 .AlternateIdentifiers.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.alternateIdentifiers, true));
                this.relatedIdentifiers = ((other.relatedIdentifiers == null)?null:new DataCiteMetadataV3 .RelatedIdentifiers.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.relatedIdentifiers, true));
                this.sizes = ((other.sizes == null)?null:new DataCiteMetadataV3 .Sizes.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.sizes, true));
                this.format = ((other.format == null)?null:new DataCiteMetadataV3 .Format.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.format, true));
                this.version = other.version;
                this.rightsList = ((other.rightsList == null)?null:new DataCiteMetadataV3 .RightsList.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.rightsList, true));
                this.description = ((other.description == null)?null:new DataCiteMetadataV3 .Description.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.description, true));
                this.geoLocations = ((other.geoLocations == null)?null:new DataCiteMetadataV3 .GeoLocations.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.geoLocations, true));
            } else {
                this._product = other;
            }
        }

        public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
            this._parentBuilder = parentBuilder;
            if (copy) {
                this._product = null;
                final PropertyTree nameIdentifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("nameIdentifier"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(nameIdentifierPropertyTree!= null):((nameIdentifierPropertyTree == null)||(!nameIdentifierPropertyTree.isLeaf())))) {
                    this.nameIdentifier = ((other.nameIdentifier == null)?null:new DataCiteMetadataV3 .NameIdentifier.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.nameIdentifier, true, nameIdentifierPropertyTree, treeUse));
                }
                final PropertyTree creatorsPropertyTree = ((propertyTree == null)?null:propertyTree.get("creators"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(creatorsPropertyTree!= null):((creatorsPropertyTree == null)||(!creatorsPropertyTree.isLeaf())))) {
                    this.creators = ((other.creators == null)?null:new DataCiteMetadataV3 .Creators.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.creators, true, creatorsPropertyTree, treeUse));
                }
                final PropertyTree titlesPropertyTree = ((propertyTree == null)?null:propertyTree.get("titles"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(titlesPropertyTree!= null):((titlesPropertyTree == null)||(!titlesPropertyTree.isLeaf())))) {
                    this.titles = ((other.titles == null)?null:new DataCiteMetadataV3 .Titles.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.titles, true, titlesPropertyTree, treeUse));
                }
                final PropertyTree publisherPropertyTree = ((propertyTree == null)?null:propertyTree.get("publisher"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(publisherPropertyTree!= null):((publisherPropertyTree == null)||(!publisherPropertyTree.isLeaf())))) {
                    this.publisher = other.publisher;
                }
                final PropertyTree publicationYearPropertyTree = ((propertyTree == null)?null:propertyTree.get("publicationYear"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(publicationYearPropertyTree!= null):((publicationYearPropertyTree == null)||(!publicationYearPropertyTree.isLeaf())))) {
                    this.publicationYear = other.publicationYear;
                }
                final PropertyTree subjectsPropertyTree = ((propertyTree == null)?null:propertyTree.get("subjects"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(subjectsPropertyTree!= null):((subjectsPropertyTree == null)||(!subjectsPropertyTree.isLeaf())))) {
                    this.subjects = ((other.subjects == null)?null:new DataCiteMetadataV3 .Subjects.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.subjects, true, subjectsPropertyTree, treeUse));
                }
                final PropertyTree contributorsPropertyTree = ((propertyTree == null)?null:propertyTree.get("contributors"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(contributorsPropertyTree!= null):((contributorsPropertyTree == null)||(!contributorsPropertyTree.isLeaf())))) {
                    this.contributors = ((other.contributors == null)?null:new DataCiteMetadataV3 .Contributors.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.contributors, true, contributorsPropertyTree, treeUse));
                }
                final PropertyTree datesPropertyTree = ((propertyTree == null)?null:propertyTree.get("dates"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(datesPropertyTree!= null):((datesPropertyTree == null)||(!datesPropertyTree.isLeaf())))) {
                    this.dates = ((other.dates == null)?null:new DataCiteMetadataV3 .Dates.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.dates, true, datesPropertyTree, treeUse));
                }
                final PropertyTree languagePropertyTree = ((propertyTree == null)?null:propertyTree.get("language"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(languagePropertyTree!= null):((languagePropertyTree == null)||(!languagePropertyTree.isLeaf())))) {
                    this.language = other.language;
                }
                final PropertyTree resourceTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("resourceType"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(resourceTypePropertyTree!= null):((resourceTypePropertyTree == null)||(!resourceTypePropertyTree.isLeaf())))) {
                    this.resourceType = ((other.resourceType == null)?null:new DataCiteMetadataV3 .ResourceType.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.resourceType, true, resourceTypePropertyTree, treeUse));
                }
                final PropertyTree alternateIdentifiersPropertyTree = ((propertyTree == null)?null:propertyTree.get("alternateIdentifiers"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(alternateIdentifiersPropertyTree!= null):((alternateIdentifiersPropertyTree == null)||(!alternateIdentifiersPropertyTree.isLeaf())))) {
                    this.alternateIdentifiers = ((other.alternateIdentifiers == null)?null:new DataCiteMetadataV3 .AlternateIdentifiers.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.alternateIdentifiers, true, alternateIdentifiersPropertyTree, treeUse));
                }
                final PropertyTree relatedIdentifiersPropertyTree = ((propertyTree == null)?null:propertyTree.get("relatedIdentifiers"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(relatedIdentifiersPropertyTree!= null):((relatedIdentifiersPropertyTree == null)||(!relatedIdentifiersPropertyTree.isLeaf())))) {
                    this.relatedIdentifiers = ((other.relatedIdentifiers == null)?null:new DataCiteMetadataV3 .RelatedIdentifiers.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.relatedIdentifiers, true, relatedIdentifiersPropertyTree, treeUse));
                }
                final PropertyTree sizesPropertyTree = ((propertyTree == null)?null:propertyTree.get("sizes"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(sizesPropertyTree!= null):((sizesPropertyTree == null)||(!sizesPropertyTree.isLeaf())))) {
                    this.sizes = ((other.sizes == null)?null:new DataCiteMetadataV3 .Sizes.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.sizes, true, sizesPropertyTree, treeUse));
                }
                final PropertyTree formatPropertyTree = ((propertyTree == null)?null:propertyTree.get("format"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(formatPropertyTree!= null):((formatPropertyTree == null)||(!formatPropertyTree.isLeaf())))) {
                    this.format = ((other.format == null)?null:new DataCiteMetadataV3 .Format.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.format, true, formatPropertyTree, treeUse));
                }
                final PropertyTree versionPropertyTree = ((propertyTree == null)?null:propertyTree.get("version"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(versionPropertyTree!= null):((versionPropertyTree == null)||(!versionPropertyTree.isLeaf())))) {
                    this.version = other.version;
                }
                final PropertyTree rightsListPropertyTree = ((propertyTree == null)?null:propertyTree.get("rightsList"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(rightsListPropertyTree!= null):((rightsListPropertyTree == null)||(!rightsListPropertyTree.isLeaf())))) {
                    this.rightsList = ((other.rightsList == null)?null:new DataCiteMetadataV3 .RightsList.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.rightsList, true, rightsListPropertyTree, treeUse));
                }
                final PropertyTree descriptionPropertyTree = ((propertyTree == null)?null:propertyTree.get("description"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(descriptionPropertyTree!= null):((descriptionPropertyTree == null)||(!descriptionPropertyTree.isLeaf())))) {
                    this.description = ((other.description == null)?null:new DataCiteMetadataV3 .Description.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.description, true, descriptionPropertyTree, treeUse));
                }
                final PropertyTree geoLocationsPropertyTree = ((propertyTree == null)?null:propertyTree.get("geoLocations"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(geoLocationsPropertyTree!= null):((geoLocationsPropertyTree == null)||(!geoLocationsPropertyTree.isLeaf())))) {
                    this.geoLocations = ((other.geoLocations == null)?null:new DataCiteMetadataV3 .GeoLocations.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, other.geoLocations, true, geoLocationsPropertyTree, treeUse));
                }
            } else {
                this._product = other;
            }
        }

        public TParentBuilder end() {
            return this._parentBuilder;
        }

        protected<P extends DataCiteMetadataV3 >P init(final P product) {
            product.nameIdentifier = ((this.nameIdentifier == null)?null:this.nameIdentifier.build());
            product.creators = ((this.creators == null)?null:this.creators.build());
            product.titles = ((this.titles == null)?null:this.titles.build());
            product.publisher = this.publisher;
            product.publicationYear = this.publicationYear;
            product.subjects = ((this.subjects == null)?null:this.subjects.build());
            product.contributors = ((this.contributors == null)?null:this.contributors.build());
            product.dates = ((this.dates == null)?null:this.dates.build());
            product.language = this.language;
            product.resourceType = ((this.resourceType == null)?null:this.resourceType.build());
            product.alternateIdentifiers = ((this.alternateIdentifiers == null)?null:this.alternateIdentifiers.build());
            product.relatedIdentifiers = ((this.relatedIdentifiers == null)?null:this.relatedIdentifiers.build());
            product.sizes = ((this.sizes == null)?null:this.sizes.build());
            product.format = ((this.format == null)?null:this.format.build());
            product.version = this.version;
            product.rightsList = ((this.rightsList == null)?null:this.rightsList.build());
            product.description = ((this.description == null)?null:this.description.build());
            product.geoLocations = ((this.geoLocations == null)?null:this.geoLocations.build());
            return product;
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withNameIdentifier(final DataCiteMetadataV3 .NameIdentifier nameIdentifier) {
            this.nameIdentifier = ((nameIdentifier == null)?null:new DataCiteMetadataV3 .NameIdentifier.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, nameIdentifier, false));
            return this;
        }

        public DataCiteMetadataV3 .NameIdentifier.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withNameIdentifier() {
            return this.nameIdentifier = new DataCiteMetadataV3 .NameIdentifier.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withCreators(final DataCiteMetadataV3 .Creators creators) {
            this.creators = ((creators == null)?null:new DataCiteMetadataV3 .Creators.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, creators, false));
            return this;
        }

        public DataCiteMetadataV3 .Creators.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withCreators() {
            return this.creators = new DataCiteMetadataV3 .Creators.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withTitles(final DataCiteMetadataV3 .Titles titles) {
            this.titles = ((titles == null)?null:new DataCiteMetadataV3 .Titles.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, titles, false));
            return this;
        }

        public DataCiteMetadataV3 .Titles.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withTitles() {
            return this.titles = new DataCiteMetadataV3 .Titles.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withPublisher(final String publisher) {
            this.publisher = publisher;
            return this;
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withPublicationYear(final String publicationYear) {
            this.publicationYear = publicationYear;
            return this;
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withSubjects(final DataCiteMetadataV3 .Subjects subjects) {
            this.subjects = ((subjects == null)?null:new DataCiteMetadataV3 .Subjects.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, subjects, false));
            return this;
        }

        public DataCiteMetadataV3 .Subjects.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withSubjects() {
            return this.subjects = new DataCiteMetadataV3 .Subjects.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withContributors(final DataCiteMetadataV3 .Contributors contributors) {
            this.contributors = ((contributors == null)?null:new DataCiteMetadataV3 .Contributors.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, contributors, false));
            return this;
        }

        public DataCiteMetadataV3 .Contributors.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withContributors() {
            return this.contributors = new DataCiteMetadataV3 .Contributors.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withDates(final DataCiteMetadataV3 .Dates dates) {
            this.dates = ((dates == null)?null:new DataCiteMetadataV3 .Dates.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, dates, false));
            return this;
        }

        public DataCiteMetadataV3 .Dates.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withDates() {
            return this.dates = new DataCiteMetadataV3 .Dates.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withLanguage(final String language) {
            this.language = language;
            return this;
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withResourceType(final DataCiteMetadataV3 .ResourceType resourceType) {
            this.resourceType = ((resourceType == null)?null:new DataCiteMetadataV3 .ResourceType.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, resourceType, false));
            return this;
        }

        public DataCiteMetadataV3 .ResourceType.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withResourceType() {
            return this.resourceType = new DataCiteMetadataV3 .ResourceType.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withAlternateIdentifiers(final DataCiteMetadataV3 .AlternateIdentifiers alternateIdentifiers) {
            this.alternateIdentifiers = ((alternateIdentifiers == null)?null:new DataCiteMetadataV3 .AlternateIdentifiers.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, alternateIdentifiers, false));
            return this;
        }

        public DataCiteMetadataV3 .AlternateIdentifiers.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withAlternateIdentifiers() {
            return this.alternateIdentifiers = new DataCiteMetadataV3 .AlternateIdentifiers.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withRelatedIdentifiers(final DataCiteMetadataV3 .RelatedIdentifiers relatedIdentifiers) {
            this.relatedIdentifiers = ((relatedIdentifiers == null)?null:new DataCiteMetadataV3 .RelatedIdentifiers.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, relatedIdentifiers, false));
            return this;
        }

        public DataCiteMetadataV3 .RelatedIdentifiers.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withRelatedIdentifiers() {
            return this.relatedIdentifiers = new DataCiteMetadataV3 .RelatedIdentifiers.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withSizes(final DataCiteMetadataV3 .Sizes sizes) {
            this.sizes = ((sizes == null)?null:new DataCiteMetadataV3 .Sizes.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, sizes, false));
            return this;
        }

        public DataCiteMetadataV3 .Sizes.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withSizes() {
            return this.sizes = new DataCiteMetadataV3 .Sizes.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withFormat(final DataCiteMetadataV3 .Format format) {
            this.format = ((format == null)?null:new DataCiteMetadataV3 .Format.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, format, false));
            return this;
        }

        public DataCiteMetadataV3 .Format.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withFormat() {
            return this.format = new DataCiteMetadataV3 .Format.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withVersion(final String version) {
            this.version = version;
            return this;
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withRightsList(final DataCiteMetadataV3 .RightsList rightsList) {
            this.rightsList = ((rightsList == null)?null:new DataCiteMetadataV3 .RightsList.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, rightsList, false));
            return this;
        }

        public DataCiteMetadataV3 .RightsList.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withRightsList() {
            return this.rightsList = new DataCiteMetadataV3 .RightsList.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withDescription(final DataCiteMetadataV3 .Description description) {
            this.description = ((description == null)?null:new DataCiteMetadataV3 .Description.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, description, false));
            return this;
        }

        public DataCiteMetadataV3 .Description.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withDescription() {
            return this.description = new DataCiteMetadataV3 .Description.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 .Builder<TParentBuilder> withGeoLocations(final DataCiteMetadataV3 .GeoLocations geoLocations) {
            this.geoLocations = ((geoLocations == null)?null:new DataCiteMetadataV3 .GeoLocations.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, geoLocations, false));
            return this;
        }

        public DataCiteMetadataV3 .GeoLocations.Builder<? extends DataCiteMetadataV3 .Builder<TParentBuilder>> withGeoLocations() {
            return this.geoLocations = new DataCiteMetadataV3 .GeoLocations.Builder<DataCiteMetadataV3 .Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadataV3 build() {
            if (this._product == null) {
                return this.init(new DataCiteMetadataV3());
            } else {
                return ((DataCiteMetadataV3) this._product);
            }
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="contributor" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="contributorName">
     *                     &lt;simpleType>
     *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *                         &lt;minLength value="1"/>
     *                       &lt;/restriction>
     *                     &lt;/simpleType>
     *                   &lt;/element>
     *                   &lt;element name="nameIdentifier" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;simpleContent>
     *                         &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                           &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *                           &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                         &lt;/extension>
     *                       &lt;/simpleContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
     *                 &lt;/sequence>
     *                 &lt;attribute name="contributorType" use="required" type="{http://datacite.org/schema/kernel-3}contributorType" />
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "contributor"
    })
    public static class Contributors {

        protected List<DataCiteMetadataV3 .Contributors.Contributor> contributor;
        protected transient List<DataCiteMetadataV3 .Contributors.Contributor> contributor_RO = null;

        public List<DataCiteMetadataV3 .Contributors.Contributor> getContributor() {
            if (this.contributor == null) {
                this.contributor = new ArrayList<DataCiteMetadataV3 .Contributors.Contributor>();
            }
            if (this.contributor_RO == null) {
                this.contributor_RO = ((contributor == null)?null:Collections.unmodifiableList(this.contributor));
            }
            return this.contributor_RO;
        }

        public static DataCiteMetadataV3 .Contributors.Builder<Void> builder() {
            return new DataCiteMetadataV3 .Contributors.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .Contributors.Builder<Void> copyOf(final DataCiteMetadataV3 .Contributors other) {
            return new DataCiteMetadataV3 .Contributors.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .Contributors.Builder<Void> copyOf(final DataCiteMetadataV3 .Contributors other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .Contributors.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .Contributors.Builder<Void> copyExcept(final DataCiteMetadataV3 .Contributors other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .Contributors.Builder<Void> copyOnly(final DataCiteMetadataV3 .Contributors other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("contributor", contributor).add("contributor_RO", contributor_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(contributor, contributor_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .Contributors o = ((DataCiteMetadataV3 .Contributors) other);
            return (Objects.equal(contributor, o.contributor)&&Objects.equal(contributor_RO, o.contributor_RO));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .Contributors _product;
            private List<DataCiteMetadataV3 .Contributors.Contributor.Builder<DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>>> contributor;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Contributors other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    if (other.contributor == null) {
                        this.contributor = null;
                    } else {
                        this.contributor = new ArrayList<DataCiteMetadataV3 .Contributors.Contributor.Builder<DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>>>();
                        for (DataCiteMetadataV3 .Contributors.Contributor item: other.contributor) {
                            this.contributor.add(((item == null)?null:new DataCiteMetadataV3 .Contributors.Contributor.Builder<DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>>(this, item, true)));
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Contributors other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree contributorPropertyTree = ((propertyTree == null)?null:propertyTree.get("contributor"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(contributorPropertyTree!= null):((contributorPropertyTree == null)||(!contributorPropertyTree.isLeaf())))) {
                        if (other.contributor == null) {
                            this.contributor = null;
                        } else {
                            this.contributor = new ArrayList<DataCiteMetadataV3 .Contributors.Contributor.Builder<DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>>>();
                            for (DataCiteMetadataV3 .Contributors.Contributor item: other.contributor) {
                                this.contributor.add(((item == null)?null:new DataCiteMetadataV3 .Contributors.Contributor.Builder<DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>>(this, item, true, contributorPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .Contributors >P init(final P product) {
                if (this.contributor!= null) {
                    final List<DataCiteMetadataV3 .Contributors.Contributor> contributor = new ArrayList<DataCiteMetadataV3 .Contributors.Contributor>(this.contributor.size());
                    for (DataCiteMetadataV3 .Contributors.Contributor.Builder<DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>> item: this.contributor) {
                        contributor.add(item.build());
                    }
                    product.contributor = contributor;
                }
                product.contributor_RO = ((contributor == null)?null:Collections.unmodifiableList(product.contributor));
                return product;
            }

            public DataCiteMetadataV3 .Contributors.Builder<TParentBuilder> addContributor(final List<? extends DataCiteMetadataV3 .Contributors.Contributor> contributor) {
                if (this.contributor == null) {
                    this.contributor = new ArrayList<DataCiteMetadataV3 .Contributors.Contributor.Builder<DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadataV3 .Contributors.Contributor item: contributor) {
                    this.contributor.add(new DataCiteMetadataV3 .Contributors.Contributor.Builder<DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>>(this, item, false));
                }
                return this;
            }

            public DataCiteMetadataV3 .Contributors.Builder<TParentBuilder> withContributor(final List<? extends DataCiteMetadataV3 .Contributors.Contributor> contributor) {
                if (this.contributor!= null) {
                    this.contributor.clear();
                }
                return addContributor(contributor);
            }

            public DataCiteMetadataV3 .Contributors.Builder<TParentBuilder> addContributor(DataCiteMetadataV3 .Contributors.Contributor... contributor) {
                addContributor(Arrays.asList(contributor));
                return this;
            }

            public DataCiteMetadataV3 .Contributors.Builder<TParentBuilder> withContributor(DataCiteMetadataV3 .Contributors.Contributor... contributor) {
                withContributor(Arrays.asList(contributor));
                return this;
            }

            public DataCiteMetadataV3 .Contributors.Contributor.Builder<? extends DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>> addContributor() {
                if (this.contributor == null) {
                    this.contributor = new ArrayList<DataCiteMetadataV3 .Contributors.Contributor.Builder<DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadataV3 .Contributors.Contributor.Builder<DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>> contributorBuilder = new DataCiteMetadataV3 .Contributors.Contributor.Builder<DataCiteMetadataV3 .Contributors.Builder<TParentBuilder>>(this, null, false);
                this.contributor.add(contributorBuilder);
                return contributorBuilder;
            }

            public DataCiteMetadataV3 .Contributors build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .Contributors());
                } else {
                    return ((DataCiteMetadataV3 .Contributors) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="contributorName">
         *           &lt;simpleType>
         *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
         *               &lt;minLength value="1"/>
         *             &lt;/restriction>
         *           &lt;/simpleType>
         *         &lt;/element>
         *         &lt;element name="nameIdentifier" minOccurs="0">
         *           &lt;complexType>
         *             &lt;simpleContent>
         *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *                 &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *                 &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *               &lt;/extension>
         *             &lt;/simpleContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
         *       &lt;/sequence>
         *       &lt;attribute name="contributorType" use="required" type="{http://datacite.org/schema/kernel-3}contributorType" />
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "contributorName",
            "nameIdentifier",
            "affiliation"
        })
        public static class Contributor {

            @XmlElement(required = true)
            protected String contributorName;
            protected DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier nameIdentifier;
            protected List<Object> affiliation;
            @XmlAttribute(name = "contributorType", required = true)
            protected ContributorType contributorType;
            protected transient List<Object> affiliation_RO = null;

            /**
             * Gets the value of the contributorName property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getContributorName() {
                return contributorName;
            }

            /**
             * Sets the value of the contributorName property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setContributorName(String value) {
                this.contributorName = value;
            }

            /**
             * Gets the value of the nameIdentifier property.
             * 
             * @return
             *     possible object is
             *     {@link DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier }
             *     
             */
            public DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier getNameIdentifier() {
                return nameIdentifier;
            }

            /**
             * Sets the value of the nameIdentifier property.
             * 
             * @param value
             *     allowed object is
             *     {@link DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier }
             *     
             */
            protected void setNameIdentifier(DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier value) {
                this.nameIdentifier = value;
            }

            /**
             * Gets the value of the contributorType property.
             * 
             * @return
             *     possible object is
             *     {@link ContributorType }
             *     
             */
            public ContributorType getContributorType() {
                return contributorType;
            }

            /**
             * Sets the value of the contributorType property.
             * 
             * @param value
             *     allowed object is
             *     {@link ContributorType }
             *     
             */
            protected void setContributorType(ContributorType value) {
                this.contributorType = value;
            }

            public List<Object> getAffiliation() {
                if (this.affiliation == null) {
                    this.affiliation = new ArrayList<Object>();
                }
                if (this.affiliation_RO == null) {
                    this.affiliation_RO = ((affiliation == null)?null:Collections.unmodifiableList(this.affiliation));
                }
                return this.affiliation_RO;
            }

            public static DataCiteMetadataV3 .Contributors.Contributor.Builder<Void> builder() {
                return new DataCiteMetadataV3 .Contributors.Contributor.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadataV3 .Contributors.Contributor.Builder<Void> copyOf(final DataCiteMetadataV3 .Contributors.Contributor other) {
                return new DataCiteMetadataV3 .Contributors.Contributor.Builder<Void>(null, other, true);
            }

            public static DataCiteMetadataV3 .Contributors.Contributor.Builder<Void> copyOf(final DataCiteMetadataV3 .Contributors.Contributor other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                return new DataCiteMetadataV3 .Contributors.Contributor.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
            }

            public static DataCiteMetadataV3 .Contributors.Contributor.Builder<Void> copyExcept(final DataCiteMetadataV3 .Contributors.Contributor other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadataV3 .Contributors.Contributor.Builder<Void> copyOnly(final DataCiteMetadataV3 .Contributors.Contributor other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("contributorName", contributorName).add("nameIdentifier", nameIdentifier).add("affiliation", affiliation).add("contributorType", contributorType).add("affiliation_RO", affiliation_RO).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(contributorName, nameIdentifier, affiliation, contributorType, affiliation_RO);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadataV3 .Contributors.Contributor o = ((DataCiteMetadataV3 .Contributors.Contributor) other);
                return ((((Objects.equal(contributorName, o.contributorName)&&Objects.equal(nameIdentifier, o.nameIdentifier))&&Objects.equal(affiliation, o.affiliation))&&Objects.equal(contributorType, o.contributorType))&&Objects.equal(affiliation_RO, o.affiliation_RO));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadataV3 .Contributors.Contributor _product;
                private String contributorName;
                private DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder>> nameIdentifier;
                private List<Object> affiliation;
                private ContributorType contributorType;

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Contributors.Contributor other, final boolean copy) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        this.contributorName = other.contributorName;
                        this.nameIdentifier = ((other.nameIdentifier == null)?null:new DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder>>(this, other.nameIdentifier, true));
                        this.affiliation = ((other.affiliation == null)?null:new ArrayList<Object>(other.affiliation));
                        this.contributorType = other.contributorType;
                    } else {
                        this._product = other;
                    }
                }

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Contributors.Contributor other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        final PropertyTree contributorNamePropertyTree = ((propertyTree == null)?null:propertyTree.get("contributorName"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(contributorNamePropertyTree!= null):((contributorNamePropertyTree == null)||(!contributorNamePropertyTree.isLeaf())))) {
                            this.contributorName = other.contributorName;
                        }
                        final PropertyTree nameIdentifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("nameIdentifier"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(nameIdentifierPropertyTree!= null):((nameIdentifierPropertyTree == null)||(!nameIdentifierPropertyTree.isLeaf())))) {
                            this.nameIdentifier = ((other.nameIdentifier == null)?null:new DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder>>(this, other.nameIdentifier, true, nameIdentifierPropertyTree, treeUse));
                        }
                        final PropertyTree affiliationPropertyTree = ((propertyTree == null)?null:propertyTree.get("affiliation"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(affiliationPropertyTree!= null):((affiliationPropertyTree == null)||(!affiliationPropertyTree.isLeaf())))) {
                            this.affiliation = ((other.affiliation == null)?null:new ArrayList<Object>(other.affiliation));
                        }
                        final PropertyTree contributorTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("contributorType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(contributorTypePropertyTree!= null):((contributorTypePropertyTree == null)||(!contributorTypePropertyTree.isLeaf())))) {
                            this.contributorType = other.contributorType;
                        }
                    } else {
                        this._product = other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadataV3 .Contributors.Contributor >P init(final P product) {
                    product.contributorName = this.contributorName;
                    product.nameIdentifier = ((this.nameIdentifier == null)?null:this.nameIdentifier.build());
                    product.affiliation = this.affiliation;
                    product.affiliation_RO = ((affiliation == null)?null:Collections.unmodifiableList(product.affiliation));
                    product.contributorType = this.contributorType;
                    return product;
                }

                public DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder> withContributorName(final String contributorName) {
                    this.contributorName = contributorName;
                    return this;
                }

                public DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder> withNameIdentifier(final DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier nameIdentifier) {
                    this.nameIdentifier = ((nameIdentifier == null)?null:new DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder>>(this, nameIdentifier, false));
                    return this;
                }

                public DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<? extends DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder>> withNameIdentifier() {
                    return this.nameIdentifier = new DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder>>(this, null, false);
                }

                public DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder> addAffiliation(final List<?> affiliation) {
                    if (this.affiliation == null) {
                        this.affiliation = new ArrayList<Object>();
                    }
                    this.affiliation.addAll(affiliation);
                    return this;
                }

                public DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder> withAffiliation(final List<?> affiliation) {
                    if (this.affiliation!= null) {
                        this.affiliation.clear();
                    }
                    return addAffiliation(affiliation);
                }

                public DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder> addAffiliation(Object... affiliation) {
                    addAffiliation(Arrays.asList(affiliation));
                    return this;
                }

                public DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder> withAffiliation(Object... affiliation) {
                    withAffiliation(Arrays.asList(affiliation));
                    return this;
                }

                public DataCiteMetadataV3 .Contributors.Contributor.Builder<TParentBuilder> withContributorType(final ContributorType contributorType) {
                    this.contributorType = contributorType;
                    return this;
                }

                public DataCiteMetadataV3 .Contributors.Contributor build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadataV3 .Contributors.Contributor());
                    } else {
                        return ((DataCiteMetadataV3 .Contributors.Contributor) this._product);
                    }
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;simpleContent>
             *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
             *       &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
             *       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
             *     &lt;/extension>
             *   &lt;/simpleContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "value"
            })
            public static class NameIdentifier {

                @XmlValue
                protected String value;
                @XmlAttribute(name = "nameIdentifierScheme", required = true)
                @XmlSchemaType(name = "anySimpleType")
                protected String nameIdentifierScheme;
                @XmlAttribute(name = "schemeURI")
                @XmlSchemaType(name = "anyURI")
                protected String schemeURI;

                /**
                 * Gets the value of the value property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getValue() {
                    return value;
                }

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                protected void setValue(String value) {
                    this.value = value;
                }

                /**
                 * Gets the value of the nameIdentifierScheme property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getNameIdentifierScheme() {
                    return nameIdentifierScheme;
                }

                /**
                 * Sets the value of the nameIdentifierScheme property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                protected void setNameIdentifierScheme(String value) {
                    this.nameIdentifierScheme = value;
                }

                /**
                 * Gets the value of the schemeURI property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getSchemeURI() {
                    return schemeURI;
                }

                /**
                 * Sets the value of the schemeURI property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                protected void setSchemeURI(String value) {
                    this.schemeURI = value;
                }

                public static DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<Void> builder() {
                    return new DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<Void>(null, null, false);
                }

                public static DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<Void> copyOf(final DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier other) {
                    return new DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<Void>(null, other, true);
                }

                public static DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<Void> copyOf(final DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                    return new DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
                }

                public static DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<Void> copyExcept(final DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier other, final PropertyTree propertyTree) {
                    return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
                }

                public static DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<Void> copyOnly(final DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier other, final PropertyTree propertyTree) {
                    return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
                }

                @Override
                public String toString() {
                    return Objects.toStringHelper(this).add("value", value).add("nameIdentifierScheme", nameIdentifierScheme).add("schemeURI", schemeURI).toString();
                }

                @Override
                public int hashCode() {
                    return Objects.hashCode(value, nameIdentifierScheme, schemeURI);
                }

                @Override
                public boolean equals(Object other) {
                    if (this == other) {
                        return true;
                    }
                    if (other == null) {
                        return false;
                    }
                    if (getClass()!= other.getClass()) {
                        return false;
                    }
                    final DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier o = ((DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier) other);
                    return ((Objects.equal(value, o.value)&&Objects.equal(nameIdentifierScheme, o.nameIdentifierScheme))&&Objects.equal(schemeURI, o.schemeURI));
                }

                public static class Builder<TParentBuilder >{

                    protected final TParentBuilder _parentBuilder;
                    protected final DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier _product;
                    private String value;
                    private String nameIdentifierScheme;
                    private String schemeURI;

                    public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier other, final boolean copy) {
                        this._parentBuilder = parentBuilder;
                        if (copy) {
                            this._product = null;
                            this.value = other.value;
                            this.nameIdentifierScheme = other.nameIdentifierScheme;
                            this.schemeURI = other.schemeURI;
                        } else {
                            this._product = other;
                        }
                    }

                    public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                        this._parentBuilder = parentBuilder;
                        if (copy) {
                            this._product = null;
                            final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                                this.value = other.value;
                            }
                            final PropertyTree nameIdentifierSchemePropertyTree = ((propertyTree == null)?null:propertyTree.get("nameIdentifierScheme"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(nameIdentifierSchemePropertyTree!= null):((nameIdentifierSchemePropertyTree == null)||(!nameIdentifierSchemePropertyTree.isLeaf())))) {
                                this.nameIdentifierScheme = other.nameIdentifierScheme;
                            }
                            final PropertyTree schemeURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("schemeURI"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(schemeURIPropertyTree!= null):((schemeURIPropertyTree == null)||(!schemeURIPropertyTree.isLeaf())))) {
                                this.schemeURI = other.schemeURI;
                            }
                        } else {
                            this._product = other;
                        }
                    }

                    public TParentBuilder end() {
                        return this._parentBuilder;
                    }

                    protected<P extends DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier >P init(final P product) {
                        product.value = this.value;
                        product.nameIdentifierScheme = this.nameIdentifierScheme;
                        product.schemeURI = this.schemeURI;
                        return product;
                    }

                    public DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<TParentBuilder> withValue(final String value) {
                        this.value = value;
                        return this;
                    }

                    public DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<TParentBuilder> withNameIdentifierScheme(final String nameIdentifierScheme) {
                        this.nameIdentifierScheme = nameIdentifierScheme;
                        return this;
                    }

                    public DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier.Builder<TParentBuilder> withSchemeURI(final String schemeURI) {
                        this.schemeURI = schemeURI;
                        return this;
                    }

                    public DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier build() {
                        if (this._product == null) {
                            return this.init(new DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier());
                        } else {
                            return ((DataCiteMetadataV3 .Contributors.Contributor.NameIdentifier) this._product);
                        }
                    }

                }

            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="creator" maxOccurs="unbounded">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="creatorName">
     *                     &lt;simpleType>
     *                       &lt;restriction base="{http://datacite.org/schema/kernel-3}nonemptycontentStringType">
     *                       &lt;/restriction>
     *                     &lt;/simpleType>
     *                   &lt;/element>
     *                   &lt;element name="nameIdentifier" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;simpleContent>
     *                         &lt;extension base="&lt;http://datacite.org/schema/kernel-3>nonemptycontentStringType">
     *                           &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *                           &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                         &lt;/extension>
     *                       &lt;/simpleContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "creator"
    })
    public static class Creators {

        @XmlElement(required = true)
        protected List<DataCiteMetadataV3 .Creators.Creator> creator;
        protected transient List<DataCiteMetadataV3 .Creators.Creator> creator_RO = null;

        public List<DataCiteMetadataV3 .Creators.Creator> getCreator() {
            if (this.creator == null) {
                this.creator = new ArrayList<DataCiteMetadataV3 .Creators.Creator>();
            }
            if (this.creator_RO == null) {
                this.creator_RO = ((creator == null)?null:Collections.unmodifiableList(this.creator));
            }
            return this.creator_RO;
        }

        public static DataCiteMetadataV3 .Creators.Builder<Void> builder() {
            return new DataCiteMetadataV3 .Creators.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .Creators.Builder<Void> copyOf(final DataCiteMetadataV3 .Creators other) {
            return new DataCiteMetadataV3 .Creators.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .Creators.Builder<Void> copyOf(final DataCiteMetadataV3 .Creators other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .Creators.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .Creators.Builder<Void> copyExcept(final DataCiteMetadataV3 .Creators other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .Creators.Builder<Void> copyOnly(final DataCiteMetadataV3 .Creators other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("creator", creator).add("creator_RO", creator_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(creator, creator_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .Creators o = ((DataCiteMetadataV3 .Creators) other);
            return (Objects.equal(creator, o.creator)&&Objects.equal(creator_RO, o.creator_RO));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .Creators _product;
            private List<DataCiteMetadataV3 .Creators.Creator.Builder<DataCiteMetadataV3 .Creators.Builder<TParentBuilder>>> creator;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Creators other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    if (other.creator == null) {
                        this.creator = null;
                    } else {
                        this.creator = new ArrayList<DataCiteMetadataV3 .Creators.Creator.Builder<DataCiteMetadataV3 .Creators.Builder<TParentBuilder>>>();
                        for (DataCiteMetadataV3 .Creators.Creator item: other.creator) {
                            this.creator.add(((item == null)?null:new DataCiteMetadataV3 .Creators.Creator.Builder<DataCiteMetadataV3 .Creators.Builder<TParentBuilder>>(this, item, true)));
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Creators other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree creatorPropertyTree = ((propertyTree == null)?null:propertyTree.get("creator"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(creatorPropertyTree!= null):((creatorPropertyTree == null)||(!creatorPropertyTree.isLeaf())))) {
                        if (other.creator == null) {
                            this.creator = null;
                        } else {
                            this.creator = new ArrayList<DataCiteMetadataV3 .Creators.Creator.Builder<DataCiteMetadataV3 .Creators.Builder<TParentBuilder>>>();
                            for (DataCiteMetadataV3 .Creators.Creator item: other.creator) {
                                this.creator.add(((item == null)?null:new DataCiteMetadataV3 .Creators.Creator.Builder<DataCiteMetadataV3 .Creators.Builder<TParentBuilder>>(this, item, true, creatorPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .Creators >P init(final P product) {
                if (this.creator!= null) {
                    final List<DataCiteMetadataV3 .Creators.Creator> creator = new ArrayList<DataCiteMetadataV3 .Creators.Creator>(this.creator.size());
                    for (DataCiteMetadataV3 .Creators.Creator.Builder<DataCiteMetadataV3 .Creators.Builder<TParentBuilder>> item: this.creator) {
                        creator.add(item.build());
                    }
                    product.creator = creator;
                }
                product.creator_RO = ((creator == null)?null:Collections.unmodifiableList(product.creator));
                return product;
            }

            public DataCiteMetadataV3 .Creators.Builder<TParentBuilder> addCreator(final List<? extends DataCiteMetadataV3 .Creators.Creator> creator) {
                if (this.creator == null) {
                    this.creator = new ArrayList<DataCiteMetadataV3 .Creators.Creator.Builder<DataCiteMetadataV3 .Creators.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadataV3 .Creators.Creator item: creator) {
                    this.creator.add(new DataCiteMetadataV3 .Creators.Creator.Builder<DataCiteMetadataV3 .Creators.Builder<TParentBuilder>>(this, item, false));
                }
                return this;
            }

            public DataCiteMetadataV3 .Creators.Builder<TParentBuilder> withCreator(final List<? extends DataCiteMetadataV3 .Creators.Creator> creator) {
                if (this.creator!= null) {
                    this.creator.clear();
                }
                return addCreator(creator);
            }

            public DataCiteMetadataV3 .Creators.Builder<TParentBuilder> addCreator(DataCiteMetadataV3 .Creators.Creator... creator) {
                addCreator(Arrays.asList(creator));
                return this;
            }

            public DataCiteMetadataV3 .Creators.Builder<TParentBuilder> withCreator(DataCiteMetadataV3 .Creators.Creator... creator) {
                withCreator(Arrays.asList(creator));
                return this;
            }

            public DataCiteMetadataV3 .Creators.Creator.Builder<? extends DataCiteMetadataV3 .Creators.Builder<TParentBuilder>> addCreator() {
                if (this.creator == null) {
                    this.creator = new ArrayList<DataCiteMetadataV3 .Creators.Creator.Builder<DataCiteMetadataV3 .Creators.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadataV3 .Creators.Creator.Builder<DataCiteMetadataV3 .Creators.Builder<TParentBuilder>> creatorBuilder = new DataCiteMetadataV3 .Creators.Creator.Builder<DataCiteMetadataV3 .Creators.Builder<TParentBuilder>>(this, null, false);
                this.creator.add(creatorBuilder);
                return creatorBuilder;
            }

            public DataCiteMetadataV3 .Creators build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .Creators());
                } else {
                    return ((DataCiteMetadataV3 .Creators) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="creatorName">
         *           &lt;simpleType>
         *             &lt;restriction base="{http://datacite.org/schema/kernel-3}nonemptycontentStringType">
         *             &lt;/restriction>
         *           &lt;/simpleType>
         *         &lt;/element>
         *         &lt;element name="nameIdentifier" minOccurs="0">
         *           &lt;complexType>
         *             &lt;simpleContent>
         *               &lt;extension base="&lt;http://datacite.org/schema/kernel-3>nonemptycontentStringType">
         *                 &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *                 &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *               &lt;/extension>
         *             &lt;/simpleContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "creatorName",
            "nameIdentifier",
            "affiliation"
        })
        public static class Creator {

            @XmlElement(required = true)
            protected String creatorName;
            protected DataCiteMetadataV3 .Creators.Creator.NameIdentifier nameIdentifier;
            protected List<Object> affiliation;
            protected transient List<Object> affiliation_RO = null;

            /**
             * Gets the value of the creatorName property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getCreatorName() {
                return creatorName;
            }

            /**
             * Sets the value of the creatorName property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setCreatorName(String value) {
                this.creatorName = value;
            }

            /**
             * Gets the value of the nameIdentifier property.
             * 
             * @return
             *     possible object is
             *     {@link DataCiteMetadataV3 .Creators.Creator.NameIdentifier }
             *     
             */
            public DataCiteMetadataV3 .Creators.Creator.NameIdentifier getNameIdentifier() {
                return nameIdentifier;
            }

            /**
             * Sets the value of the nameIdentifier property.
             * 
             * @param value
             *     allowed object is
             *     {@link DataCiteMetadataV3 .Creators.Creator.NameIdentifier }
             *     
             */
            protected void setNameIdentifier(DataCiteMetadataV3 .Creators.Creator.NameIdentifier value) {
                this.nameIdentifier = value;
            }

            public List<Object> getAffiliation() {
                if (this.affiliation == null) {
                    this.affiliation = new ArrayList<Object>();
                }
                if (this.affiliation_RO == null) {
                    this.affiliation_RO = ((affiliation == null)?null:Collections.unmodifiableList(this.affiliation));
                }
                return this.affiliation_RO;
            }

            public static DataCiteMetadataV3 .Creators.Creator.Builder<Void> builder() {
                return new DataCiteMetadataV3 .Creators.Creator.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadataV3 .Creators.Creator.Builder<Void> copyOf(final DataCiteMetadataV3 .Creators.Creator other) {
                return new DataCiteMetadataV3 .Creators.Creator.Builder<Void>(null, other, true);
            }

            public static DataCiteMetadataV3 .Creators.Creator.Builder<Void> copyOf(final DataCiteMetadataV3 .Creators.Creator other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                return new DataCiteMetadataV3 .Creators.Creator.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
            }

            public static DataCiteMetadataV3 .Creators.Creator.Builder<Void> copyExcept(final DataCiteMetadataV3 .Creators.Creator other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadataV3 .Creators.Creator.Builder<Void> copyOnly(final DataCiteMetadataV3 .Creators.Creator other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("creatorName", creatorName).add("nameIdentifier", nameIdentifier).add("affiliation", affiliation).add("affiliation_RO", affiliation_RO).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(creatorName, nameIdentifier, affiliation, affiliation_RO);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadataV3 .Creators.Creator o = ((DataCiteMetadataV3 .Creators.Creator) other);
                return (((Objects.equal(creatorName, o.creatorName)&&Objects.equal(nameIdentifier, o.nameIdentifier))&&Objects.equal(affiliation, o.affiliation))&&Objects.equal(affiliation_RO, o.affiliation_RO));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadataV3 .Creators.Creator _product;
                private String creatorName;
                private DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder>> nameIdentifier;
                private List<Object> affiliation;

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Creators.Creator other, final boolean copy) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        this.creatorName = other.creatorName;
                        this.nameIdentifier = ((other.nameIdentifier == null)?null:new DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder>>(this, other.nameIdentifier, true));
                        this.affiliation = ((other.affiliation == null)?null:new ArrayList<Object>(other.affiliation));
                    } else {
                        this._product = other;
                    }
                }

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Creators.Creator other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        final PropertyTree creatorNamePropertyTree = ((propertyTree == null)?null:propertyTree.get("creatorName"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(creatorNamePropertyTree!= null):((creatorNamePropertyTree == null)||(!creatorNamePropertyTree.isLeaf())))) {
                            this.creatorName = other.creatorName;
                        }
                        final PropertyTree nameIdentifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("nameIdentifier"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(nameIdentifierPropertyTree!= null):((nameIdentifierPropertyTree == null)||(!nameIdentifierPropertyTree.isLeaf())))) {
                            this.nameIdentifier = ((other.nameIdentifier == null)?null:new DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder>>(this, other.nameIdentifier, true, nameIdentifierPropertyTree, treeUse));
                        }
                        final PropertyTree affiliationPropertyTree = ((propertyTree == null)?null:propertyTree.get("affiliation"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(affiliationPropertyTree!= null):((affiliationPropertyTree == null)||(!affiliationPropertyTree.isLeaf())))) {
                            this.affiliation = ((other.affiliation == null)?null:new ArrayList<Object>(other.affiliation));
                        }
                    } else {
                        this._product = other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadataV3 .Creators.Creator >P init(final P product) {
                    product.creatorName = this.creatorName;
                    product.nameIdentifier = ((this.nameIdentifier == null)?null:this.nameIdentifier.build());
                    product.affiliation = this.affiliation;
                    product.affiliation_RO = ((affiliation == null)?null:Collections.unmodifiableList(product.affiliation));
                    return product;
                }

                public DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder> withCreatorName(final String creatorName) {
                    this.creatorName = creatorName;
                    return this;
                }

                public DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder> withNameIdentifier(final DataCiteMetadataV3 .Creators.Creator.NameIdentifier nameIdentifier) {
                    this.nameIdentifier = ((nameIdentifier == null)?null:new DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder>>(this, nameIdentifier, false));
                    return this;
                }

                public DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<? extends DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder>> withNameIdentifier() {
                    return this.nameIdentifier = new DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder>>(this, null, false);
                }

                public DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder> addAffiliation(final List<?> affiliation) {
                    if (this.affiliation == null) {
                        this.affiliation = new ArrayList<Object>();
                    }
                    this.affiliation.addAll(affiliation);
                    return this;
                }

                public DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder> withAffiliation(final List<?> affiliation) {
                    if (this.affiliation!= null) {
                        this.affiliation.clear();
                    }
                    return addAffiliation(affiliation);
                }

                public DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder> addAffiliation(Object... affiliation) {
                    addAffiliation(Arrays.asList(affiliation));
                    return this;
                }

                public DataCiteMetadataV3 .Creators.Creator.Builder<TParentBuilder> withAffiliation(Object... affiliation) {
                    withAffiliation(Arrays.asList(affiliation));
                    return this;
                }

                public DataCiteMetadataV3 .Creators.Creator build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadataV3 .Creators.Creator());
                    } else {
                        return ((DataCiteMetadataV3 .Creators.Creator) this._product);
                    }
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;simpleContent>
             *     &lt;extension base="&lt;http://datacite.org/schema/kernel-3>nonemptycontentStringType">
             *       &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
             *       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
             *     &lt;/extension>
             *   &lt;/simpleContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "value"
            })
            public static class NameIdentifier {

                @XmlValue
                protected String value;
                @XmlAttribute(name = "nameIdentifierScheme", required = true)
                @XmlSchemaType(name = "anySimpleType")
                protected String nameIdentifierScheme;
                @XmlAttribute(name = "schemeURI")
                @XmlSchemaType(name = "anyURI")
                protected String schemeURI;

                /**
                 * Gets the value of the value property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getValue() {
                    return value;
                }

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                protected void setValue(String value) {
                    this.value = value;
                }

                /**
                 * Gets the value of the nameIdentifierScheme property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getNameIdentifierScheme() {
                    return nameIdentifierScheme;
                }

                /**
                 * Sets the value of the nameIdentifierScheme property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                protected void setNameIdentifierScheme(String value) {
                    this.nameIdentifierScheme = value;
                }

                /**
                 * Gets the value of the schemeURI property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getSchemeURI() {
                    return schemeURI;
                }

                /**
                 * Sets the value of the schemeURI property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                protected void setSchemeURI(String value) {
                    this.schemeURI = value;
                }

                public static DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<Void> builder() {
                    return new DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<Void>(null, null, false);
                }

                public static DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<Void> copyOf(final DataCiteMetadataV3 .Creators.Creator.NameIdentifier other) {
                    return new DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<Void>(null, other, true);
                }

                public static DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<Void> copyOf(final DataCiteMetadataV3 .Creators.Creator.NameIdentifier other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                    return new DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
                }

                public static DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<Void> copyExcept(final DataCiteMetadataV3 .Creators.Creator.NameIdentifier other, final PropertyTree propertyTree) {
                    return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
                }

                public static DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<Void> copyOnly(final DataCiteMetadataV3 .Creators.Creator.NameIdentifier other, final PropertyTree propertyTree) {
                    return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
                }

                @Override
                public String toString() {
                    return Objects.toStringHelper(this).add("value", value).add("nameIdentifierScheme", nameIdentifierScheme).add("schemeURI", schemeURI).toString();
                }

                @Override
                public int hashCode() {
                    return Objects.hashCode(value, nameIdentifierScheme, schemeURI);
                }

                @Override
                public boolean equals(Object other) {
                    if (this == other) {
                        return true;
                    }
                    if (other == null) {
                        return false;
                    }
                    if (getClass()!= other.getClass()) {
                        return false;
                    }
                    final DataCiteMetadataV3 .Creators.Creator.NameIdentifier o = ((DataCiteMetadataV3 .Creators.Creator.NameIdentifier) other);
                    return ((Objects.equal(value, o.value)&&Objects.equal(nameIdentifierScheme, o.nameIdentifierScheme))&&Objects.equal(schemeURI, o.schemeURI));
                }

                public static class Builder<TParentBuilder >{

                    protected final TParentBuilder _parentBuilder;
                    protected final DataCiteMetadataV3 .Creators.Creator.NameIdentifier _product;
                    private String value;
                    private String nameIdentifierScheme;
                    private String schemeURI;

                    public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Creators.Creator.NameIdentifier other, final boolean copy) {
                        this._parentBuilder = parentBuilder;
                        if (copy) {
                            this._product = null;
                            this.value = other.value;
                            this.nameIdentifierScheme = other.nameIdentifierScheme;
                            this.schemeURI = other.schemeURI;
                        } else {
                            this._product = other;
                        }
                    }

                    public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Creators.Creator.NameIdentifier other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                        this._parentBuilder = parentBuilder;
                        if (copy) {
                            this._product = null;
                            final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                                this.value = other.value;
                            }
                            final PropertyTree nameIdentifierSchemePropertyTree = ((propertyTree == null)?null:propertyTree.get("nameIdentifierScheme"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(nameIdentifierSchemePropertyTree!= null):((nameIdentifierSchemePropertyTree == null)||(!nameIdentifierSchemePropertyTree.isLeaf())))) {
                                this.nameIdentifierScheme = other.nameIdentifierScheme;
                            }
                            final PropertyTree schemeURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("schemeURI"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(schemeURIPropertyTree!= null):((schemeURIPropertyTree == null)||(!schemeURIPropertyTree.isLeaf())))) {
                                this.schemeURI = other.schemeURI;
                            }
                        } else {
                            this._product = other;
                        }
                    }

                    public TParentBuilder end() {
                        return this._parentBuilder;
                    }

                    protected<P extends DataCiteMetadataV3 .Creators.Creator.NameIdentifier >P init(final P product) {
                        product.value = this.value;
                        product.nameIdentifierScheme = this.nameIdentifierScheme;
                        product.schemeURI = this.schemeURI;
                        return product;
                    }

                    public DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<TParentBuilder> withValue(final String value) {
                        this.value = value;
                        return this;
                    }

                    public DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<TParentBuilder> withNameIdentifierScheme(final String nameIdentifierScheme) {
                        this.nameIdentifierScheme = nameIdentifierScheme;
                        return this;
                    }

                    public DataCiteMetadataV3 .Creators.Creator.NameIdentifier.Builder<TParentBuilder> withSchemeURI(final String schemeURI) {
                        this.schemeURI = schemeURI;
                        return this;
                    }

                    public DataCiteMetadataV3 .Creators.Creator.NameIdentifier build() {
                        if (this._product == null) {
                            return this.init(new DataCiteMetadataV3 .Creators.Creator.NameIdentifier());
                        } else {
                            return ((DataCiteMetadataV3 .Creators.Creator.NameIdentifier) this._product);
                        }
                    }

                }

            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="dates" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="dateType" use="required" type="{http://datacite.org/schema/kernel-3}dateType" />
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "dates"
    })
    public static class Dates {

        protected List<DataCiteMetadataV3 .Dates.Dates> dates;
        protected transient List<DataCiteMetadataV3 .Dates.Dates> dates_RO = null;

        public List<DataCiteMetadataV3 .Dates.Dates> getDates() {
            if (this.dates == null) {
                this.dates = new ArrayList<DataCiteMetadataV3 .Dates.Dates>();
            }
            if (this.dates_RO == null) {
                this.dates_RO = ((dates == null)?null:Collections.unmodifiableList(this.dates));
            }
            return this.dates_RO;
        }

        public static DataCiteMetadataV3 .Dates.Builder<Void> builder() {
            return new DataCiteMetadataV3 .Dates.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .Dates.Builder<Void> copyOf(final DataCiteMetadataV3 .Dates other) {
            return new DataCiteMetadataV3 .Dates.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .Dates.Builder<Void> copyOf(final DataCiteMetadataV3 .Dates other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .Dates.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .Dates.Builder<Void> copyExcept(final DataCiteMetadataV3 .Dates other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .Dates.Builder<Void> copyOnly(final DataCiteMetadataV3 .Dates other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("dates", dates).add("dates_RO", dates_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(dates, dates_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .Dates o = ((DataCiteMetadataV3 .Dates) other);
            return (Objects.equal(dates, o.dates)&&Objects.equal(dates_RO, o.dates_RO));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .Dates _product;
            private List<DataCiteMetadataV3 .Dates.Dates.Builder<DataCiteMetadataV3 .Dates.Builder<TParentBuilder>>> dates;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Dates other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    if (other.dates == null) {
                        this.dates = null;
                    } else {
                        this.dates = new ArrayList<DataCiteMetadataV3 .Dates.Dates.Builder<DataCiteMetadataV3 .Dates.Builder<TParentBuilder>>>();
                        for (DataCiteMetadataV3 .Dates.Dates item: other.dates) {
                            this.dates.add(((item == null)?null:new DataCiteMetadataV3 .Dates.Dates.Builder<DataCiteMetadataV3 .Dates.Builder<TParentBuilder>>(this, item, true)));
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Dates other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree datesPropertyTree = ((propertyTree == null)?null:propertyTree.get("dates"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(datesPropertyTree!= null):((datesPropertyTree == null)||(!datesPropertyTree.isLeaf())))) {
                        if (other.dates == null) {
                            this.dates = null;
                        } else {
                            this.dates = new ArrayList<DataCiteMetadataV3 .Dates.Dates.Builder<DataCiteMetadataV3 .Dates.Builder<TParentBuilder>>>();
                            for (DataCiteMetadataV3 .Dates.Dates item: other.dates) {
                                this.dates.add(((item == null)?null:new DataCiteMetadataV3 .Dates.Dates.Builder<DataCiteMetadataV3 .Dates.Builder<TParentBuilder>>(this, item, true, datesPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .Dates >P init(final P product) {
                if (this.dates!= null) {
                    final List<DataCiteMetadataV3 .Dates.Dates> dates = new ArrayList<DataCiteMetadataV3 .Dates.Dates>(this.dates.size());
                    for (DataCiteMetadataV3 .Dates.Dates.Builder<DataCiteMetadataV3 .Dates.Builder<TParentBuilder>> item: this.dates) {
                        dates.add(item.build());
                    }
                    product.dates = dates;
                }
                product.dates_RO = ((dates == null)?null:Collections.unmodifiableList(product.dates));
                return product;
            }

            public DataCiteMetadataV3 .Dates.Builder<TParentBuilder> addDates(final List<? extends DataCiteMetadataV3 .Dates.Dates> dates) {
                if (this.dates == null) {
                    this.dates = new ArrayList<DataCiteMetadataV3 .Dates.Dates.Builder<DataCiteMetadataV3 .Dates.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadataV3 .Dates.Dates item: dates) {
                    this.dates.add(new DataCiteMetadataV3 .Dates.Dates.Builder<DataCiteMetadataV3 .Dates.Builder<TParentBuilder>>(this, item, false));
                }
                return this;
            }

            public DataCiteMetadataV3 .Dates.Builder<TParentBuilder> withDates(final List<? extends DataCiteMetadataV3 .Dates.Dates> dates) {
                if (this.dates!= null) {
                    this.dates.clear();
                }
                return addDates(dates);
            }

            public DataCiteMetadataV3 .Dates.Builder<TParentBuilder> addDates(DataCiteMetadataV3 .Dates.Dates... dates) {
                addDates(Arrays.asList(dates));
                return this;
            }

            public DataCiteMetadataV3 .Dates.Builder<TParentBuilder> withDates(DataCiteMetadataV3 .Dates.Dates... dates) {
                withDates(Arrays.asList(dates));
                return this;
            }

            public DataCiteMetadataV3 .Dates.Dates.Builder<? extends DataCiteMetadataV3 .Dates.Builder<TParentBuilder>> addDates() {
                if (this.dates == null) {
                    this.dates = new ArrayList<DataCiteMetadataV3 .Dates.Dates.Builder<DataCiteMetadataV3 .Dates.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadataV3 .Dates.Dates.Builder<DataCiteMetadataV3 .Dates.Builder<TParentBuilder>> datesBuilder = new DataCiteMetadataV3 .Dates.Dates.Builder<DataCiteMetadataV3 .Dates.Builder<TParentBuilder>>(this, null, false);
                this.dates.add(datesBuilder);
                return datesBuilder;
            }

            public DataCiteMetadataV3 .Dates build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .Dates());
                } else {
                    return ((DataCiteMetadataV3 .Dates) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="dateType" use="required" type="{http://datacite.org/schema/kernel-3}dateType" />
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Dates {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "dateType", required = true)
            protected DateType dateType;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the dateType property.
             * 
             * @return
             *     possible object is
             *     {@link DateType }
             *     
             */
            public DateType getDateType() {
                return dateType;
            }

            /**
             * Sets the value of the dateType property.
             * 
             * @param value
             *     allowed object is
             *     {@link DateType }
             *     
             */
            protected void setDateType(DateType value) {
                this.dateType = value;
            }

            public static DataCiteMetadataV3 .Dates.Dates.Builder<Void> builder() {
                return new DataCiteMetadataV3 .Dates.Dates.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadataV3 .Dates.Dates.Builder<Void> copyOf(final DataCiteMetadataV3 .Dates.Dates other) {
                return new DataCiteMetadataV3 .Dates.Dates.Builder<Void>(null, other, true);
            }

            public static DataCiteMetadataV3 .Dates.Dates.Builder<Void> copyOf(final DataCiteMetadataV3 .Dates.Dates other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                return new DataCiteMetadataV3 .Dates.Dates.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
            }

            public static DataCiteMetadataV3 .Dates.Dates.Builder<Void> copyExcept(final DataCiteMetadataV3 .Dates.Dates other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadataV3 .Dates.Dates.Builder<Void> copyOnly(final DataCiteMetadataV3 .Dates.Dates other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("dateType", dateType).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, dateType);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadataV3 .Dates.Dates o = ((DataCiteMetadataV3 .Dates.Dates) other);
                return (Objects.equal(value, o.value)&&Objects.equal(dateType, o.dateType));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadataV3 .Dates.Dates _product;
                private String value;
                private DateType dateType;

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Dates.Dates other, final boolean copy) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        this.value = other.value;
                        this.dateType = other.dateType;
                    } else {
                        this._product = other;
                    }
                }

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Dates.Dates other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = other.value;
                        }
                        final PropertyTree dateTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("dateType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(dateTypePropertyTree!= null):((dateTypePropertyTree == null)||(!dateTypePropertyTree.isLeaf())))) {
                            this.dateType = other.dateType;
                        }
                    } else {
                        this._product = other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadataV3 .Dates.Dates >P init(final P product) {
                    product.value = this.value;
                    product.dateType = this.dateType;
                    return product;
                }

                public DataCiteMetadataV3 .Dates.Dates.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                public DataCiteMetadataV3 .Dates.Dates.Builder<TParentBuilder> withDateType(final DateType dateType) {
                    this.dateType = dateType;
                    return this;
                }

                public DataCiteMetadataV3 .Dates.Dates build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadataV3 .Dates.Dates());
                    } else {
                        return ((DataCiteMetadataV3 .Dates.Dates) this._product);
                    }
                }

            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="description" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;choice>
     *                   &lt;element name="br" maxOccurs="unbounded" minOccurs="0">
     *                     &lt;simpleType>
     *                       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *                         &lt;length value="0"/>
     *                       &lt;/restriction>
     *                     &lt;/simpleType>
     *                   &lt;/element>
     *                 &lt;/choice>
     *                 &lt;attribute name="descriptionType" use="required" type="{http://datacite.org/schema/kernel-3}descriptionType" />
     *                 &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "description"
    })
    public static class Description {

        protected List<DataCiteMetadataV3 .Description.Description> description;
        protected transient List<DataCiteMetadataV3 .Description.Description> description_RO = null;

        public List<DataCiteMetadataV3 .Description.Description> getDescription() {
            if (this.description == null) {
                this.description = new ArrayList<DataCiteMetadataV3 .Description.Description>();
            }
            if (this.description_RO == null) {
                this.description_RO = ((description == null)?null:Collections.unmodifiableList(this.description));
            }
            return this.description_RO;
        }

        public static DataCiteMetadataV3 .Description.Builder<Void> builder() {
            return new DataCiteMetadataV3 .Description.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .Description.Builder<Void> copyOf(final DataCiteMetadataV3 .Description other) {
            return new DataCiteMetadataV3 .Description.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .Description.Builder<Void> copyOf(final DataCiteMetadataV3 .Description other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .Description.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .Description.Builder<Void> copyExcept(final DataCiteMetadataV3 .Description other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .Description.Builder<Void> copyOnly(final DataCiteMetadataV3 .Description other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("description", description).add("description_RO", description_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(description, description_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .Description o = ((DataCiteMetadataV3 .Description) other);
            return (Objects.equal(description, o.description)&&Objects.equal(description_RO, o.description_RO));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .Description _product;
            private List<DataCiteMetadataV3 .Description.Description.Builder<DataCiteMetadataV3 .Description.Builder<TParentBuilder>>> description;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Description other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    if (other.description == null) {
                        this.description = null;
                    } else {
                        this.description = new ArrayList<DataCiteMetadataV3 .Description.Description.Builder<DataCiteMetadataV3 .Description.Builder<TParentBuilder>>>();
                        for (DataCiteMetadataV3 .Description.Description item: other.description) {
                            this.description.add(((item == null)?null:new DataCiteMetadataV3 .Description.Description.Builder<DataCiteMetadataV3 .Description.Builder<TParentBuilder>>(this, item, true)));
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Description other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree descriptionPropertyTree = ((propertyTree == null)?null:propertyTree.get("description"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(descriptionPropertyTree!= null):((descriptionPropertyTree == null)||(!descriptionPropertyTree.isLeaf())))) {
                        if (other.description == null) {
                            this.description = null;
                        } else {
                            this.description = new ArrayList<DataCiteMetadataV3 .Description.Description.Builder<DataCiteMetadataV3 .Description.Builder<TParentBuilder>>>();
                            for (DataCiteMetadataV3 .Description.Description item: other.description) {
                                this.description.add(((item == null)?null:new DataCiteMetadataV3 .Description.Description.Builder<DataCiteMetadataV3 .Description.Builder<TParentBuilder>>(this, item, true, descriptionPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .Description >P init(final P product) {
                if (this.description!= null) {
                    final List<DataCiteMetadataV3 .Description.Description> description = new ArrayList<DataCiteMetadataV3 .Description.Description>(this.description.size());
                    for (DataCiteMetadataV3 .Description.Description.Builder<DataCiteMetadataV3 .Description.Builder<TParentBuilder>> item: this.description) {
                        description.add(item.build());
                    }
                    product.description = description;
                }
                product.description_RO = ((description == null)?null:Collections.unmodifiableList(product.description));
                return product;
            }

            public DataCiteMetadataV3 .Description.Builder<TParentBuilder> addDescription(final List<? extends DataCiteMetadataV3 .Description.Description> description) {
                if (this.description == null) {
                    this.description = new ArrayList<DataCiteMetadataV3 .Description.Description.Builder<DataCiteMetadataV3 .Description.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadataV3 .Description.Description item: description) {
                    this.description.add(new DataCiteMetadataV3 .Description.Description.Builder<DataCiteMetadataV3 .Description.Builder<TParentBuilder>>(this, item, false));
                }
                return this;
            }

            public DataCiteMetadataV3 .Description.Builder<TParentBuilder> withDescription(final List<? extends DataCiteMetadataV3 .Description.Description> description) {
                if (this.description!= null) {
                    this.description.clear();
                }
                return addDescription(description);
            }

            public DataCiteMetadataV3 .Description.Builder<TParentBuilder> addDescription(DataCiteMetadataV3 .Description.Description... description) {
                addDescription(Arrays.asList(description));
                return this;
            }

            public DataCiteMetadataV3 .Description.Builder<TParentBuilder> withDescription(DataCiteMetadataV3 .Description.Description... description) {
                withDescription(Arrays.asList(description));
                return this;
            }

            public DataCiteMetadataV3 .Description.Description.Builder<? extends DataCiteMetadataV3 .Description.Builder<TParentBuilder>> addDescription() {
                if (this.description == null) {
                    this.description = new ArrayList<DataCiteMetadataV3 .Description.Description.Builder<DataCiteMetadataV3 .Description.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadataV3 .Description.Description.Builder<DataCiteMetadataV3 .Description.Builder<TParentBuilder>> descriptionBuilder = new DataCiteMetadataV3 .Description.Description.Builder<DataCiteMetadataV3 .Description.Builder<TParentBuilder>>(this, null, false);
                this.description.add(descriptionBuilder);
                return descriptionBuilder;
            }

            public DataCiteMetadataV3 .Description build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .Description());
                } else {
                    return ((DataCiteMetadataV3 .Description) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;choice>
         *         &lt;element name="br" maxOccurs="unbounded" minOccurs="0">
         *           &lt;simpleType>
         *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
         *               &lt;length value="0"/>
         *             &lt;/restriction>
         *           &lt;/simpleType>
         *         &lt;/element>
         *       &lt;/choice>
         *       &lt;attribute name="descriptionType" use="required" type="{http://datacite.org/schema/kernel-3}descriptionType" />
         *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class Description {

            @XmlElementRef(name = "br", namespace = "http://datacite.org/schema/kernel-3", type = JAXBElement.class, required = false)
            @XmlMixed
            protected List<Serializable> content;
            @XmlAttribute(name = "descriptionType", required = true)
            protected DescriptionType descriptionType;
            @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
            protected String lang;
            protected transient List<Serializable> content_RO = null;

            /**
             * Gets the value of the descriptionType property.
             * 
             * @return
             *     possible object is
             *     {@link DescriptionType }
             *     
             */
            public DescriptionType getDescriptionType() {
                return descriptionType;
            }

            /**
             * Sets the value of the descriptionType property.
             * 
             * @param value
             *     allowed object is
             *     {@link DescriptionType }
             *     
             */
            protected void setDescriptionType(DescriptionType value) {
                this.descriptionType = value;
            }

            /**
             * Gets the value of the lang property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getLang() {
                return lang;
            }

            /**
             * Sets the value of the lang property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setLang(String value) {
                this.lang = value;
            }

            public List<Serializable> getContent() {
                if (this.content == null) {
                    this.content = new ArrayList<Serializable>();
                }
                if (this.content_RO == null) {
                    this.content_RO = ((content == null)?null:Collections.unmodifiableList(this.content));
                }
                return this.content_RO;
            }

            public static DataCiteMetadataV3 .Description.Description.Builder<Void> builder() {
                return new DataCiteMetadataV3 .Description.Description.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadataV3 .Description.Description.Builder<Void> copyOf(final DataCiteMetadataV3 .Description.Description other) {
                return new DataCiteMetadataV3 .Description.Description.Builder<Void>(null, other, true);
            }

            public static DataCiteMetadataV3 .Description.Description.Builder<Void> copyOf(final DataCiteMetadataV3 .Description.Description other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                return new DataCiteMetadataV3 .Description.Description.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
            }

            public static DataCiteMetadataV3 .Description.Description.Builder<Void> copyExcept(final DataCiteMetadataV3 .Description.Description other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadataV3 .Description.Description.Builder<Void> copyOnly(final DataCiteMetadataV3 .Description.Description other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("content", content).add("descriptionType", descriptionType).add("lang", lang).add("content_RO", content_RO).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(content, descriptionType, lang, content_RO);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadataV3 .Description.Description o = ((DataCiteMetadataV3 .Description.Description) other);
                return (((Objects.equal(content, o.content)&&Objects.equal(descriptionType, o.descriptionType))&&Objects.equal(lang, o.lang))&&Objects.equal(content_RO, o.content_RO));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadataV3 .Description.Description _product;
                private List<Serializable> content;
                private DescriptionType descriptionType;
                private String lang;

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Description.Description other, final boolean copy) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        this.content = ((other.content == null)?null:new ArrayList<Serializable>(other.content));
                        this.descriptionType = other.descriptionType;
                        this.lang = other.lang;
                    } else {
                        this._product = other;
                    }
                }

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Description.Description other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        final PropertyTree contentPropertyTree = ((propertyTree == null)?null:propertyTree.get("content"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(contentPropertyTree!= null):((contentPropertyTree == null)||(!contentPropertyTree.isLeaf())))) {
                            this.content = ((other.content == null)?null:new ArrayList<Serializable>(other.content));
                        }
                        final PropertyTree descriptionTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("descriptionType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(descriptionTypePropertyTree!= null):((descriptionTypePropertyTree == null)||(!descriptionTypePropertyTree.isLeaf())))) {
                            this.descriptionType = other.descriptionType;
                        }
                        final PropertyTree langPropertyTree = ((propertyTree == null)?null:propertyTree.get("lang"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(langPropertyTree!= null):((langPropertyTree == null)||(!langPropertyTree.isLeaf())))) {
                            this.lang = other.lang;
                        }
                    } else {
                        this._product = other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadataV3 .Description.Description >P init(final P product) {
                    product.content = this.content;
                    product.content_RO = ((content == null)?null:Collections.unmodifiableList(product.content));
                    product.descriptionType = this.descriptionType;
                    product.lang = this.lang;
                    return product;
                }

                public DataCiteMetadataV3 .Description.Description.Builder<TParentBuilder> addContent(final List<? extends Serializable> content) {
                    if (this.content == null) {
                        this.content = new ArrayList<Serializable>();
                    }
                    this.content.addAll(content);
                    return this;
                }

                public DataCiteMetadataV3 .Description.Description.Builder<TParentBuilder> withContent(final List<? extends Serializable> content) {
                    if (this.content!= null) {
                        this.content.clear();
                    }
                    return addContent(content);
                }

                public DataCiteMetadataV3 .Description.Description.Builder<TParentBuilder> addContent(Serializable... content) {
                    addContent(Arrays.asList(content));
                    return this;
                }

                public DataCiteMetadataV3 .Description.Description.Builder<TParentBuilder> withContent(Serializable... content) {
                    withContent(Arrays.asList(content));
                    return this;
                }

                public DataCiteMetadataV3 .Description.Description.Builder<TParentBuilder> withDescriptionType(final DescriptionType descriptionType) {
                    this.descriptionType = descriptionType;
                    return this;
                }

                public DataCiteMetadataV3 .Description.Description.Builder<TParentBuilder> withLang(final String lang) {
                    this.lang = lang;
                    return this;
                }

                public DataCiteMetadataV3 .Description.Description build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadataV3 .Description.Description());
                    } else {
                        return ((DataCiteMetadataV3 .Description.Description) this._product);
                    }
                }

            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="format" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "format"
    })
    public static class Format {

        protected List<String> format;
        protected transient List<String> format_RO = null;

        public List<String> getFormat() {
            if (this.format == null) {
                this.format = new ArrayList<String>();
            }
            if (this.format_RO == null) {
                this.format_RO = ((format == null)?null:Collections.unmodifiableList(this.format));
            }
            return this.format_RO;
        }

        public static DataCiteMetadataV3 .Format.Builder<Void> builder() {
            return new DataCiteMetadataV3 .Format.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .Format.Builder<Void> copyOf(final DataCiteMetadataV3 .Format other) {
            return new DataCiteMetadataV3 .Format.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .Format.Builder<Void> copyOf(final DataCiteMetadataV3 .Format other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .Format.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .Format.Builder<Void> copyExcept(final DataCiteMetadataV3 .Format other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .Format.Builder<Void> copyOnly(final DataCiteMetadataV3 .Format other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("format", format).add("format_RO", format_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(format, format_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .Format o = ((DataCiteMetadataV3 .Format) other);
            return (Objects.equal(format, o.format)&&Objects.equal(format_RO, o.format_RO));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .Format _product;
            private List<String> format;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Format other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    this.format = ((other.format == null)?null:new ArrayList<String>(other.format));
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Format other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree formatPropertyTree = ((propertyTree == null)?null:propertyTree.get("format"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(formatPropertyTree!= null):((formatPropertyTree == null)||(!formatPropertyTree.isLeaf())))) {
                        this.format = ((other.format == null)?null:new ArrayList<String>(other.format));
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .Format >P init(final P product) {
                product.format = this.format;
                product.format_RO = ((format == null)?null:Collections.unmodifiableList(product.format));
                return product;
            }

            public DataCiteMetadataV3 .Format.Builder<TParentBuilder> addFormat(final List<? extends String> format) {
                if (this.format == null) {
                    this.format = new ArrayList<String>();
                }
                this.format.addAll(format);
                return this;
            }

            public DataCiteMetadataV3 .Format.Builder<TParentBuilder> withFormat(final List<? extends String> format) {
                if (this.format!= null) {
                    this.format.clear();
                }
                return addFormat(format);
            }

            public DataCiteMetadataV3 .Format.Builder<TParentBuilder> addFormat(String... format) {
                addFormat(Arrays.asList(format));
                return this;
            }

            public DataCiteMetadataV3 .Format.Builder<TParentBuilder> withFormat(String... format) {
                withFormat(Arrays.asList(format));
                return this;
            }

            public DataCiteMetadataV3 .Format build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .Format());
                } else {
                    return ((DataCiteMetadataV3 .Format) this._product);
                }
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="geoLocation" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="geoLocationPoint" type="{http://datacite.org/schema/kernel-3}point" minOccurs="0"/>
     *                   &lt;element name="geoLocationBox" type="{http://datacite.org/schema/kernel-3}box" minOccurs="0"/>
     *                   &lt;element name="geoLocationPlace" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "geoLocation"
    })
    public static class GeoLocations {

        protected List<DataCiteMetadataV3 .GeoLocations.GeoLocation> geoLocation;
        protected transient List<DataCiteMetadataV3 .GeoLocations.GeoLocation> geoLocation_RO = null;

        public List<DataCiteMetadataV3 .GeoLocations.GeoLocation> getGeoLocation() {
            if (this.geoLocation == null) {
                this.geoLocation = new ArrayList<DataCiteMetadataV3 .GeoLocations.GeoLocation>();
            }
            if (this.geoLocation_RO == null) {
                this.geoLocation_RO = ((geoLocation == null)?null:Collections.unmodifiableList(this.geoLocation));
            }
            return this.geoLocation_RO;
        }

        public static DataCiteMetadataV3 .GeoLocations.Builder<Void> builder() {
            return new DataCiteMetadataV3 .GeoLocations.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .GeoLocations.Builder<Void> copyOf(final DataCiteMetadataV3 .GeoLocations other) {
            return new DataCiteMetadataV3 .GeoLocations.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .GeoLocations.Builder<Void> copyOf(final DataCiteMetadataV3 .GeoLocations other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .GeoLocations.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .GeoLocations.Builder<Void> copyExcept(final DataCiteMetadataV3 .GeoLocations other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .GeoLocations.Builder<Void> copyOnly(final DataCiteMetadataV3 .GeoLocations other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("geoLocation", geoLocation).add("geoLocation_RO", geoLocation_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(geoLocation, geoLocation_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .GeoLocations o = ((DataCiteMetadataV3 .GeoLocations) other);
            return (Objects.equal(geoLocation, o.geoLocation)&&Objects.equal(geoLocation_RO, o.geoLocation_RO));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .GeoLocations _product;
            private List<DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>>> geoLocation;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .GeoLocations other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    if (other.geoLocation == null) {
                        this.geoLocation = null;
                    } else {
                        this.geoLocation = new ArrayList<DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>>>();
                        for (DataCiteMetadataV3 .GeoLocations.GeoLocation item: other.geoLocation) {
                            this.geoLocation.add(((item == null)?null:new DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>>(this, item, true)));
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .GeoLocations other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree geoLocationPropertyTree = ((propertyTree == null)?null:propertyTree.get("geoLocation"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(geoLocationPropertyTree!= null):((geoLocationPropertyTree == null)||(!geoLocationPropertyTree.isLeaf())))) {
                        if (other.geoLocation == null) {
                            this.geoLocation = null;
                        } else {
                            this.geoLocation = new ArrayList<DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>>>();
                            for (DataCiteMetadataV3 .GeoLocations.GeoLocation item: other.geoLocation) {
                                this.geoLocation.add(((item == null)?null:new DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>>(this, item, true, geoLocationPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .GeoLocations >P init(final P product) {
                if (this.geoLocation!= null) {
                    final List<DataCiteMetadataV3 .GeoLocations.GeoLocation> geoLocation = new ArrayList<DataCiteMetadataV3 .GeoLocations.GeoLocation>(this.geoLocation.size());
                    for (DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>> item: this.geoLocation) {
                        geoLocation.add(item.build());
                    }
                    product.geoLocation = geoLocation;
                }
                product.geoLocation_RO = ((geoLocation == null)?null:Collections.unmodifiableList(product.geoLocation));
                return product;
            }

            public DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder> addGeoLocation(final List<? extends DataCiteMetadataV3 .GeoLocations.GeoLocation> geoLocation) {
                if (this.geoLocation == null) {
                    this.geoLocation = new ArrayList<DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadataV3 .GeoLocations.GeoLocation item: geoLocation) {
                    this.geoLocation.add(new DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>>(this, item, false));
                }
                return this;
            }

            public DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder> withGeoLocation(final List<? extends DataCiteMetadataV3 .GeoLocations.GeoLocation> geoLocation) {
                if (this.geoLocation!= null) {
                    this.geoLocation.clear();
                }
                return addGeoLocation(geoLocation);
            }

            public DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder> addGeoLocation(DataCiteMetadataV3 .GeoLocations.GeoLocation... geoLocation) {
                addGeoLocation(Arrays.asList(geoLocation));
                return this;
            }

            public DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder> withGeoLocation(DataCiteMetadataV3 .GeoLocations.GeoLocation... geoLocation) {
                withGeoLocation(Arrays.asList(geoLocation));
                return this;
            }

            public DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<? extends DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>> addGeoLocation() {
                if (this.geoLocation == null) {
                    this.geoLocation = new ArrayList<DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>> geoLocationBuilder = new DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<DataCiteMetadataV3 .GeoLocations.Builder<TParentBuilder>>(this, null, false);
                this.geoLocation.add(geoLocationBuilder);
                return geoLocationBuilder;
            }

            public DataCiteMetadataV3 .GeoLocations build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .GeoLocations());
                } else {
                    return ((DataCiteMetadataV3 .GeoLocations) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="geoLocationPoint" type="{http://datacite.org/schema/kernel-3}point" minOccurs="0"/>
         *         &lt;element name="geoLocationBox" type="{http://datacite.org/schema/kernel-3}box" minOccurs="0"/>
         *         &lt;element name="geoLocationPlace" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "geoLocationPoint",
            "geoLocationBox",
            "geoLocationPlace"
        })
        public static class GeoLocation {

            @XmlList
            @XmlElement(type = Double.class)
            protected List<Double> geoLocationPoint;
            @XmlList
            @XmlElement(type = Double.class)
            protected List<Double> geoLocationBox;
            protected Object geoLocationPlace;
            protected transient List<Double> geoLocationPoint_RO = null;
            protected transient List<Double> geoLocationBox_RO = null;

            /**
             * Gets the value of the geoLocationPlace property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            public Object getGeoLocationPlace() {
                return geoLocationPlace;
            }

            /**
             * Sets the value of the geoLocationPlace property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            protected void setGeoLocationPlace(Object value) {
                this.geoLocationPlace = value;
            }

            public List<Double> getGeoLocationPoint() {
                if (this.geoLocationPoint == null) {
                    this.geoLocationPoint = new ArrayList<Double>();
                }
                if (this.geoLocationPoint_RO == null) {
                    this.geoLocationPoint_RO = ((geoLocationPoint == null)?null:Collections.unmodifiableList(this.geoLocationPoint));
                }
                return this.geoLocationPoint_RO;
            }

            public List<Double> getGeoLocationBox() {
                if (this.geoLocationBox == null) {
                    this.geoLocationBox = new ArrayList<Double>();
                }
                if (this.geoLocationBox_RO == null) {
                    this.geoLocationBox_RO = ((geoLocationBox == null)?null:Collections.unmodifiableList(this.geoLocationBox));
                }
                return this.geoLocationBox_RO;
            }

            public static DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<Void> builder() {
                return new DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<Void> copyOf(final DataCiteMetadataV3 .GeoLocations.GeoLocation other) {
                return new DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<Void>(null, other, true);
            }

            public static DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<Void> copyOf(final DataCiteMetadataV3 .GeoLocations.GeoLocation other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                return new DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
            }

            public static DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<Void> copyExcept(final DataCiteMetadataV3 .GeoLocations.GeoLocation other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<Void> copyOnly(final DataCiteMetadataV3 .GeoLocations.GeoLocation other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("geoLocationPoint", geoLocationPoint).add("geoLocationBox", geoLocationBox).add("geoLocationPlace", geoLocationPlace).add("geoLocationPoint_RO", geoLocationPoint_RO).add("geoLocationBox_RO", geoLocationBox_RO).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(geoLocationPoint, geoLocationBox, geoLocationPlace, geoLocationPoint_RO, geoLocationBox_RO);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadataV3 .GeoLocations.GeoLocation o = ((DataCiteMetadataV3 .GeoLocations.GeoLocation) other);
                return ((((Objects.equal(geoLocationPoint, o.geoLocationPoint)&&Objects.equal(geoLocationBox, o.geoLocationBox))&&Objects.equal(geoLocationPlace, o.geoLocationPlace))&&Objects.equal(geoLocationPoint_RO, o.geoLocationPoint_RO))&&Objects.equal(geoLocationBox_RO, o.geoLocationBox_RO));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadataV3 .GeoLocations.GeoLocation _product;
                private List<Double> geoLocationPoint;
                private List<Double> geoLocationBox;
                private Object geoLocationPlace;

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .GeoLocations.GeoLocation other, final boolean copy) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        this.geoLocationPoint = ((other.geoLocationPoint == null)?null:new ArrayList<Double>(other.geoLocationPoint));
                        this.geoLocationBox = ((other.geoLocationBox == null)?null:new ArrayList<Double>(other.geoLocationBox));
                        this.geoLocationPlace = other.geoLocationPlace;
                    } else {
                        this._product = other;
                    }
                }

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .GeoLocations.GeoLocation other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        final PropertyTree geoLocationPointPropertyTree = ((propertyTree == null)?null:propertyTree.get("geoLocationPoint"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(geoLocationPointPropertyTree!= null):((geoLocationPointPropertyTree == null)||(!geoLocationPointPropertyTree.isLeaf())))) {
                            this.geoLocationPoint = ((other.geoLocationPoint == null)?null:new ArrayList<Double>(other.geoLocationPoint));
                        }
                        final PropertyTree geoLocationBoxPropertyTree = ((propertyTree == null)?null:propertyTree.get("geoLocationBox"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(geoLocationBoxPropertyTree!= null):((geoLocationBoxPropertyTree == null)||(!geoLocationBoxPropertyTree.isLeaf())))) {
                            this.geoLocationBox = ((other.geoLocationBox == null)?null:new ArrayList<Double>(other.geoLocationBox));
                        }
                        final PropertyTree geoLocationPlacePropertyTree = ((propertyTree == null)?null:propertyTree.get("geoLocationPlace"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(geoLocationPlacePropertyTree!= null):((geoLocationPlacePropertyTree == null)||(!geoLocationPlacePropertyTree.isLeaf())))) {
                            this.geoLocationPlace = other.geoLocationPlace;
                        }
                    } else {
                        this._product = other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadataV3 .GeoLocations.GeoLocation >P init(final P product) {
                    product.geoLocationPoint = this.geoLocationPoint;
                    product.geoLocationPoint_RO = ((geoLocationPoint == null)?null:Collections.unmodifiableList(product.geoLocationPoint));
                    product.geoLocationBox = this.geoLocationBox;
                    product.geoLocationBox_RO = ((geoLocationBox == null)?null:Collections.unmodifiableList(product.geoLocationBox));
                    product.geoLocationPlace = this.geoLocationPlace;
                    return product;
                }

                public DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<TParentBuilder> addGeoLocationPoint(final List<? extends Double> geoLocationPoint) {
                    if (this.geoLocationPoint == null) {
                        this.geoLocationPoint = new ArrayList<Double>();
                    }
                    this.geoLocationPoint.addAll(geoLocationPoint);
                    return this;
                }

                public DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<TParentBuilder> withGeoLocationPoint(final List<? extends Double> geoLocationPoint) {
                    if (this.geoLocationPoint!= null) {
                        this.geoLocationPoint.clear();
                    }
                    return addGeoLocationPoint(geoLocationPoint);
                }

                public DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<TParentBuilder> addGeoLocationPoint(Double... geoLocationPoint) {
                    addGeoLocationPoint(Arrays.asList(geoLocationPoint));
                    return this;
                }

                public DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<TParentBuilder> withGeoLocationPoint(Double... geoLocationPoint) {
                    withGeoLocationPoint(Arrays.asList(geoLocationPoint));
                    return this;
                }

                public DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<TParentBuilder> addGeoLocationBox(final List<? extends Double> geoLocationBox) {
                    if (this.geoLocationBox == null) {
                        this.geoLocationBox = new ArrayList<Double>();
                    }
                    this.geoLocationBox.addAll(geoLocationBox);
                    return this;
                }

                public DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<TParentBuilder> withGeoLocationBox(final List<? extends Double> geoLocationBox) {
                    if (this.geoLocationBox!= null) {
                        this.geoLocationBox.clear();
                    }
                    return addGeoLocationBox(geoLocationBox);
                }

                public DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<TParentBuilder> addGeoLocationBox(Double... geoLocationBox) {
                    addGeoLocationBox(Arrays.asList(geoLocationBox));
                    return this;
                }

                public DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<TParentBuilder> withGeoLocationBox(Double... geoLocationBox) {
                    withGeoLocationBox(Arrays.asList(geoLocationBox));
                    return this;
                }

                public DataCiteMetadataV3 .GeoLocations.GeoLocation.Builder<TParentBuilder> withGeoLocationPlace(final Object geoLocationPlace) {
                    this.geoLocationPlace = geoLocationPlace;
                    return this;
                }

                public DataCiteMetadataV3 .GeoLocations.GeoLocation build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadataV3 .GeoLocations.GeoLocation());
                    } else {
                        return ((DataCiteMetadataV3 .GeoLocations.GeoLocation) this._product);
                    }
                }

            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;simpleContent>
     *     &lt;extension base="&lt;http://datacite.org/schema/kernel-3>doiType">
     *       &lt;attribute name="identifierType" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" fixed="DOI" />
     *     &lt;/extension>
     *   &lt;/simpleContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class NameIdentifier {

        @XmlValue
        @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
        protected String value;
        @XmlAttribute(name = "identifierType", required = true)
        @XmlSchemaType(name = "anySimpleType")
        protected String identifierType;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        protected void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the identifierType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getIdentifierType() {
            if (identifierType == null) {
                return "DOI";
            } else {
                return identifierType;
            }
        }

        /**
         * Sets the value of the identifierType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        protected void setIdentifierType(String value) {
            this.identifierType = value;
        }

        public static DataCiteMetadataV3 .NameIdentifier.Builder<Void> builder() {
            return new DataCiteMetadataV3 .NameIdentifier.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .NameIdentifier.Builder<Void> copyOf(final DataCiteMetadataV3 .NameIdentifier other) {
            return new DataCiteMetadataV3 .NameIdentifier.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .NameIdentifier.Builder<Void> copyOf(final DataCiteMetadataV3 .NameIdentifier other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .NameIdentifier.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .NameIdentifier.Builder<Void> copyExcept(final DataCiteMetadataV3 .NameIdentifier other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .NameIdentifier.Builder<Void> copyOnly(final DataCiteMetadataV3 .NameIdentifier other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("value", value).add("identifierType", identifierType).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(value, identifierType);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .NameIdentifier o = ((DataCiteMetadataV3 .NameIdentifier) other);
            return (Objects.equal(value, o.value)&&Objects.equal(identifierType, o.identifierType));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .NameIdentifier _product;
            private String value;
            private String identifierType;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .NameIdentifier other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    this.value = other.value;
                    this.identifierType = other.identifierType;
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .NameIdentifier other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                        this.value = other.value;
                    }
                    final PropertyTree identifierTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("identifierType"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(identifierTypePropertyTree!= null):((identifierTypePropertyTree == null)||(!identifierTypePropertyTree.isLeaf())))) {
                        this.identifierType = other.identifierType;
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .NameIdentifier >P init(final P product) {
                product.value = this.value;
                product.identifierType = this.identifierType;
                return product;
            }

            public DataCiteMetadataV3 .NameIdentifier.Builder<TParentBuilder> withValue(final String value) {
                this.value = value;
                return this;
            }

            public DataCiteMetadataV3 .NameIdentifier.Builder<TParentBuilder> withIdentifierType(final String identifierType) {
                this.identifierType = identifierType;
                return this;
            }

            public DataCiteMetadataV3 .NameIdentifier build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .NameIdentifier());
                } else {
                    return ((DataCiteMetadataV3 .NameIdentifier) this._product);
                }
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="relatedIdentifier" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="relatedIdentifierType" use="required" type="{http://datacite.org/schema/kernel-3}relatedIdentifierType" />
     *                 &lt;attribute name="relationType" use="required" type="{http://datacite.org/schema/kernel-3}relationType" />
     *                 &lt;attribute name="relatedMetadataScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *                 &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                 &lt;attribute name="schemeType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "relatedIdentifier"
    })
    public static class RelatedIdentifiers {

        protected List<DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier> relatedIdentifier;
        protected transient List<DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier> relatedIdentifier_RO = null;

        public List<DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier> getRelatedIdentifier() {
            if (this.relatedIdentifier == null) {
                this.relatedIdentifier = new ArrayList<DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier>();
            }
            if (this.relatedIdentifier_RO == null) {
                this.relatedIdentifier_RO = ((relatedIdentifier == null)?null:Collections.unmodifiableList(this.relatedIdentifier));
            }
            return this.relatedIdentifier_RO;
        }

        public static DataCiteMetadataV3 .RelatedIdentifiers.Builder<Void> builder() {
            return new DataCiteMetadataV3 .RelatedIdentifiers.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .RelatedIdentifiers.Builder<Void> copyOf(final DataCiteMetadataV3 .RelatedIdentifiers other) {
            return new DataCiteMetadataV3 .RelatedIdentifiers.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .RelatedIdentifiers.Builder<Void> copyOf(final DataCiteMetadataV3 .RelatedIdentifiers other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .RelatedIdentifiers.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .RelatedIdentifiers.Builder<Void> copyExcept(final DataCiteMetadataV3 .RelatedIdentifiers other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .RelatedIdentifiers.Builder<Void> copyOnly(final DataCiteMetadataV3 .RelatedIdentifiers other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("relatedIdentifier", relatedIdentifier).add("relatedIdentifier_RO", relatedIdentifier_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(relatedIdentifier, relatedIdentifier_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .RelatedIdentifiers o = ((DataCiteMetadataV3 .RelatedIdentifiers) other);
            return (Objects.equal(relatedIdentifier, o.relatedIdentifier)&&Objects.equal(relatedIdentifier_RO, o.relatedIdentifier_RO));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .RelatedIdentifiers _product;
            private List<DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>>> relatedIdentifier;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .RelatedIdentifiers other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    if (other.relatedIdentifier == null) {
                        this.relatedIdentifier = null;
                    } else {
                        this.relatedIdentifier = new ArrayList<DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>>>();
                        for (DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier item: other.relatedIdentifier) {
                            this.relatedIdentifier.add(((item == null)?null:new DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>>(this, item, true)));
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .RelatedIdentifiers other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree relatedIdentifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("relatedIdentifier"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(relatedIdentifierPropertyTree!= null):((relatedIdentifierPropertyTree == null)||(!relatedIdentifierPropertyTree.isLeaf())))) {
                        if (other.relatedIdentifier == null) {
                            this.relatedIdentifier = null;
                        } else {
                            this.relatedIdentifier = new ArrayList<DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>>>();
                            for (DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier item: other.relatedIdentifier) {
                                this.relatedIdentifier.add(((item == null)?null:new DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>>(this, item, true, relatedIdentifierPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .RelatedIdentifiers >P init(final P product) {
                if (this.relatedIdentifier!= null) {
                    final List<DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier> relatedIdentifier = new ArrayList<DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier>(this.relatedIdentifier.size());
                    for (DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>> item: this.relatedIdentifier) {
                        relatedIdentifier.add(item.build());
                    }
                    product.relatedIdentifier = relatedIdentifier;
                }
                product.relatedIdentifier_RO = ((relatedIdentifier == null)?null:Collections.unmodifiableList(product.relatedIdentifier));
                return product;
            }

            public DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder> addRelatedIdentifier(final List<? extends DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier> relatedIdentifier) {
                if (this.relatedIdentifier == null) {
                    this.relatedIdentifier = new ArrayList<DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier item: relatedIdentifier) {
                    this.relatedIdentifier.add(new DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>>(this, item, false));
                }
                return this;
            }

            public DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder> withRelatedIdentifier(final List<? extends DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier> relatedIdentifier) {
                if (this.relatedIdentifier!= null) {
                    this.relatedIdentifier.clear();
                }
                return addRelatedIdentifier(relatedIdentifier);
            }

            public DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder> addRelatedIdentifier(DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier... relatedIdentifier) {
                addRelatedIdentifier(Arrays.asList(relatedIdentifier));
                return this;
            }

            public DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder> withRelatedIdentifier(DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier... relatedIdentifier) {
                withRelatedIdentifier(Arrays.asList(relatedIdentifier));
                return this;
            }

            public DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<? extends DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>> addRelatedIdentifier() {
                if (this.relatedIdentifier == null) {
                    this.relatedIdentifier = new ArrayList<DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>> relatedIdentifierBuilder = new DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadataV3 .RelatedIdentifiers.Builder<TParentBuilder>>(this, null, false);
                this.relatedIdentifier.add(relatedIdentifierBuilder);
                return relatedIdentifierBuilder;
            }

            public DataCiteMetadataV3 .RelatedIdentifiers build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .RelatedIdentifiers());
                } else {
                    return ((DataCiteMetadataV3 .RelatedIdentifiers) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="relatedIdentifierType" use="required" type="{http://datacite.org/schema/kernel-3}relatedIdentifierType" />
         *       &lt;attribute name="relationType" use="required" type="{http://datacite.org/schema/kernel-3}relationType" />
         *       &lt;attribute name="relatedMetadataScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *       &lt;attribute name="schemeType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class RelatedIdentifier {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "relatedIdentifierType", required = true)
            protected RelatedIdentifierType relatedIdentifierType;
            @XmlAttribute(name = "relationType", required = true)
            protected RelationType relationType;
            @XmlAttribute(name = "relatedMetadataScheme")
            @XmlSchemaType(name = "anySimpleType")
            protected String relatedMetadataScheme;
            @XmlAttribute(name = "schemeURI")
            @XmlSchemaType(name = "anyURI")
            protected String schemeURI;
            @XmlAttribute(name = "schemeType")
            @XmlSchemaType(name = "anySimpleType")
            protected String schemeType;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the relatedIdentifierType property.
             * 
             * @return
             *     possible object is
             *     {@link RelatedIdentifierType }
             *     
             */
            public RelatedIdentifierType getRelatedIdentifierType() {
                return relatedIdentifierType;
            }

            /**
             * Sets the value of the relatedIdentifierType property.
             * 
             * @param value
             *     allowed object is
             *     {@link RelatedIdentifierType }
             *     
             */
            protected void setRelatedIdentifierType(RelatedIdentifierType value) {
                this.relatedIdentifierType = value;
            }

            /**
             * Gets the value of the relationType property.
             * 
             * @return
             *     possible object is
             *     {@link RelationType }
             *     
             */
            public RelationType getRelationType() {
                return relationType;
            }

            /**
             * Sets the value of the relationType property.
             * 
             * @param value
             *     allowed object is
             *     {@link RelationType }
             *     
             */
            protected void setRelationType(RelationType value) {
                this.relationType = value;
            }

            /**
             * Gets the value of the relatedMetadataScheme property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getRelatedMetadataScheme() {
                return relatedMetadataScheme;
            }

            /**
             * Sets the value of the relatedMetadataScheme property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setRelatedMetadataScheme(String value) {
                this.relatedMetadataScheme = value;
            }

            /**
             * Gets the value of the schemeURI property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getSchemeURI() {
                return schemeURI;
            }

            /**
             * Sets the value of the schemeURI property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setSchemeURI(String value) {
                this.schemeURI = value;
            }

            /**
             * Gets the value of the schemeType property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getSchemeType() {
                return schemeType;
            }

            /**
             * Sets the value of the schemeType property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setSchemeType(String value) {
                this.schemeType = value;
            }

            public static DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<Void> builder() {
                return new DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<Void> copyOf(final DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier other) {
                return new DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<Void>(null, other, true);
            }

            public static DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<Void> copyOf(final DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                return new DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
            }

            public static DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<Void> copyExcept(final DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<Void> copyOnly(final DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("relatedIdentifierType", relatedIdentifierType).add("relationType", relationType).add("relatedMetadataScheme", relatedMetadataScheme).add("schemeURI", schemeURI).add("schemeType", schemeType).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, relatedIdentifierType, relationType, relatedMetadataScheme, schemeURI, schemeType);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier o = ((DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier) other);
                return (((((Objects.equal(value, o.value)&&Objects.equal(relatedIdentifierType, o.relatedIdentifierType))&&Objects.equal(relationType, o.relationType))&&Objects.equal(relatedMetadataScheme, o.relatedMetadataScheme))&&Objects.equal(schemeURI, o.schemeURI))&&Objects.equal(schemeType, o.schemeType));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier _product;
                private String value;
                private RelatedIdentifierType relatedIdentifierType;
                private RelationType relationType;
                private String relatedMetadataScheme;
                private String schemeURI;
                private String schemeType;

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier other, final boolean copy) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        this.value = other.value;
                        this.relatedIdentifierType = other.relatedIdentifierType;
                        this.relationType = other.relationType;
                        this.relatedMetadataScheme = other.relatedMetadataScheme;
                        this.schemeURI = other.schemeURI;
                        this.schemeType = other.schemeType;
                    } else {
                        this._product = other;
                    }
                }

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = other.value;
                        }
                        final PropertyTree relatedIdentifierTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("relatedIdentifierType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(relatedIdentifierTypePropertyTree!= null):((relatedIdentifierTypePropertyTree == null)||(!relatedIdentifierTypePropertyTree.isLeaf())))) {
                            this.relatedIdentifierType = other.relatedIdentifierType;
                        }
                        final PropertyTree relationTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("relationType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(relationTypePropertyTree!= null):((relationTypePropertyTree == null)||(!relationTypePropertyTree.isLeaf())))) {
                            this.relationType = other.relationType;
                        }
                        final PropertyTree relatedMetadataSchemePropertyTree = ((propertyTree == null)?null:propertyTree.get("relatedMetadataScheme"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(relatedMetadataSchemePropertyTree!= null):((relatedMetadataSchemePropertyTree == null)||(!relatedMetadataSchemePropertyTree.isLeaf())))) {
                            this.relatedMetadataScheme = other.relatedMetadataScheme;
                        }
                        final PropertyTree schemeURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("schemeURI"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(schemeURIPropertyTree!= null):((schemeURIPropertyTree == null)||(!schemeURIPropertyTree.isLeaf())))) {
                            this.schemeURI = other.schemeURI;
                        }
                        final PropertyTree schemeTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("schemeType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(schemeTypePropertyTree!= null):((schemeTypePropertyTree == null)||(!schemeTypePropertyTree.isLeaf())))) {
                            this.schemeType = other.schemeType;
                        }
                    } else {
                        this._product = other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier >P init(final P product) {
                    product.value = this.value;
                    product.relatedIdentifierType = this.relatedIdentifierType;
                    product.relationType = this.relationType;
                    product.relatedMetadataScheme = this.relatedMetadataScheme;
                    product.schemeURI = this.schemeURI;
                    product.schemeType = this.schemeType;
                    return product;
                }

                public DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                public DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withRelatedIdentifierType(final RelatedIdentifierType relatedIdentifierType) {
                    this.relatedIdentifierType = relatedIdentifierType;
                    return this;
                }

                public DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withRelationType(final RelationType relationType) {
                    this.relationType = relationType;
                    return this;
                }

                public DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withRelatedMetadataScheme(final String relatedMetadataScheme) {
                    this.relatedMetadataScheme = relatedMetadataScheme;
                    return this;
                }

                public DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withSchemeURI(final String schemeURI) {
                    this.schemeURI = schemeURI;
                    return this;
                }

                public DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withSchemeType(final String schemeType) {
                    this.schemeType = schemeType;
                    return this;
                }

                public DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier());
                    } else {
                        return ((DataCiteMetadataV3 .RelatedIdentifiers.RelatedIdentifier) this._product);
                    }
                }

            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;simpleContent>
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *       &lt;attribute name="resourceTypeGeneral" use="required" type="{http://datacite.org/schema/kernel-3}resourceType" />
     *     &lt;/extension>
     *   &lt;/simpleContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class ResourceType {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "resourceTypeGeneral", required = true)
        protected org.gbif.doi.datacite.ResourceType resourceTypeGeneral;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        protected void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the resourceTypeGeneral property.
         * 
         * @return
         *     possible object is
         *     {@link org.gbif.doi.datacite.ResourceType }
         *     
         */
        public org.gbif.doi.datacite.ResourceType getResourceTypeGeneral() {
            return resourceTypeGeneral;
        }

        /**
         * Sets the value of the resourceTypeGeneral property.
         * 
         * @param value
         *     allowed object is
         *     {@link org.gbif.doi.datacite.ResourceType }
         *     
         */
        protected void setResourceTypeGeneral(org.gbif.doi.datacite.ResourceType value) {
            this.resourceTypeGeneral = value;
        }

        public static DataCiteMetadataV3 .ResourceType.Builder<Void> builder() {
            return new DataCiteMetadataV3 .ResourceType.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .ResourceType.Builder<Void> copyOf(final DataCiteMetadataV3 .ResourceType other) {
            return new DataCiteMetadataV3 .ResourceType.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .ResourceType.Builder<Void> copyOf(final DataCiteMetadataV3 .ResourceType other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .ResourceType.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .ResourceType.Builder<Void> copyExcept(final DataCiteMetadataV3 .ResourceType other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .ResourceType.Builder<Void> copyOnly(final DataCiteMetadataV3 .ResourceType other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("value", value).add("resourceTypeGeneral", resourceTypeGeneral).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(value, resourceTypeGeneral);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .ResourceType o = ((DataCiteMetadataV3 .ResourceType) other);
            return (Objects.equal(value, o.value)&&Objects.equal(resourceTypeGeneral, o.resourceTypeGeneral));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .ResourceType _product;
            private String value;
            private org.gbif.doi.datacite.ResourceType resourceTypeGeneral;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .ResourceType other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    this.value = other.value;
                    this.resourceTypeGeneral = other.resourceTypeGeneral;
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .ResourceType other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                        this.value = other.value;
                    }
                    final PropertyTree resourceTypeGeneralPropertyTree = ((propertyTree == null)?null:propertyTree.get("resourceTypeGeneral"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(resourceTypeGeneralPropertyTree!= null):((resourceTypeGeneralPropertyTree == null)||(!resourceTypeGeneralPropertyTree.isLeaf())))) {
                        this.resourceTypeGeneral = other.resourceTypeGeneral;
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .ResourceType >P init(final P product) {
                product.value = this.value;
                product.resourceTypeGeneral = this.resourceTypeGeneral;
                return product;
            }

            public DataCiteMetadataV3 .ResourceType.Builder<TParentBuilder> withValue(final String value) {
                this.value = value;
                return this;
            }

            public DataCiteMetadataV3 .ResourceType.Builder<TParentBuilder> withResourceTypeGeneral(final org.gbif.doi.datacite.ResourceType resourceTypeGeneral) {
                this.resourceTypeGeneral = resourceTypeGeneral;
                return this;
            }

            public DataCiteMetadataV3 .ResourceType build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .ResourceType());
                } else {
                    return ((DataCiteMetadataV3 .ResourceType) this._product);
                }
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="right" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="rightsURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "right"
    })
    public static class RightsList {

        protected List<DataCiteMetadataV3 .RightsList.Right> right;
        protected transient List<DataCiteMetadataV3 .RightsList.Right> right_RO = null;

        public List<DataCiteMetadataV3 .RightsList.Right> getRight() {
            if (this.right == null) {
                this.right = new ArrayList<DataCiteMetadataV3 .RightsList.Right>();
            }
            if (this.right_RO == null) {
                this.right_RO = ((right == null)?null:Collections.unmodifiableList(this.right));
            }
            return this.right_RO;
        }

        public static DataCiteMetadataV3 .RightsList.Builder<Void> builder() {
            return new DataCiteMetadataV3 .RightsList.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .RightsList.Builder<Void> copyOf(final DataCiteMetadataV3 .RightsList other) {
            return new DataCiteMetadataV3 .RightsList.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .RightsList.Builder<Void> copyOf(final DataCiteMetadataV3 .RightsList other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .RightsList.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .RightsList.Builder<Void> copyExcept(final DataCiteMetadataV3 .RightsList other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .RightsList.Builder<Void> copyOnly(final DataCiteMetadataV3 .RightsList other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("right", right).add("right_RO", right_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(right, right_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .RightsList o = ((DataCiteMetadataV3 .RightsList) other);
            return (Objects.equal(right, o.right)&&Objects.equal(right_RO, o.right_RO));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .RightsList _product;
            private List<DataCiteMetadataV3 .RightsList.Right.Builder<DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>>> right;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .RightsList other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    if (other.right == null) {
                        this.right = null;
                    } else {
                        this.right = new ArrayList<DataCiteMetadataV3 .RightsList.Right.Builder<DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>>>();
                        for (DataCiteMetadataV3 .RightsList.Right item: other.right) {
                            this.right.add(((item == null)?null:new DataCiteMetadataV3 .RightsList.Right.Builder<DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>>(this, item, true)));
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .RightsList other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree rightPropertyTree = ((propertyTree == null)?null:propertyTree.get("right"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(rightPropertyTree!= null):((rightPropertyTree == null)||(!rightPropertyTree.isLeaf())))) {
                        if (other.right == null) {
                            this.right = null;
                        } else {
                            this.right = new ArrayList<DataCiteMetadataV3 .RightsList.Right.Builder<DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>>>();
                            for (DataCiteMetadataV3 .RightsList.Right item: other.right) {
                                this.right.add(((item == null)?null:new DataCiteMetadataV3 .RightsList.Right.Builder<DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>>(this, item, true, rightPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .RightsList >P init(final P product) {
                if (this.right!= null) {
                    final List<DataCiteMetadataV3 .RightsList.Right> right = new ArrayList<DataCiteMetadataV3 .RightsList.Right>(this.right.size());
                    for (DataCiteMetadataV3 .RightsList.Right.Builder<DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>> item: this.right) {
                        right.add(item.build());
                    }
                    product.right = right;
                }
                product.right_RO = ((right == null)?null:Collections.unmodifiableList(product.right));
                return product;
            }

            public DataCiteMetadataV3 .RightsList.Builder<TParentBuilder> addRight(final List<? extends DataCiteMetadataV3 .RightsList.Right> right) {
                if (this.right == null) {
                    this.right = new ArrayList<DataCiteMetadataV3 .RightsList.Right.Builder<DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadataV3 .RightsList.Right item: right) {
                    this.right.add(new DataCiteMetadataV3 .RightsList.Right.Builder<DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>>(this, item, false));
                }
                return this;
            }

            public DataCiteMetadataV3 .RightsList.Builder<TParentBuilder> withRight(final List<? extends DataCiteMetadataV3 .RightsList.Right> right) {
                if (this.right!= null) {
                    this.right.clear();
                }
                return addRight(right);
            }

            public DataCiteMetadataV3 .RightsList.Builder<TParentBuilder> addRight(DataCiteMetadataV3 .RightsList.Right... right) {
                addRight(Arrays.asList(right));
                return this;
            }

            public DataCiteMetadataV3 .RightsList.Builder<TParentBuilder> withRight(DataCiteMetadataV3 .RightsList.Right... right) {
                withRight(Arrays.asList(right));
                return this;
            }

            public DataCiteMetadataV3 .RightsList.Right.Builder<? extends DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>> addRight() {
                if (this.right == null) {
                    this.right = new ArrayList<DataCiteMetadataV3 .RightsList.Right.Builder<DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadataV3 .RightsList.Right.Builder<DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>> rightBuilder = new DataCiteMetadataV3 .RightsList.Right.Builder<DataCiteMetadataV3 .RightsList.Builder<TParentBuilder>>(this, null, false);
                this.right.add(rightBuilder);
                return rightBuilder;
            }

            public DataCiteMetadataV3 .RightsList build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .RightsList());
                } else {
                    return ((DataCiteMetadataV3 .RightsList) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="rightsURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Right {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "rightsURI")
            @XmlSchemaType(name = "anyURI")
            protected String rightsURI;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the rightsURI property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getRightsURI() {
                return rightsURI;
            }

            /**
             * Sets the value of the rightsURI property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setRightsURI(String value) {
                this.rightsURI = value;
            }

            public static DataCiteMetadataV3 .RightsList.Right.Builder<Void> builder() {
                return new DataCiteMetadataV3 .RightsList.Right.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadataV3 .RightsList.Right.Builder<Void> copyOf(final DataCiteMetadataV3 .RightsList.Right other) {
                return new DataCiteMetadataV3 .RightsList.Right.Builder<Void>(null, other, true);
            }

            public static DataCiteMetadataV3 .RightsList.Right.Builder<Void> copyOf(final DataCiteMetadataV3 .RightsList.Right other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                return new DataCiteMetadataV3 .RightsList.Right.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
            }

            public static DataCiteMetadataV3 .RightsList.Right.Builder<Void> copyExcept(final DataCiteMetadataV3 .RightsList.Right other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadataV3 .RightsList.Right.Builder<Void> copyOnly(final DataCiteMetadataV3 .RightsList.Right other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("rightsURI", rightsURI).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, rightsURI);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadataV3 .RightsList.Right o = ((DataCiteMetadataV3 .RightsList.Right) other);
                return (Objects.equal(value, o.value)&&Objects.equal(rightsURI, o.rightsURI));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadataV3 .RightsList.Right _product;
                private String value;
                private String rightsURI;

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .RightsList.Right other, final boolean copy) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        this.value = other.value;
                        this.rightsURI = other.rightsURI;
                    } else {
                        this._product = other;
                    }
                }

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .RightsList.Right other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = other.value;
                        }
                        final PropertyTree rightsURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("rightsURI"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(rightsURIPropertyTree!= null):((rightsURIPropertyTree == null)||(!rightsURIPropertyTree.isLeaf())))) {
                            this.rightsURI = other.rightsURI;
                        }
                    } else {
                        this._product = other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadataV3 .RightsList.Right >P init(final P product) {
                    product.value = this.value;
                    product.rightsURI = this.rightsURI;
                    return product;
                }

                public DataCiteMetadataV3 .RightsList.Right.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                public DataCiteMetadataV3 .RightsList.Right.Builder<TParentBuilder> withRightsURI(final String rightsURI) {
                    this.rightsURI = rightsURI;
                    return this;
                }

                public DataCiteMetadataV3 .RightsList.Right build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadataV3 .RightsList.Right());
                    } else {
                        return ((DataCiteMetadataV3 .RightsList.Right) this._product);
                    }
                }

            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="sizes" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "sizes"
    })
    public static class Sizes {

        protected List<String> sizes;
        protected transient List<String> sizes_RO = null;

        public List<String> getSizes() {
            if (this.sizes == null) {
                this.sizes = new ArrayList<String>();
            }
            if (this.sizes_RO == null) {
                this.sizes_RO = ((sizes == null)?null:Collections.unmodifiableList(this.sizes));
            }
            return this.sizes_RO;
        }

        public static DataCiteMetadataV3 .Sizes.Builder<Void> builder() {
            return new DataCiteMetadataV3 .Sizes.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .Sizes.Builder<Void> copyOf(final DataCiteMetadataV3 .Sizes other) {
            return new DataCiteMetadataV3 .Sizes.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .Sizes.Builder<Void> copyOf(final DataCiteMetadataV3 .Sizes other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .Sizes.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .Sizes.Builder<Void> copyExcept(final DataCiteMetadataV3 .Sizes other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .Sizes.Builder<Void> copyOnly(final DataCiteMetadataV3 .Sizes other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("sizes", sizes).add("sizes_RO", sizes_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(sizes, sizes_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .Sizes o = ((DataCiteMetadataV3 .Sizes) other);
            return (Objects.equal(sizes, o.sizes)&&Objects.equal(sizes_RO, o.sizes_RO));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .Sizes _product;
            private List<String> sizes;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Sizes other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    this.sizes = ((other.sizes == null)?null:new ArrayList<String>(other.sizes));
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Sizes other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree sizesPropertyTree = ((propertyTree == null)?null:propertyTree.get("sizes"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(sizesPropertyTree!= null):((sizesPropertyTree == null)||(!sizesPropertyTree.isLeaf())))) {
                        this.sizes = ((other.sizes == null)?null:new ArrayList<String>(other.sizes));
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .Sizes >P init(final P product) {
                product.sizes = this.sizes;
                product.sizes_RO = ((sizes == null)?null:Collections.unmodifiableList(product.sizes));
                return product;
            }

            public DataCiteMetadataV3 .Sizes.Builder<TParentBuilder> addSizes(final List<? extends String> sizes) {
                if (this.sizes == null) {
                    this.sizes = new ArrayList<String>();
                }
                this.sizes.addAll(sizes);
                return this;
            }

            public DataCiteMetadataV3 .Sizes.Builder<TParentBuilder> withSizes(final List<? extends String> sizes) {
                if (this.sizes!= null) {
                    this.sizes.clear();
                }
                return addSizes(sizes);
            }

            public DataCiteMetadataV3 .Sizes.Builder<TParentBuilder> addSizes(String... sizes) {
                addSizes(Arrays.asList(sizes));
                return this;
            }

            public DataCiteMetadataV3 .Sizes.Builder<TParentBuilder> withSizes(String... sizes) {
                withSizes(Arrays.asList(sizes));
                return this;
            }

            public DataCiteMetadataV3 .Sizes build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .Sizes());
                } else {
                    return ((DataCiteMetadataV3 .Sizes) this._product);
                }
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="subject" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="subjectScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *                 &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                 &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "subject"
    })
    public static class Subjects {

        protected List<DataCiteMetadataV3 .Subjects.Subject> subject;
        protected transient List<DataCiteMetadataV3 .Subjects.Subject> subject_RO = null;

        public List<DataCiteMetadataV3 .Subjects.Subject> getSubject() {
            if (this.subject == null) {
                this.subject = new ArrayList<DataCiteMetadataV3 .Subjects.Subject>();
            }
            if (this.subject_RO == null) {
                this.subject_RO = ((subject == null)?null:Collections.unmodifiableList(this.subject));
            }
            return this.subject_RO;
        }

        public static DataCiteMetadataV3 .Subjects.Builder<Void> builder() {
            return new DataCiteMetadataV3 .Subjects.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .Subjects.Builder<Void> copyOf(final DataCiteMetadataV3 .Subjects other) {
            return new DataCiteMetadataV3 .Subjects.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .Subjects.Builder<Void> copyOf(final DataCiteMetadataV3 .Subjects other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .Subjects.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .Subjects.Builder<Void> copyExcept(final DataCiteMetadataV3 .Subjects other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .Subjects.Builder<Void> copyOnly(final DataCiteMetadataV3 .Subjects other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("subject", subject).add("subject_RO", subject_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(subject, subject_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .Subjects o = ((DataCiteMetadataV3 .Subjects) other);
            return (Objects.equal(subject, o.subject)&&Objects.equal(subject_RO, o.subject_RO));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .Subjects _product;
            private List<DataCiteMetadataV3 .Subjects.Subject.Builder<DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>>> subject;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Subjects other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    if (other.subject == null) {
                        this.subject = null;
                    } else {
                        this.subject = new ArrayList<DataCiteMetadataV3 .Subjects.Subject.Builder<DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>>>();
                        for (DataCiteMetadataV3 .Subjects.Subject item: other.subject) {
                            this.subject.add(((item == null)?null:new DataCiteMetadataV3 .Subjects.Subject.Builder<DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>>(this, item, true)));
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Subjects other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree subjectPropertyTree = ((propertyTree == null)?null:propertyTree.get("subject"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(subjectPropertyTree!= null):((subjectPropertyTree == null)||(!subjectPropertyTree.isLeaf())))) {
                        if (other.subject == null) {
                            this.subject = null;
                        } else {
                            this.subject = new ArrayList<DataCiteMetadataV3 .Subjects.Subject.Builder<DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>>>();
                            for (DataCiteMetadataV3 .Subjects.Subject item: other.subject) {
                                this.subject.add(((item == null)?null:new DataCiteMetadataV3 .Subjects.Subject.Builder<DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>>(this, item, true, subjectPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .Subjects >P init(final P product) {
                if (this.subject!= null) {
                    final List<DataCiteMetadataV3 .Subjects.Subject> subject = new ArrayList<DataCiteMetadataV3 .Subjects.Subject>(this.subject.size());
                    for (DataCiteMetadataV3 .Subjects.Subject.Builder<DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>> item: this.subject) {
                        subject.add(item.build());
                    }
                    product.subject = subject;
                }
                product.subject_RO = ((subject == null)?null:Collections.unmodifiableList(product.subject));
                return product;
            }

            public DataCiteMetadataV3 .Subjects.Builder<TParentBuilder> addSubject(final List<? extends DataCiteMetadataV3 .Subjects.Subject> subject) {
                if (this.subject == null) {
                    this.subject = new ArrayList<DataCiteMetadataV3 .Subjects.Subject.Builder<DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadataV3 .Subjects.Subject item: subject) {
                    this.subject.add(new DataCiteMetadataV3 .Subjects.Subject.Builder<DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>>(this, item, false));
                }
                return this;
            }

            public DataCiteMetadataV3 .Subjects.Builder<TParentBuilder> withSubject(final List<? extends DataCiteMetadataV3 .Subjects.Subject> subject) {
                if (this.subject!= null) {
                    this.subject.clear();
                }
                return addSubject(subject);
            }

            public DataCiteMetadataV3 .Subjects.Builder<TParentBuilder> addSubject(DataCiteMetadataV3 .Subjects.Subject... subject) {
                addSubject(Arrays.asList(subject));
                return this;
            }

            public DataCiteMetadataV3 .Subjects.Builder<TParentBuilder> withSubject(DataCiteMetadataV3 .Subjects.Subject... subject) {
                withSubject(Arrays.asList(subject));
                return this;
            }

            public DataCiteMetadataV3 .Subjects.Subject.Builder<? extends DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>> addSubject() {
                if (this.subject == null) {
                    this.subject = new ArrayList<DataCiteMetadataV3 .Subjects.Subject.Builder<DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadataV3 .Subjects.Subject.Builder<DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>> subjectBuilder = new DataCiteMetadataV3 .Subjects.Subject.Builder<DataCiteMetadataV3 .Subjects.Builder<TParentBuilder>>(this, null, false);
                this.subject.add(subjectBuilder);
                return subjectBuilder;
            }

            public DataCiteMetadataV3 .Subjects build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .Subjects());
                } else {
                    return ((DataCiteMetadataV3 .Subjects) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="subjectScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Subject {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "subjectScheme")
            @XmlSchemaType(name = "anySimpleType")
            protected String subjectScheme;
            @XmlAttribute(name = "schemeURI")
            @XmlSchemaType(name = "anyURI")
            protected String schemeURI;
            @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
            protected String lang;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the subjectScheme property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getSubjectScheme() {
                return subjectScheme;
            }

            /**
             * Sets the value of the subjectScheme property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setSubjectScheme(String value) {
                this.subjectScheme = value;
            }

            /**
             * Gets the value of the schemeURI property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getSchemeURI() {
                return schemeURI;
            }

            /**
             * Sets the value of the schemeURI property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setSchemeURI(String value) {
                this.schemeURI = value;
            }

            /**
             * Gets the value of the lang property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getLang() {
                return lang;
            }

            /**
             * Sets the value of the lang property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setLang(String value) {
                this.lang = value;
            }

            public static DataCiteMetadataV3 .Subjects.Subject.Builder<Void> builder() {
                return new DataCiteMetadataV3 .Subjects.Subject.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadataV3 .Subjects.Subject.Builder<Void> copyOf(final DataCiteMetadataV3 .Subjects.Subject other) {
                return new DataCiteMetadataV3 .Subjects.Subject.Builder<Void>(null, other, true);
            }

            public static DataCiteMetadataV3 .Subjects.Subject.Builder<Void> copyOf(final DataCiteMetadataV3 .Subjects.Subject other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                return new DataCiteMetadataV3 .Subjects.Subject.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
            }

            public static DataCiteMetadataV3 .Subjects.Subject.Builder<Void> copyExcept(final DataCiteMetadataV3 .Subjects.Subject other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadataV3 .Subjects.Subject.Builder<Void> copyOnly(final DataCiteMetadataV3 .Subjects.Subject other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("subjectScheme", subjectScheme).add("schemeURI", schemeURI).add("lang", lang).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, subjectScheme, schemeURI, lang);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadataV3 .Subjects.Subject o = ((DataCiteMetadataV3 .Subjects.Subject) other);
                return (((Objects.equal(value, o.value)&&Objects.equal(subjectScheme, o.subjectScheme))&&Objects.equal(schemeURI, o.schemeURI))&&Objects.equal(lang, o.lang));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadataV3 .Subjects.Subject _product;
                private String value;
                private String subjectScheme;
                private String schemeURI;
                private String lang;

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Subjects.Subject other, final boolean copy) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        this.value = other.value;
                        this.subjectScheme = other.subjectScheme;
                        this.schemeURI = other.schemeURI;
                        this.lang = other.lang;
                    } else {
                        this._product = other;
                    }
                }

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Subjects.Subject other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = other.value;
                        }
                        final PropertyTree subjectSchemePropertyTree = ((propertyTree == null)?null:propertyTree.get("subjectScheme"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(subjectSchemePropertyTree!= null):((subjectSchemePropertyTree == null)||(!subjectSchemePropertyTree.isLeaf())))) {
                            this.subjectScheme = other.subjectScheme;
                        }
                        final PropertyTree schemeURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("schemeURI"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(schemeURIPropertyTree!= null):((schemeURIPropertyTree == null)||(!schemeURIPropertyTree.isLeaf())))) {
                            this.schemeURI = other.schemeURI;
                        }
                        final PropertyTree langPropertyTree = ((propertyTree == null)?null:propertyTree.get("lang"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(langPropertyTree!= null):((langPropertyTree == null)||(!langPropertyTree.isLeaf())))) {
                            this.lang = other.lang;
                        }
                    } else {
                        this._product = other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadataV3 .Subjects.Subject >P init(final P product) {
                    product.value = this.value;
                    product.subjectScheme = this.subjectScheme;
                    product.schemeURI = this.schemeURI;
                    product.lang = this.lang;
                    return product;
                }

                public DataCiteMetadataV3 .Subjects.Subject.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                public DataCiteMetadataV3 .Subjects.Subject.Builder<TParentBuilder> withSubjectScheme(final String subjectScheme) {
                    this.subjectScheme = subjectScheme;
                    return this;
                }

                public DataCiteMetadataV3 .Subjects.Subject.Builder<TParentBuilder> withSchemeURI(final String schemeURI) {
                    this.schemeURI = schemeURI;
                    return this;
                }

                public DataCiteMetadataV3 .Subjects.Subject.Builder<TParentBuilder> withLang(final String lang) {
                    this.lang = lang;
                    return this;
                }

                public DataCiteMetadataV3 .Subjects.Subject build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadataV3 .Subjects.Subject());
                    } else {
                        return ((DataCiteMetadataV3 .Subjects.Subject) this._product);
                    }
                }

            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="titles" maxOccurs="unbounded">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://datacite.org/schema/kernel-3>nonemptycontentStringType">
     *                 &lt;attribute name="titleType" type="{http://datacite.org/schema/kernel-3}titleType" />
     *                 &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "titles"
    })
    public static class Titles {

        @XmlElement(required = true)
        protected List<DataCiteMetadataV3 .Titles.Titles> titles;
        protected transient List<DataCiteMetadataV3 .Titles.Titles> titles_RO = null;

        public List<DataCiteMetadataV3 .Titles.Titles> getTitles() {
            if (this.titles == null) {
                this.titles = new ArrayList<DataCiteMetadataV3 .Titles.Titles>();
            }
            if (this.titles_RO == null) {
                this.titles_RO = ((titles == null)?null:Collections.unmodifiableList(this.titles));
            }
            return this.titles_RO;
        }

        public static DataCiteMetadataV3 .Titles.Builder<Void> builder() {
            return new DataCiteMetadataV3 .Titles.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadataV3 .Titles.Builder<Void> copyOf(final DataCiteMetadataV3 .Titles other) {
            return new DataCiteMetadataV3 .Titles.Builder<Void>(null, other, true);
        }

        public static DataCiteMetadataV3 .Titles.Builder<Void> copyOf(final DataCiteMetadataV3 .Titles other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
            return new DataCiteMetadataV3 .Titles.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
        }

        public static DataCiteMetadataV3 .Titles.Builder<Void> copyExcept(final DataCiteMetadataV3 .Titles other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadataV3 .Titles.Builder<Void> copyOnly(final DataCiteMetadataV3 .Titles other, final PropertyTree propertyTree) {
            return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("titles", titles).add("titles_RO", titles_RO).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(titles, titles_RO);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadataV3 .Titles o = ((DataCiteMetadataV3 .Titles) other);
            return (Objects.equal(titles, o.titles)&&Objects.equal(titles_RO, o.titles_RO));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadataV3 .Titles _product;
            private List<DataCiteMetadataV3 .Titles.Titles.Builder<DataCiteMetadataV3 .Titles.Builder<TParentBuilder>>> titles;

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Titles other, final boolean copy) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    if (other.titles == null) {
                        this.titles = null;
                    } else {
                        this.titles = new ArrayList<DataCiteMetadataV3 .Titles.Titles.Builder<DataCiteMetadataV3 .Titles.Builder<TParentBuilder>>>();
                        for (DataCiteMetadataV3 .Titles.Titles item: other.titles) {
                            this.titles.add(((item == null)?null:new DataCiteMetadataV3 .Titles.Titles.Builder<DataCiteMetadataV3 .Titles.Builder<TParentBuilder>>(this, item, true)));
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Titles other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = parentBuilder;
                if (copy) {
                    this._product = null;
                    final PropertyTree titlesPropertyTree = ((propertyTree == null)?null:propertyTree.get("titles"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(titlesPropertyTree!= null):((titlesPropertyTree == null)||(!titlesPropertyTree.isLeaf())))) {
                        if (other.titles == null) {
                            this.titles = null;
                        } else {
                            this.titles = new ArrayList<DataCiteMetadataV3 .Titles.Titles.Builder<DataCiteMetadataV3 .Titles.Builder<TParentBuilder>>>();
                            for (DataCiteMetadataV3 .Titles.Titles item: other.titles) {
                                this.titles.add(((item == null)?null:new DataCiteMetadataV3 .Titles.Titles.Builder<DataCiteMetadataV3 .Titles.Builder<TParentBuilder>>(this, item, true, titlesPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadataV3 .Titles >P init(final P product) {
                if (this.titles!= null) {
                    final List<DataCiteMetadataV3 .Titles.Titles> titles = new ArrayList<DataCiteMetadataV3 .Titles.Titles>(this.titles.size());
                    for (DataCiteMetadataV3 .Titles.Titles.Builder<DataCiteMetadataV3 .Titles.Builder<TParentBuilder>> item: this.titles) {
                        titles.add(item.build());
                    }
                    product.titles = titles;
                }
                product.titles_RO = ((titles == null)?null:Collections.unmodifiableList(product.titles));
                return product;
            }

            public DataCiteMetadataV3 .Titles.Builder<TParentBuilder> addTitles(final List<? extends DataCiteMetadataV3 .Titles.Titles> titles) {
                if (this.titles == null) {
                    this.titles = new ArrayList<DataCiteMetadataV3 .Titles.Titles.Builder<DataCiteMetadataV3 .Titles.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadataV3 .Titles.Titles item: titles) {
                    this.titles.add(new DataCiteMetadataV3 .Titles.Titles.Builder<DataCiteMetadataV3 .Titles.Builder<TParentBuilder>>(this, item, false));
                }
                return this;
            }

            public DataCiteMetadataV3 .Titles.Builder<TParentBuilder> withTitles(final List<? extends DataCiteMetadataV3 .Titles.Titles> titles) {
                if (this.titles!= null) {
                    this.titles.clear();
                }
                return addTitles(titles);
            }

            public DataCiteMetadataV3 .Titles.Builder<TParentBuilder> addTitles(DataCiteMetadataV3 .Titles.Titles... titles) {
                addTitles(Arrays.asList(titles));
                return this;
            }

            public DataCiteMetadataV3 .Titles.Builder<TParentBuilder> withTitles(DataCiteMetadataV3 .Titles.Titles... titles) {
                withTitles(Arrays.asList(titles));
                return this;
            }

            public DataCiteMetadataV3 .Titles.Titles.Builder<? extends DataCiteMetadataV3 .Titles.Builder<TParentBuilder>> addTitles() {
                if (this.titles == null) {
                    this.titles = new ArrayList<DataCiteMetadataV3 .Titles.Titles.Builder<DataCiteMetadataV3 .Titles.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadataV3 .Titles.Titles.Builder<DataCiteMetadataV3 .Titles.Builder<TParentBuilder>> titlesBuilder = new DataCiteMetadataV3 .Titles.Titles.Builder<DataCiteMetadataV3 .Titles.Builder<TParentBuilder>>(this, null, false);
                this.titles.add(titlesBuilder);
                return titlesBuilder;
            }

            public DataCiteMetadataV3 .Titles build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadataV3 .Titles());
                } else {
                    return ((DataCiteMetadataV3 .Titles) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://datacite.org/schema/kernel-3>nonemptycontentStringType">
         *       &lt;attribute name="titleType" type="{http://datacite.org/schema/kernel-3}titleType" />
         *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Titles {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "titleType")
            protected TitleType titleType;
            @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
            protected String lang;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the titleType property.
             * 
             * @return
             *     possible object is
             *     {@link TitleType }
             *     
             */
            public TitleType getTitleType() {
                return titleType;
            }

            /**
             * Sets the value of the titleType property.
             * 
             * @param value
             *     allowed object is
             *     {@link TitleType }
             *     
             */
            protected void setTitleType(TitleType value) {
                this.titleType = value;
            }

            /**
             * Gets the value of the lang property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getLang() {
                return lang;
            }

            /**
             * Sets the value of the lang property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            protected void setLang(String value) {
                this.lang = value;
            }

            public static DataCiteMetadataV3 .Titles.Titles.Builder<Void> builder() {
                return new DataCiteMetadataV3 .Titles.Titles.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadataV3 .Titles.Titles.Builder<Void> copyOf(final DataCiteMetadataV3 .Titles.Titles other) {
                return new DataCiteMetadataV3 .Titles.Titles.Builder<Void>(null, other, true);
            }

            public static DataCiteMetadataV3 .Titles.Titles.Builder<Void> copyOf(final DataCiteMetadataV3 .Titles.Titles other, final PropertyTree propertyTree, final PropertyTreeUse propertyTreeUse) {
                return new DataCiteMetadataV3 .Titles.Titles.Builder<Void>(null, other, true, propertyTree, propertyTreeUse);
            }

            public static DataCiteMetadataV3 .Titles.Titles.Builder<Void> copyExcept(final DataCiteMetadataV3 .Titles.Titles other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadataV3 .Titles.Titles.Builder<Void> copyOnly(final DataCiteMetadataV3 .Titles.Titles other, final PropertyTree propertyTree) {
                return copyOf(other, propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("titleType", titleType).add("lang", lang).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, titleType, lang);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadataV3 .Titles.Titles o = ((DataCiteMetadataV3 .Titles.Titles) other);
                return ((Objects.equal(value, o.value)&&Objects.equal(titleType, o.titleType))&&Objects.equal(lang, o.lang));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadataV3 .Titles.Titles _product;
                private String value;
                private TitleType titleType;
                private String lang;

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Titles.Titles other, final boolean copy) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        this.value = other.value;
                        this.titleType = other.titleType;
                        this.lang = other.lang;
                    } else {
                        this._product = other;
                    }
                }

                public Builder(final TParentBuilder parentBuilder, final DataCiteMetadataV3 .Titles.Titles other, final boolean copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = parentBuilder;
                    if (copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = other.value;
                        }
                        final PropertyTree titleTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("titleType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(titleTypePropertyTree!= null):((titleTypePropertyTree == null)||(!titleTypePropertyTree.isLeaf())))) {
                            this.titleType = other.titleType;
                        }
                        final PropertyTree langPropertyTree = ((propertyTree == null)?null:propertyTree.get("lang"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(langPropertyTree!= null):((langPropertyTree == null)||(!langPropertyTree.isLeaf())))) {
                            this.lang = other.lang;
                        }
                    } else {
                        this._product = other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadataV3 .Titles.Titles >P init(final P product) {
                    product.value = this.value;
                    product.titleType = this.titleType;
                    product.lang = this.lang;
                    return product;
                }

                public DataCiteMetadataV3 .Titles.Titles.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                public DataCiteMetadataV3 .Titles.Titles.Builder<TParentBuilder> withTitleType(final TitleType titleType) {
                    this.titleType = titleType;
                    return this;
                }

                public DataCiteMetadataV3 .Titles.Titles.Builder<TParentBuilder> withLang(final String lang) {
                    this.lang = lang;
                    return this;
                }

                public DataCiteMetadataV3 .Titles.Titles build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadataV3 .Titles.Titles());
                    } else {
                        return ((DataCiteMetadataV3 .Titles.Titles) this._product);
                    }
                }

            }

        }

    }

}
