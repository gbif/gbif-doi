//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.05.09 at 11:30:18 AM CEST 
//


package org.gbif.doi.metadata.datacite;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlMixed;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.google.common.base.Objects;
import com.kscs.util.jaxb.BuilderUtilities;
import com.kscs.util.jaxb.PropertyTree;
import com.kscs.util.jaxb.PropertyTreeUse;


/**
 * No content in this wrapper element.
 * 
 * <p>Java class for resource element declaration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;element name="resource">
 *   &lt;complexType>
 *     &lt;complexContent>
 *       &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *         &lt;all>
 *           &lt;element name="identifier">
 *             &lt;complexType>
 *               &lt;simpleContent>
 *                 &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
 *                   &lt;attribute name="identifierType" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                 &lt;/extension>
 *               &lt;/simpleContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="creators">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="creator" maxOccurs="unbounded">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;sequence>
 *                               &lt;element name="creatorName">
 *                                 &lt;complexType>
 *                                   &lt;simpleContent>
 *                                     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                                       &lt;attribute name="nameType" type="{http://datacite.org/schema/kernel-4}nameType" />
 *                                       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
 *                                     &lt;/extension>
 *                                   &lt;/simpleContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                               &lt;element name="givenName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
 *                               &lt;element name="familyName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
 *                               &lt;element name="nameIdentifier" maxOccurs="unbounded" minOccurs="0">
 *                                 &lt;complexType>
 *                                   &lt;simpleContent>
 *                                     &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
 *                                       &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                                       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                                     &lt;/extension>
 *                                   &lt;/simpleContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                               &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
 *                             &lt;/sequence>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="titles">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="title" maxOccurs="unbounded">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                             &lt;attribute name="titleType" type="{http://datacite.org/schema/kernel-4}titleType" />
 *                             &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="publisher">
 *             &lt;complexType>
 *               &lt;simpleContent>
 *                 &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
 *                   &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
 *                 &lt;/extension>
 *               &lt;/simpleContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="publicationYear">
 *             &lt;simpleType>
 *               &lt;restriction base="{http://datacite.org/schema/kernel-4}yearType">
 *               &lt;/restriction>
 *             &lt;/simpleType>
 *           &lt;/element>
 *           &lt;element name="resourceType">
 *             &lt;complexType>
 *               &lt;simpleContent>
 *                 &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                   &lt;attribute name="resourceTypeGeneral" use="required" type="{http://datacite.org/schema/kernel-4}resourceType" />
 *                 &lt;/extension>
 *               &lt;/simpleContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="subjects" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="subject" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                             &lt;attribute name="subjectScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                             &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                             &lt;attribute name="valueURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                             &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="contributors" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="contributor" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;sequence>
 *                               &lt;element name="contributorName">
 *                                 &lt;complexType>
 *                                   &lt;simpleContent>
 *                                     &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
 *                                       &lt;attribute name="nameType" type="{http://datacite.org/schema/kernel-4}nameType" />
 *                                       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
 *                                     &lt;/extension>
 *                                   &lt;/simpleContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                               &lt;element name="givenName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
 *                               &lt;element name="familyName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
 *                               &lt;element name="nameIdentifier" maxOccurs="unbounded" minOccurs="0">
 *                                 &lt;complexType>
 *                                   &lt;simpleContent>
 *                                     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                                       &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                                       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                                     &lt;/extension>
 *                                   &lt;/simpleContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                               &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
 *                             &lt;/sequence>
 *                             &lt;attribute name="contributorType" use="required" type="{http://datacite.org/schema/kernel-4}contributorType" />
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="dates" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="date" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                             &lt;attribute name="dateType" use="required" type="{http://datacite.org/schema/kernel-4}dateType" />
 *                             &lt;attribute name="dateInformation" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="language" type="{http://www.w3.org/2001/XMLSchema}language" minOccurs="0"/>
 *           &lt;element name="alternateIdentifiers" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="alternateIdentifier" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                             &lt;attribute name="alternateIdentifierType" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="relatedIdentifiers" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="relatedIdentifier" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                             &lt;attribute name="resourceTypeGeneral" type="{http://datacite.org/schema/kernel-4}resourceType" />
 *                             &lt;attribute name="relatedIdentifierType" use="required" type="{http://datacite.org/schema/kernel-4}relatedIdentifierType" />
 *                             &lt;attribute name="relationType" use="required" type="{http://datacite.org/schema/kernel-4}relationType" />
 *                             &lt;attribute name="relatedMetadataScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                             &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                             &lt;attribute name="schemeType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="sizes" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="size" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="formats" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="format" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="version" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *           &lt;element name="rightsList" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="rights" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;simpleContent>
 *                           &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                             &lt;attribute name="rightsURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                             &lt;attribute name="rightsIdentifier" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                             &lt;attribute name="rightsIdentifierScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
 *                             &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                             &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
 *                           &lt;/extension>
 *                         &lt;/simpleContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="descriptions" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="description" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;choice>
 *                               &lt;element name="br" maxOccurs="unbounded" minOccurs="0">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                             &lt;/choice>
 *                             &lt;attribute name="descriptionType" use="required" type="{http://datacite.org/schema/kernel-4}descriptionType" />
 *                             &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="geoLocations" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="geoLocation" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;choice maxOccurs="unbounded">
 *                               &lt;element name="geoLocationPlace" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
 *                               &lt;element name="geoLocationPoint" type="{http://datacite.org/schema/kernel-4}point" minOccurs="0"/>
 *                               &lt;element name="geoLocationBox" type="{http://datacite.org/schema/kernel-4}box" minOccurs="0"/>
 *                               &lt;element name="geoLocationPolygon" maxOccurs="unbounded" minOccurs="0">
 *                                 &lt;complexType>
 *                                   &lt;complexContent>
 *                                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                                       &lt;sequence>
 *                                         &lt;element name="polygonPoint" type="{http://datacite.org/schema/kernel-4}point" maxOccurs="unbounded" minOccurs="4"/>
 *                                         &lt;element name="inPolygonPoint" type="{http://datacite.org/schema/kernel-4}point" minOccurs="0"/>
 *                                       &lt;/sequence>
 *                                     &lt;/restriction>
 *                                   &lt;/complexContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                             &lt;/choice>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *           &lt;element name="fundingReferences" minOccurs="0">
 *             &lt;complexType>
 *               &lt;complexContent>
 *                 &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                   &lt;sequence>
 *                     &lt;element name="fundingReference" maxOccurs="unbounded" minOccurs="0">
 *                       &lt;complexType>
 *                         &lt;complexContent>
 *                           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                             &lt;all>
 *                               &lt;element name="funderName">
 *                                 &lt;simpleType>
 *                                   &lt;restriction base="{http://datacite.org/schema/kernel-4}nonemptycontentStringType">
 *                                   &lt;/restriction>
 *                                 &lt;/simpleType>
 *                               &lt;/element>
 *                               &lt;element name="funderIdentifier" minOccurs="0">
 *                                 &lt;complexType>
 *                                   &lt;simpleContent>
 *                                     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                                       &lt;attribute name="funderIdentifierType" use="required" type="{http://datacite.org/schema/kernel-4}funderIdentifierType" />
 *                                     &lt;/extension>
 *                                   &lt;/simpleContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                               &lt;element name="awardNumber" minOccurs="0">
 *                                 &lt;complexType>
 *                                   &lt;simpleContent>
 *                                     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                                       &lt;attribute name="awardURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *                                     &lt;/extension>
 *                                   &lt;/simpleContent>
 *                                 &lt;/complexType>
 *                               &lt;/element>
 *                               &lt;element name="awardTitle" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
 *                             &lt;/all>
 *                           &lt;/restriction>
 *                         &lt;/complexContent>
 *                       &lt;/complexType>
 *                     &lt;/element>
 *                   &lt;/sequence>
 *                 &lt;/restriction>
 *               &lt;/complexContent>
 *             &lt;/complexType>
 *           &lt;/element>
 *         &lt;/all>
 *       &lt;/restriction>
 *     &lt;/complexContent>
 *   &lt;/complexType>
 * &lt;/element>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {

})
@XmlRootElement(name = "resource")
public class DataCiteMetadata {

    @XmlElement(required = true)
    protected DataCiteMetadata.Identifier identifier;
    @XmlElement(required = true)
    protected DataCiteMetadata.Creators creators;
    @XmlElement(required = true)
    protected DataCiteMetadata.Titles titles;
    @XmlElement(required = true)
    protected DataCiteMetadata.Publisher publisher;
    @XmlElement(required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String publicationYear;
    @XmlElement(required = true)
    protected DataCiteMetadata.ResourceType resourceType;
    protected DataCiteMetadata.Subjects subjects;
    protected DataCiteMetadata.Contributors contributors;
    protected DataCiteMetadata.Dates dates;
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "language")
    protected String language;
    protected DataCiteMetadata.AlternateIdentifiers alternateIdentifiers;
    protected DataCiteMetadata.RelatedIdentifiers relatedIdentifiers;
    protected DataCiteMetadata.Sizes sizes;
    protected DataCiteMetadata.Formats formats;
    protected String version;
    protected DataCiteMetadata.RightsList rightsList;
    protected DataCiteMetadata.Descriptions descriptions;
    protected DataCiteMetadata.GeoLocations geoLocations;
    protected DataCiteMetadata.FundingReferences fundingReferences;

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.Identifier }
     *     
     */
    public DataCiteMetadata.Identifier getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.Identifier }
     *     
     */
    public void setIdentifier(DataCiteMetadata.Identifier value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the creators property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.Creators }
     *     
     */
    public DataCiteMetadata.Creators getCreators() {
        return creators;
    }

    /**
     * Sets the value of the creators property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.Creators }
     *     
     */
    public void setCreators(DataCiteMetadata.Creators value) {
        this.creators = value;
    }

    /**
     * Gets the value of the titles property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.Titles }
     *     
     */
    public DataCiteMetadata.Titles getTitles() {
        return titles;
    }

    /**
     * Sets the value of the titles property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.Titles }
     *     
     */
    public void setTitles(DataCiteMetadata.Titles value) {
        this.titles = value;
    }

    /**
     * Gets the value of the publisher property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.Publisher }
     *     
     */
    public DataCiteMetadata.Publisher getPublisher() {
        return publisher;
    }

    /**
     * Sets the value of the publisher property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.Publisher }
     *     
     */
    public void setPublisher(DataCiteMetadata.Publisher value) {
        this.publisher = value;
    }

    /**
     * Gets the value of the publicationYear property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPublicationYear() {
        return publicationYear;
    }

    /**
     * Sets the value of the publicationYear property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPublicationYear(String value) {
        this.publicationYear = value;
    }

    /**
     * Gets the value of the resourceType property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.ResourceType }
     *     
     */
    public DataCiteMetadata.ResourceType getResourceType() {
        return resourceType;
    }

    /**
     * Sets the value of the resourceType property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.ResourceType }
     *     
     */
    public void setResourceType(DataCiteMetadata.ResourceType value) {
        this.resourceType = value;
    }

    /**
     * Gets the value of the subjects property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.Subjects }
     *     
     */
    public DataCiteMetadata.Subjects getSubjects() {
        return subjects;
    }

    /**
     * Sets the value of the subjects property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.Subjects }
     *     
     */
    public void setSubjects(DataCiteMetadata.Subjects value) {
        this.subjects = value;
    }

    /**
     * Gets the value of the contributors property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.Contributors }
     *     
     */
    public DataCiteMetadata.Contributors getContributors() {
        return contributors;
    }

    /**
     * Sets the value of the contributors property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.Contributors }
     *     
     */
    public void setContributors(DataCiteMetadata.Contributors value) {
        this.contributors = value;
    }

    /**
     * Gets the value of the dates property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.Dates }
     *     
     */
    public DataCiteMetadata.Dates getDates() {
        return dates;
    }

    /**
     * Sets the value of the dates property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.Dates }
     *     
     */
    public void setDates(DataCiteMetadata.Dates value) {
        this.dates = value;
    }

    /**
     * Gets the value of the language property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLanguage() {
        return language;
    }

    /**
     * Sets the value of the language property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLanguage(String value) {
        this.language = value;
    }

    /**
     * Gets the value of the alternateIdentifiers property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.AlternateIdentifiers }
     *     
     */
    public DataCiteMetadata.AlternateIdentifiers getAlternateIdentifiers() {
        return alternateIdentifiers;
    }

    /**
     * Sets the value of the alternateIdentifiers property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.AlternateIdentifiers }
     *     
     */
    public void setAlternateIdentifiers(DataCiteMetadata.AlternateIdentifiers value) {
        this.alternateIdentifiers = value;
    }

    /**
     * Gets the value of the relatedIdentifiers property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.RelatedIdentifiers }
     *     
     */
    public DataCiteMetadata.RelatedIdentifiers getRelatedIdentifiers() {
        return relatedIdentifiers;
    }

    /**
     * Sets the value of the relatedIdentifiers property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.RelatedIdentifiers }
     *     
     */
    public void setRelatedIdentifiers(DataCiteMetadata.RelatedIdentifiers value) {
        this.relatedIdentifiers = value;
    }

    /**
     * Gets the value of the sizes property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.Sizes }
     *     
     */
    public DataCiteMetadata.Sizes getSizes() {
        return sizes;
    }

    /**
     * Sets the value of the sizes property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.Sizes }
     *     
     */
    public void setSizes(DataCiteMetadata.Sizes value) {
        this.sizes = value;
    }

    /**
     * Gets the value of the formats property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.Formats }
     *     
     */
    public DataCiteMetadata.Formats getFormats() {
        return formats;
    }

    /**
     * Sets the value of the formats property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.Formats }
     *     
     */
    public void setFormats(DataCiteMetadata.Formats value) {
        this.formats = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setVersion(String value) {
        this.version = value;
    }

    /**
     * Gets the value of the rightsList property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.RightsList }
     *     
     */
    public DataCiteMetadata.RightsList getRightsList() {
        return rightsList;
    }

    /**
     * Sets the value of the rightsList property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.RightsList }
     *     
     */
    public void setRightsList(DataCiteMetadata.RightsList value) {
        this.rightsList = value;
    }

    /**
     * Gets the value of the descriptions property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.Descriptions }
     *     
     */
    public DataCiteMetadata.Descriptions getDescriptions() {
        return descriptions;
    }

    /**
     * Sets the value of the descriptions property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.Descriptions }
     *     
     */
    public void setDescriptions(DataCiteMetadata.Descriptions value) {
        this.descriptions = value;
    }

    /**
     * Gets the value of the geoLocations property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.GeoLocations }
     *     
     */
    public DataCiteMetadata.GeoLocations getGeoLocations() {
        return geoLocations;
    }

    /**
     * Sets the value of the geoLocations property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.GeoLocations }
     *     
     */
    public void setGeoLocations(DataCiteMetadata.GeoLocations value) {
        this.geoLocations = value;
    }

    /**
     * Gets the value of the fundingReferences property.
     * 
     * @return
     *     possible object is
     *     {@link DataCiteMetadata.FundingReferences }
     *     
     */
    public DataCiteMetadata.FundingReferences getFundingReferences() {
        return fundingReferences;
    }

    /**
     * Sets the value of the fundingReferences property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataCiteMetadata.FundingReferences }
     *     
     */
    public void setFundingReferences(DataCiteMetadata.FundingReferences value) {
        this.fundingReferences = value;
    }

    public static DataCiteMetadata.Builder<Void> builder() {
        return new DataCiteMetadata.Builder<Void>(null, null, false);
    }

    public static DataCiteMetadata.Builder<Void> copyOf(final DataCiteMetadata _other) {
        return new DataCiteMetadata.Builder<Void>(null, _other, true);
    }

    public static DataCiteMetadata.Builder<Void> copyOf(final DataCiteMetadata _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
        return new DataCiteMetadata.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
    }

    public static DataCiteMetadata.Builder<Void> copyExcept(final DataCiteMetadata _other, final PropertyTree _propertyTree) {
        return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
    }

    public static DataCiteMetadata.Builder<Void> copyOnly(final DataCiteMetadata _other, final PropertyTree _propertyTree) {
        return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
    }

    @Override
    public String toString() {
        return Objects.toStringHelper(this).add("identifier", identifier).add("creators", creators).add("titles", titles).add("publisher", publisher).add("publicationYear", publicationYear).add("resourceType", resourceType).add("subjects", subjects).add("contributors", contributors).add("dates", dates).add("language", language).add("alternateIdentifiers", alternateIdentifiers).add("relatedIdentifiers", relatedIdentifiers).add("sizes", sizes).add("formats", formats).add("version", version).add("rightsList", rightsList).add("descriptions", descriptions).add("geoLocations", geoLocations).add("fundingReferences", fundingReferences).toString();
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(identifier, creators, titles, publisher, publicationYear, resourceType, subjects, contributors, dates, language, alternateIdentifiers, relatedIdentifiers, sizes, formats, version, rightsList, descriptions, geoLocations, fundingReferences);
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) {
            return true;
        }
        if (other == null) {
            return false;
        }
        if (getClass()!= other.getClass()) {
            return false;
        }
        final DataCiteMetadata o = ((DataCiteMetadata) other);
        return ((((((((((((((((((Objects.equal(identifier, o.identifier)&&Objects.equal(creators, o.creators))&&Objects.equal(titles, o.titles))&&Objects.equal(publisher, o.publisher))&&Objects.equal(publicationYear, o.publicationYear))&&Objects.equal(resourceType, o.resourceType))&&Objects.equal(subjects, o.subjects))&&Objects.equal(contributors, o.contributors))&&Objects.equal(dates, o.dates))&&Objects.equal(language, o.language))&&Objects.equal(alternateIdentifiers, o.alternateIdentifiers))&&Objects.equal(relatedIdentifiers, o.relatedIdentifiers))&&Objects.equal(sizes, o.sizes))&&Objects.equal(formats, o.formats))&&Objects.equal(version, o.version))&&Objects.equal(rightsList, o.rightsList))&&Objects.equal(descriptions, o.descriptions))&&Objects.equal(geoLocations, o.geoLocations))&&Objects.equal(fundingReferences, o.fundingReferences));
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="alternateIdentifier" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="alternateIdentifierType" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "alternateIdentifier"
    })
    public static class AlternateIdentifiers {

        protected List<DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier> alternateIdentifier;

        /**
         * Gets the value of the alternateIdentifier property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the alternateIdentifier property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getAlternateIdentifier().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier }
         * 
         * 
         */
        public List<DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier> getAlternateIdentifier() {
            if (alternateIdentifier == null) {
                alternateIdentifier = new ArrayList<DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier>();
            }
            return this.alternateIdentifier;
        }

        public static DataCiteMetadata.AlternateIdentifiers.Builder<Void> builder() {
            return new DataCiteMetadata.AlternateIdentifiers.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.AlternateIdentifiers.Builder<Void> copyOf(final DataCiteMetadata.AlternateIdentifiers _other) {
            return new DataCiteMetadata.AlternateIdentifiers.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.AlternateIdentifiers.Builder<Void> copyOf(final DataCiteMetadata.AlternateIdentifiers _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.AlternateIdentifiers.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.AlternateIdentifiers.Builder<Void> copyExcept(final DataCiteMetadata.AlternateIdentifiers _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.AlternateIdentifiers.Builder<Void> copyOnly(final DataCiteMetadata.AlternateIdentifiers _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("alternateIdentifier", alternateIdentifier).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(alternateIdentifier);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.AlternateIdentifiers o = ((DataCiteMetadata.AlternateIdentifiers) other);
            return Objects.equal(alternateIdentifier, o.alternateIdentifier);
        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="alternateIdentifierType" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class AlternateIdentifier {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "alternateIdentifierType", required = true)
            @XmlSchemaType(name = "anySimpleType")
            protected String alternateIdentifierType;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the alternateIdentifierType property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getAlternateIdentifierType() {
                return alternateIdentifierType;
            }

            /**
             * Sets the value of the alternateIdentifierType property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setAlternateIdentifierType(String value) {
                this.alternateIdentifierType = value;
            }

            public static DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<Void> builder() {
                return new DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<Void> copyOf(final DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier _other) {
                return new DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<Void>(null, _other, true);
            }

            public static DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<Void> copyOf(final DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                return new DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
            }

            public static DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<Void> copyExcept(final DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<Void> copyOnly(final DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("alternateIdentifierType", alternateIdentifierType).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, alternateIdentifierType);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier o = ((DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier) other);
                return (Objects.equal(value, o.value)&&Objects.equal(alternateIdentifierType, o.alternateIdentifierType));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier _product;
                private String value;
                private String alternateIdentifierType;

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier _other, final boolean _copy) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        this.value = _other.value;
                        this.alternateIdentifierType = _other.alternateIdentifierType;
                    } else {
                        this._product = _other;
                    }
                }

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = _other.value;
                        }
                        final PropertyTree alternateIdentifierTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("alternateIdentifierType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(alternateIdentifierTypePropertyTree!= null):((alternateIdentifierTypePropertyTree == null)||(!alternateIdentifierTypePropertyTree.isLeaf())))) {
                            this.alternateIdentifierType = _other.alternateIdentifierType;
                        }
                    } else {
                        this._product = _other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier >P init(final P product) {
                    product.value = this.value;
                    product.alternateIdentifierType = this.alternateIdentifierType;
                    return product;
                }

                /**
                 * Sets the new value of "value" (any previous value will be replaced)
                 * 
                 * @param value
                 *     New value of the "value" property.
                 */
                public DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                /**
                 * Sets the new value of "alternateIdentifierType" (any previous value will be replaced)
                 * 
                 * @param alternateIdentifierType
                 *     New value of the "alternateIdentifierType" property.
                 */
                public DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<TParentBuilder> withAlternateIdentifierType(final String alternateIdentifierType) {
                    this.alternateIdentifierType = alternateIdentifierType;
                    return this;
                }

                public DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier());
                    } else {
                        return ((DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier) this._product);
                    }
                }

            }

            public static class Select
                extends DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Selector<DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Select, Void>
            {


                Select() {
                    super(null, null, null);
                }

                public static DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Select _root() {
                    return new DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Select();
                }

            }

            public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                extends com.kscs.util.jaxb.Selector<TRoot, TParent>
            {

                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Selector<TRoot, TParent>> value = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Selector<TRoot, TParent>> alternateIdentifierType = null;

                public Selector(final TRoot root, final TParent parent, final String propertyName) {
                    super(root, parent, propertyName);
                }

                @Override
                public Map<String, PropertyTree> buildChildren() {
                    final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                    products.putAll(super.buildChildren());
                    if (this.value!= null) {
                        products.put("value", this.value.init());
                    }
                    if (this.alternateIdentifierType!= null) {
                        products.put("alternateIdentifierType", this.alternateIdentifierType.init());
                    }
                    return products;
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Selector<TRoot, TParent>> value() {
                    return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Selector<TRoot, TParent>> alternateIdentifierType() {
                    return ((this.alternateIdentifierType == null)?this.alternateIdentifierType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Selector<TRoot, TParent>>(this._root, this, "alternateIdentifierType"):this.alternateIdentifierType);
                }

            }

        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.AlternateIdentifiers _product;
            private List<DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder>>> alternateIdentifier;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.AlternateIdentifiers _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    if (_other.alternateIdentifier == null) {
                        this.alternateIdentifier = null;
                    } else {
                        this.alternateIdentifier = new ArrayList<DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder>>>();
                        for (DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier _item: _other.alternateIdentifier) {
                            this.alternateIdentifier.add(((_other.alternateIdentifier == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder.class, _item, this, _item, true)));
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.AlternateIdentifiers _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree alternateIdentifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("alternateIdentifier"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(alternateIdentifierPropertyTree!= null):((alternateIdentifierPropertyTree == null)||(!alternateIdentifierPropertyTree.isLeaf())))) {
                        if (_other.alternateIdentifier == null) {
                            this.alternateIdentifier = null;
                        } else {
                            this.alternateIdentifier = new ArrayList<DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier _item: _other.alternateIdentifier) {
                                this.alternateIdentifier.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder.class, _item, this, _item, true, alternateIdentifierPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.AlternateIdentifiers >P init(final P product) {
                if (this.alternateIdentifier!= null) {
                    final List<DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier> alternateIdentifier = new ArrayList<DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier>(this.alternateIdentifier.size());
                    for (DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder>> _item: this.alternateIdentifier) {
                        alternateIdentifier.add(_item.build());
                    }
                    product.alternateIdentifier = alternateIdentifier;
                }
                return product;
            }

            /**
             * Adds the given items to the value of "alternateIdentifier"
             * 
             * @param alternateIdentifier
             *     Items to add to the value of the "alternateIdentifier" property
             */
            public DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder> addAlternateIdentifier(final Collection<? extends DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier> alternateIdentifier) {
                if (this.alternateIdentifier == null) {
                    this.alternateIdentifier = new ArrayList<DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier _item: alternateIdentifier) {
                    this.alternateIdentifier.add(new DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder>>(this, _item, false));
                }
                return this;
            }

            /**
             * Sets the new value of "alternateIdentifier" (any previous value will be replaced)
             * 
             * @param alternateIdentifier
             *     New value of the "alternateIdentifier" property.
             */
            public DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder> withAlternateIdentifier(final Collection<? extends DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier> alternateIdentifier) {
                if (this.alternateIdentifier!= null) {
                    this.alternateIdentifier.clear();
                }
                return addAlternateIdentifier(alternateIdentifier);
            }

            /**
             * Adds the given items to the value of "alternateIdentifier"
             * 
             * @param alternateIdentifier
             *     Items to add to the value of the "alternateIdentifier" property
             */
            public DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder> addAlternateIdentifier(DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier... alternateIdentifier) {
                addAlternateIdentifier(Arrays.asList(alternateIdentifier));
                return this;
            }

            /**
             * Sets the new value of "alternateIdentifier" (any previous value will be replaced)
             * 
             * @param alternateIdentifier
             *     New value of the "alternateIdentifier" property.
             */
            public DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder> withAlternateIdentifier(DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier... alternateIdentifier) {
                withAlternateIdentifier(Arrays.asList(alternateIdentifier));
                return this;
            }

            /**
             * Returns a new builder to build an additional value of the "alternateIdentifier" property.
             * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder#end()} to return to the current builder.
             * 
             * @return
             *     a new builder to build an additional value of the "alternateIdentifier" property.
             *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder#end()} to return to the current builder.
             */
            public DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<? extends DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder>> addAlternateIdentifier() {
                if (this.alternateIdentifier == null) {
                    this.alternateIdentifier = new ArrayList<DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder>> alternateIdentifierBuilder = new DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Builder<DataCiteMetadata.AlternateIdentifiers.Builder<TParentBuilder>>(this, null, false);
                this.alternateIdentifier.add(alternateIdentifierBuilder);
                return alternateIdentifierBuilder;
            }

            public DataCiteMetadata.AlternateIdentifiers build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.AlternateIdentifiers());
                } else {
                    return ((DataCiteMetadata.AlternateIdentifiers) this._product);
                }
            }

        }

        public static class Select
            extends DataCiteMetadata.AlternateIdentifiers.Selector<DataCiteMetadata.AlternateIdentifiers.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.AlternateIdentifiers.Select _root() {
                return new DataCiteMetadata.AlternateIdentifiers.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Selector<TRoot, DataCiteMetadata.AlternateIdentifiers.Selector<TRoot, TParent>> alternateIdentifier = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.alternateIdentifier!= null) {
                    products.put("alternateIdentifier", this.alternateIdentifier.init());
                }
                return products;
            }

            public DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Selector<TRoot, DataCiteMetadata.AlternateIdentifiers.Selector<TRoot, TParent>> alternateIdentifier() {
                return ((this.alternateIdentifier == null)?this.alternateIdentifier = new DataCiteMetadata.AlternateIdentifiers.AlternateIdentifier.Selector<TRoot, DataCiteMetadata.AlternateIdentifiers.Selector<TRoot, TParent>>(this._root, this, "alternateIdentifier"):this.alternateIdentifier);
            }

        }

    }

    public static class Builder<TParentBuilder >{

        protected final TParentBuilder _parentBuilder;
        protected final DataCiteMetadata _product;
        private DataCiteMetadata.Identifier.Builder<DataCiteMetadata.Builder<TParentBuilder>> identifier;
        private DataCiteMetadata.Creators.Builder<DataCiteMetadata.Builder<TParentBuilder>> creators;
        private DataCiteMetadata.Titles.Builder<DataCiteMetadata.Builder<TParentBuilder>> titles;
        private DataCiteMetadata.Publisher.Builder<DataCiteMetadata.Builder<TParentBuilder>> publisher;
        private String publicationYear;
        private DataCiteMetadata.ResourceType.Builder<DataCiteMetadata.Builder<TParentBuilder>> resourceType;
        private DataCiteMetadata.Subjects.Builder<DataCiteMetadata.Builder<TParentBuilder>> subjects;
        private DataCiteMetadata.Contributors.Builder<DataCiteMetadata.Builder<TParentBuilder>> contributors;
        private DataCiteMetadata.Dates.Builder<DataCiteMetadata.Builder<TParentBuilder>> dates;
        private String language;
        private DataCiteMetadata.AlternateIdentifiers.Builder<DataCiteMetadata.Builder<TParentBuilder>> alternateIdentifiers;
        private DataCiteMetadata.RelatedIdentifiers.Builder<DataCiteMetadata.Builder<TParentBuilder>> relatedIdentifiers;
        private DataCiteMetadata.Sizes.Builder<DataCiteMetadata.Builder<TParentBuilder>> sizes;
        private DataCiteMetadata.Formats.Builder<DataCiteMetadata.Builder<TParentBuilder>> formats;
        private String version;
        private DataCiteMetadata.RightsList.Builder<DataCiteMetadata.Builder<TParentBuilder>> rightsList;
        private DataCiteMetadata.Descriptions.Builder<DataCiteMetadata.Builder<TParentBuilder>> descriptions;
        private DataCiteMetadata.GeoLocations.Builder<DataCiteMetadata.Builder<TParentBuilder>> geoLocations;
        private DataCiteMetadata.FundingReferences.Builder<DataCiteMetadata.Builder<TParentBuilder>> fundingReferences;

        public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata _other, final boolean _copy) {
            this._parentBuilder = _parentBuilder;
            if (_copy) {
                this._product = null;
                this.identifier = ((_other.identifier == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Identifier.Builder.class, _other.identifier, this, _other.identifier, true));
                this.creators = ((_other.creators == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Creators.Builder.class, _other.creators, this, _other.creators, true));
                this.titles = ((_other.titles == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Titles.Builder.class, _other.titles, this, _other.titles, true));
                this.publisher = ((_other.publisher == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Publisher.Builder.class, _other.publisher, this, _other.publisher, true));
                this.publicationYear = _other.publicationYear;
                this.resourceType = ((_other.resourceType == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.ResourceType.Builder.class, _other.resourceType, this, _other.resourceType, true));
                this.subjects = ((_other.subjects == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Subjects.Builder.class, _other.subjects, this, _other.subjects, true));
                this.contributors = ((_other.contributors == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Contributors.Builder.class, _other.contributors, this, _other.contributors, true));
                this.dates = ((_other.dates == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Dates.Builder.class, _other.dates, this, _other.dates, true));
                this.language = _other.language;
                this.alternateIdentifiers = ((_other.alternateIdentifiers == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.AlternateIdentifiers.Builder.class, _other.alternateIdentifiers, this, _other.alternateIdentifiers, true));
                this.relatedIdentifiers = ((_other.relatedIdentifiers == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.RelatedIdentifiers.Builder.class, _other.relatedIdentifiers, this, _other.relatedIdentifiers, true));
                this.sizes = ((_other.sizes == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Sizes.Builder.class, _other.sizes, this, _other.sizes, true));
                this.formats = ((_other.formats == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Formats.Builder.class, _other.formats, this, _other.formats, true));
                this.version = _other.version;
                this.rightsList = ((_other.rightsList == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.RightsList.Builder.class, _other.rightsList, this, _other.rightsList, true));
                this.descriptions = ((_other.descriptions == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Descriptions.Builder.class, _other.descriptions, this, _other.descriptions, true));
                this.geoLocations = ((_other.geoLocations == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.GeoLocations.Builder.class, _other.geoLocations, this, _other.geoLocations, true));
                this.fundingReferences = ((_other.fundingReferences == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.FundingReferences.Builder.class, _other.fundingReferences, this, _other.fundingReferences, true));
            } else {
                this._product = _other;
            }
        }

        public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
            this._parentBuilder = _parentBuilder;
            if (_copy) {
                this._product = null;
                final PropertyTree identifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("identifier"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(identifierPropertyTree!= null):((identifierPropertyTree == null)||(!identifierPropertyTree.isLeaf())))) {
                    this.identifier = ((_other.identifier == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Identifier.Builder.class, _other.identifier, this, _other.identifier, true, identifierPropertyTree, treeUse));
                }
                final PropertyTree creatorsPropertyTree = ((propertyTree == null)?null:propertyTree.get("creators"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(creatorsPropertyTree!= null):((creatorsPropertyTree == null)||(!creatorsPropertyTree.isLeaf())))) {
                    this.creators = ((_other.creators == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Creators.Builder.class, _other.creators, this, _other.creators, true, creatorsPropertyTree, treeUse));
                }
                final PropertyTree titlesPropertyTree = ((propertyTree == null)?null:propertyTree.get("titles"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(titlesPropertyTree!= null):((titlesPropertyTree == null)||(!titlesPropertyTree.isLeaf())))) {
                    this.titles = ((_other.titles == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Titles.Builder.class, _other.titles, this, _other.titles, true, titlesPropertyTree, treeUse));
                }
                final PropertyTree publisherPropertyTree = ((propertyTree == null)?null:propertyTree.get("publisher"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(publisherPropertyTree!= null):((publisherPropertyTree == null)||(!publisherPropertyTree.isLeaf())))) {
                    this.publisher = ((_other.publisher == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Publisher.Builder.class, _other.publisher, this, _other.publisher, true, publisherPropertyTree, treeUse));
                }
                final PropertyTree publicationYearPropertyTree = ((propertyTree == null)?null:propertyTree.get("publicationYear"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(publicationYearPropertyTree!= null):((publicationYearPropertyTree == null)||(!publicationYearPropertyTree.isLeaf())))) {
                    this.publicationYear = _other.publicationYear;
                }
                final PropertyTree resourceTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("resourceType"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(resourceTypePropertyTree!= null):((resourceTypePropertyTree == null)||(!resourceTypePropertyTree.isLeaf())))) {
                    this.resourceType = ((_other.resourceType == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.ResourceType.Builder.class, _other.resourceType, this, _other.resourceType, true, resourceTypePropertyTree, treeUse));
                }
                final PropertyTree subjectsPropertyTree = ((propertyTree == null)?null:propertyTree.get("subjects"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(subjectsPropertyTree!= null):((subjectsPropertyTree == null)||(!subjectsPropertyTree.isLeaf())))) {
                    this.subjects = ((_other.subjects == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Subjects.Builder.class, _other.subjects, this, _other.subjects, true, subjectsPropertyTree, treeUse));
                }
                final PropertyTree contributorsPropertyTree = ((propertyTree == null)?null:propertyTree.get("contributors"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(contributorsPropertyTree!= null):((contributorsPropertyTree == null)||(!contributorsPropertyTree.isLeaf())))) {
                    this.contributors = ((_other.contributors == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Contributors.Builder.class, _other.contributors, this, _other.contributors, true, contributorsPropertyTree, treeUse));
                }
                final PropertyTree datesPropertyTree = ((propertyTree == null)?null:propertyTree.get("dates"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(datesPropertyTree!= null):((datesPropertyTree == null)||(!datesPropertyTree.isLeaf())))) {
                    this.dates = ((_other.dates == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Dates.Builder.class, _other.dates, this, _other.dates, true, datesPropertyTree, treeUse));
                }
                final PropertyTree languagePropertyTree = ((propertyTree == null)?null:propertyTree.get("language"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(languagePropertyTree!= null):((languagePropertyTree == null)||(!languagePropertyTree.isLeaf())))) {
                    this.language = _other.language;
                }
                final PropertyTree alternateIdentifiersPropertyTree = ((propertyTree == null)?null:propertyTree.get("alternateIdentifiers"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(alternateIdentifiersPropertyTree!= null):((alternateIdentifiersPropertyTree == null)||(!alternateIdentifiersPropertyTree.isLeaf())))) {
                    this.alternateIdentifiers = ((_other.alternateIdentifiers == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.AlternateIdentifiers.Builder.class, _other.alternateIdentifiers, this, _other.alternateIdentifiers, true, alternateIdentifiersPropertyTree, treeUse));
                }
                final PropertyTree relatedIdentifiersPropertyTree = ((propertyTree == null)?null:propertyTree.get("relatedIdentifiers"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(relatedIdentifiersPropertyTree!= null):((relatedIdentifiersPropertyTree == null)||(!relatedIdentifiersPropertyTree.isLeaf())))) {
                    this.relatedIdentifiers = ((_other.relatedIdentifiers == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.RelatedIdentifiers.Builder.class, _other.relatedIdentifiers, this, _other.relatedIdentifiers, true, relatedIdentifiersPropertyTree, treeUse));
                }
                final PropertyTree sizesPropertyTree = ((propertyTree == null)?null:propertyTree.get("sizes"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(sizesPropertyTree!= null):((sizesPropertyTree == null)||(!sizesPropertyTree.isLeaf())))) {
                    this.sizes = ((_other.sizes == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Sizes.Builder.class, _other.sizes, this, _other.sizes, true, sizesPropertyTree, treeUse));
                }
                final PropertyTree formatsPropertyTree = ((propertyTree == null)?null:propertyTree.get("formats"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(formatsPropertyTree!= null):((formatsPropertyTree == null)||(!formatsPropertyTree.isLeaf())))) {
                    this.formats = ((_other.formats == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Formats.Builder.class, _other.formats, this, _other.formats, true, formatsPropertyTree, treeUse));
                }
                final PropertyTree versionPropertyTree = ((propertyTree == null)?null:propertyTree.get("version"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(versionPropertyTree!= null):((versionPropertyTree == null)||(!versionPropertyTree.isLeaf())))) {
                    this.version = _other.version;
                }
                final PropertyTree rightsListPropertyTree = ((propertyTree == null)?null:propertyTree.get("rightsList"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(rightsListPropertyTree!= null):((rightsListPropertyTree == null)||(!rightsListPropertyTree.isLeaf())))) {
                    this.rightsList = ((_other.rightsList == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.RightsList.Builder.class, _other.rightsList, this, _other.rightsList, true, rightsListPropertyTree, treeUse));
                }
                final PropertyTree descriptionsPropertyTree = ((propertyTree == null)?null:propertyTree.get("descriptions"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(descriptionsPropertyTree!= null):((descriptionsPropertyTree == null)||(!descriptionsPropertyTree.isLeaf())))) {
                    this.descriptions = ((_other.descriptions == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Descriptions.Builder.class, _other.descriptions, this, _other.descriptions, true, descriptionsPropertyTree, treeUse));
                }
                final PropertyTree geoLocationsPropertyTree = ((propertyTree == null)?null:propertyTree.get("geoLocations"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(geoLocationsPropertyTree!= null):((geoLocationsPropertyTree == null)||(!geoLocationsPropertyTree.isLeaf())))) {
                    this.geoLocations = ((_other.geoLocations == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.GeoLocations.Builder.class, _other.geoLocations, this, _other.geoLocations, true, geoLocationsPropertyTree, treeUse));
                }
                final PropertyTree fundingReferencesPropertyTree = ((propertyTree == null)?null:propertyTree.get("fundingReferences"));
                if (((treeUse == PropertyTreeUse.INCLUDE)?(fundingReferencesPropertyTree!= null):((fundingReferencesPropertyTree == null)||(!fundingReferencesPropertyTree.isLeaf())))) {
                    this.fundingReferences = ((_other.fundingReferences == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.FundingReferences.Builder.class, _other.fundingReferences, this, _other.fundingReferences, true, fundingReferencesPropertyTree, treeUse));
                }
            } else {
                this._product = _other;
            }
        }

        public TParentBuilder end() {
            return this._parentBuilder;
        }

        protected<P extends DataCiteMetadata >P init(final P product) {
            product.identifier = ((this.identifier == null)?null:this.identifier.build());
            product.creators = ((this.creators == null)?null:this.creators.build());
            product.titles = ((this.titles == null)?null:this.titles.build());
            product.publisher = ((this.publisher == null)?null:this.publisher.build());
            product.publicationYear = this.publicationYear;
            product.resourceType = ((this.resourceType == null)?null:this.resourceType.build());
            product.subjects = ((this.subjects == null)?null:this.subjects.build());
            product.contributors = ((this.contributors == null)?null:this.contributors.build());
            product.dates = ((this.dates == null)?null:this.dates.build());
            product.language = this.language;
            product.alternateIdentifiers = ((this.alternateIdentifiers == null)?null:this.alternateIdentifiers.build());
            product.relatedIdentifiers = ((this.relatedIdentifiers == null)?null:this.relatedIdentifiers.build());
            product.sizes = ((this.sizes == null)?null:this.sizes.build());
            product.formats = ((this.formats == null)?null:this.formats.build());
            product.version = this.version;
            product.rightsList = ((this.rightsList == null)?null:this.rightsList.build());
            product.descriptions = ((this.descriptions == null)?null:this.descriptions.build());
            product.geoLocations = ((this.geoLocations == null)?null:this.geoLocations.build());
            product.fundingReferences = ((this.fundingReferences == null)?null:this.fundingReferences.build());
            return product;
        }

        /**
         * Sets the new value of "identifier" (any previous value will be replaced)
         * 
         * @param identifier
         *     New value of the "identifier" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withIdentifier(final DataCiteMetadata.Identifier identifier) {
            this.identifier = ((identifier == null)?null:new DataCiteMetadata.Identifier.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, identifier, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "identifier" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Identifier.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "identifier" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Identifier.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.Identifier.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withIdentifier() {
            return this.identifier = new DataCiteMetadata.Identifier.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "creators" (any previous value will be replaced)
         * 
         * @param creators
         *     New value of the "creators" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withCreators(final DataCiteMetadata.Creators creators) {
            this.creators = ((creators == null)?null:new DataCiteMetadata.Creators.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, creators, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "creators" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Creators.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "creators" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Creators.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.Creators.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withCreators() {
            return this.creators = new DataCiteMetadata.Creators.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "titles" (any previous value will be replaced)
         * 
         * @param titles
         *     New value of the "titles" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withTitles(final DataCiteMetadata.Titles titles) {
            this.titles = ((titles == null)?null:new DataCiteMetadata.Titles.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, titles, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "titles" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Titles.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "titles" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Titles.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.Titles.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withTitles() {
            return this.titles = new DataCiteMetadata.Titles.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "publisher" (any previous value will be replaced)
         * 
         * @param publisher
         *     New value of the "publisher" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withPublisher(final DataCiteMetadata.Publisher publisher) {
            this.publisher = ((publisher == null)?null:new DataCiteMetadata.Publisher.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, publisher, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "publisher" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Publisher.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "publisher" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Publisher.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.Publisher.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withPublisher() {
            return this.publisher = new DataCiteMetadata.Publisher.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "publicationYear" (any previous value will be replaced)
         * 
         * @param publicationYear
         *     New value of the "publicationYear" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withPublicationYear(final String publicationYear) {
            this.publicationYear = publicationYear;
            return this;
        }

        /**
         * Sets the new value of "resourceType" (any previous value will be replaced)
         * 
         * @param resourceType
         *     New value of the "resourceType" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withResourceType(final DataCiteMetadata.ResourceType resourceType) {
            this.resourceType = ((resourceType == null)?null:new DataCiteMetadata.ResourceType.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, resourceType, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "resourceType" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.ResourceType.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "resourceType" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.ResourceType.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.ResourceType.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withResourceType() {
            return this.resourceType = new DataCiteMetadata.ResourceType.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "subjects" (any previous value will be replaced)
         * 
         * @param subjects
         *     New value of the "subjects" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withSubjects(final DataCiteMetadata.Subjects subjects) {
            this.subjects = ((subjects == null)?null:new DataCiteMetadata.Subjects.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, subjects, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "subjects" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Subjects.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "subjects" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Subjects.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.Subjects.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withSubjects() {
            return this.subjects = new DataCiteMetadata.Subjects.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "contributors" (any previous value will be replaced)
         * 
         * @param contributors
         *     New value of the "contributors" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withContributors(final DataCiteMetadata.Contributors contributors) {
            this.contributors = ((contributors == null)?null:new DataCiteMetadata.Contributors.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, contributors, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "contributors" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Contributors.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "contributors" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Contributors.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.Contributors.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withContributors() {
            return this.contributors = new DataCiteMetadata.Contributors.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "dates" (any previous value will be replaced)
         * 
         * @param dates
         *     New value of the "dates" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withDates(final DataCiteMetadata.Dates dates) {
            this.dates = ((dates == null)?null:new DataCiteMetadata.Dates.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, dates, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "dates" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Dates.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "dates" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Dates.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.Dates.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withDates() {
            return this.dates = new DataCiteMetadata.Dates.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "language" (any previous value will be replaced)
         * 
         * @param language
         *     New value of the "language" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withLanguage(final String language) {
            this.language = language;
            return this;
        }

        /**
         * Sets the new value of "alternateIdentifiers" (any previous value will be replaced)
         * 
         * @param alternateIdentifiers
         *     New value of the "alternateIdentifiers" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withAlternateIdentifiers(final DataCiteMetadata.AlternateIdentifiers alternateIdentifiers) {
            this.alternateIdentifiers = ((alternateIdentifiers == null)?null:new DataCiteMetadata.AlternateIdentifiers.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, alternateIdentifiers, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "alternateIdentifiers" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.AlternateIdentifiers.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "alternateIdentifiers" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.AlternateIdentifiers.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.AlternateIdentifiers.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withAlternateIdentifiers() {
            return this.alternateIdentifiers = new DataCiteMetadata.AlternateIdentifiers.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "relatedIdentifiers" (any previous value will be replaced)
         * 
         * @param relatedIdentifiers
         *     New value of the "relatedIdentifiers" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withRelatedIdentifiers(final DataCiteMetadata.RelatedIdentifiers relatedIdentifiers) {
            this.relatedIdentifiers = ((relatedIdentifiers == null)?null:new DataCiteMetadata.RelatedIdentifiers.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, relatedIdentifiers, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "relatedIdentifiers" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.RelatedIdentifiers.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "relatedIdentifiers" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.RelatedIdentifiers.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.RelatedIdentifiers.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withRelatedIdentifiers() {
            return this.relatedIdentifiers = new DataCiteMetadata.RelatedIdentifiers.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "sizes" (any previous value will be replaced)
         * 
         * @param sizes
         *     New value of the "sizes" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withSizes(final DataCiteMetadata.Sizes sizes) {
            this.sizes = ((sizes == null)?null:new DataCiteMetadata.Sizes.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, sizes, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "sizes" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Sizes.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "sizes" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Sizes.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.Sizes.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withSizes() {
            return this.sizes = new DataCiteMetadata.Sizes.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "formats" (any previous value will be replaced)
         * 
         * @param formats
         *     New value of the "formats" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withFormats(final DataCiteMetadata.Formats formats) {
            this.formats = ((formats == null)?null:new DataCiteMetadata.Formats.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, formats, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "formats" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Formats.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "formats" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Formats.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.Formats.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withFormats() {
            return this.formats = new DataCiteMetadata.Formats.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "version" (any previous value will be replaced)
         * 
         * @param version
         *     New value of the "version" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withVersion(final String version) {
            this.version = version;
            return this;
        }

        /**
         * Sets the new value of "rightsList" (any previous value will be replaced)
         * 
         * @param rightsList
         *     New value of the "rightsList" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withRightsList(final DataCiteMetadata.RightsList rightsList) {
            this.rightsList = ((rightsList == null)?null:new DataCiteMetadata.RightsList.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, rightsList, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "rightsList" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.RightsList.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "rightsList" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.RightsList.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.RightsList.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withRightsList() {
            return this.rightsList = new DataCiteMetadata.RightsList.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "descriptions" (any previous value will be replaced)
         * 
         * @param descriptions
         *     New value of the "descriptions" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withDescriptions(final DataCiteMetadata.Descriptions descriptions) {
            this.descriptions = ((descriptions == null)?null:new DataCiteMetadata.Descriptions.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, descriptions, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "descriptions" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Descriptions.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "descriptions" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Descriptions.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.Descriptions.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withDescriptions() {
            return this.descriptions = new DataCiteMetadata.Descriptions.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "geoLocations" (any previous value will be replaced)
         * 
         * @param geoLocations
         *     New value of the "geoLocations" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withGeoLocations(final DataCiteMetadata.GeoLocations geoLocations) {
            this.geoLocations = ((geoLocations == null)?null:new DataCiteMetadata.GeoLocations.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, geoLocations, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "geoLocations" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.GeoLocations.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "geoLocations" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.GeoLocations.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.GeoLocations.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withGeoLocations() {
            return this.geoLocations = new DataCiteMetadata.GeoLocations.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        /**
         * Sets the new value of "fundingReferences" (any previous value will be replaced)
         * 
         * @param fundingReferences
         *     New value of the "fundingReferences" property.
         */
        public DataCiteMetadata.Builder<TParentBuilder> withFundingReferences(final DataCiteMetadata.FundingReferences fundingReferences) {
            this.fundingReferences = ((fundingReferences == null)?null:new DataCiteMetadata.FundingReferences.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, fundingReferences, false));
            return this;
        }

        /**
         * Returns a new builder to build the value of the "fundingReferences" property (replacing previous value).
         * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.FundingReferences.Builder#end()} to return to the current builder.
         * 
         * @return
         *     A new builder to build the value of the "fundingReferences" property.
         *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.FundingReferences.Builder#end()} to return to the current builder.
         */
        public DataCiteMetadata.FundingReferences.Builder<? extends DataCiteMetadata.Builder<TParentBuilder>> withFundingReferences() {
            return this.fundingReferences = new DataCiteMetadata.FundingReferences.Builder<DataCiteMetadata.Builder<TParentBuilder>>(this, null, false);
        }

        public DataCiteMetadata build() {
            if (this._product == null) {
                return this.init(new DataCiteMetadata());
            } else {
                return ((DataCiteMetadata) this._product);
            }
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="contributor" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="contributorName">
     *                     &lt;complexType>
     *                       &lt;simpleContent>
     *                         &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
     *                           &lt;attribute name="nameType" type="{http://datacite.org/schema/kernel-4}nameType" />
     *                           &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
     *                         &lt;/extension>
     *                       &lt;/simpleContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="givenName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
     *                   &lt;element name="familyName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
     *                   &lt;element name="nameIdentifier" maxOccurs="unbounded" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;simpleContent>
     *                         &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                           &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *                           &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                         &lt;/extension>
     *                       &lt;/simpleContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
     *                 &lt;/sequence>
     *                 &lt;attribute name="contributorType" use="required" type="{http://datacite.org/schema/kernel-4}contributorType" />
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "contributor"
    })
    public static class Contributors {

        protected List<DataCiteMetadata.Contributors.Contributor> contributor;

        /**
         * Gets the value of the contributor property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the contributor property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getContributor().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DataCiteMetadata.Contributors.Contributor }
         * 
         * 
         */
        public List<DataCiteMetadata.Contributors.Contributor> getContributor() {
            if (contributor == null) {
                contributor = new ArrayList<DataCiteMetadata.Contributors.Contributor>();
            }
            return this.contributor;
        }

        public static DataCiteMetadata.Contributors.Builder<Void> builder() {
            return new DataCiteMetadata.Contributors.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.Contributors.Builder<Void> copyOf(final DataCiteMetadata.Contributors _other) {
            return new DataCiteMetadata.Contributors.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.Contributors.Builder<Void> copyOf(final DataCiteMetadata.Contributors _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.Contributors.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.Contributors.Builder<Void> copyExcept(final DataCiteMetadata.Contributors _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.Contributors.Builder<Void> copyOnly(final DataCiteMetadata.Contributors _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("contributor", contributor).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(contributor);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.Contributors o = ((DataCiteMetadata.Contributors) other);
            return Objects.equal(contributor, o.contributor);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.Contributors _product;
            private List<DataCiteMetadata.Contributors.Contributor.Builder<DataCiteMetadata.Contributors.Builder<TParentBuilder>>> contributor;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Contributors _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    if (_other.contributor == null) {
                        this.contributor = null;
                    } else {
                        this.contributor = new ArrayList<DataCiteMetadata.Contributors.Contributor.Builder<DataCiteMetadata.Contributors.Builder<TParentBuilder>>>();
                        for (DataCiteMetadata.Contributors.Contributor _item: _other.contributor) {
                            this.contributor.add(((_other.contributor == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Contributors.Contributor.Builder.class, _item, this, _item, true)));
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Contributors _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree contributorPropertyTree = ((propertyTree == null)?null:propertyTree.get("contributor"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(contributorPropertyTree!= null):((contributorPropertyTree == null)||(!contributorPropertyTree.isLeaf())))) {
                        if (_other.contributor == null) {
                            this.contributor = null;
                        } else {
                            this.contributor = new ArrayList<DataCiteMetadata.Contributors.Contributor.Builder<DataCiteMetadata.Contributors.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.Contributors.Contributor _item: _other.contributor) {
                                this.contributor.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Contributors.Contributor.Builder.class, _item, this, _item, true, contributorPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.Contributors >P init(final P product) {
                if (this.contributor!= null) {
                    final List<DataCiteMetadata.Contributors.Contributor> contributor = new ArrayList<DataCiteMetadata.Contributors.Contributor>(this.contributor.size());
                    for (DataCiteMetadata.Contributors.Contributor.Builder<DataCiteMetadata.Contributors.Builder<TParentBuilder>> _item: this.contributor) {
                        contributor.add(_item.build());
                    }
                    product.contributor = contributor;
                }
                return product;
            }

            /**
             * Adds the given items to the value of "contributor"
             * 
             * @param contributor
             *     Items to add to the value of the "contributor" property
             */
            public DataCiteMetadata.Contributors.Builder<TParentBuilder> addContributor(final Collection<? extends DataCiteMetadata.Contributors.Contributor> contributor) {
                if (this.contributor == null) {
                    this.contributor = new ArrayList<DataCiteMetadata.Contributors.Contributor.Builder<DataCiteMetadata.Contributors.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadata.Contributors.Contributor _item: contributor) {
                    this.contributor.add(new DataCiteMetadata.Contributors.Contributor.Builder<DataCiteMetadata.Contributors.Builder<TParentBuilder>>(this, _item, false));
                }
                return this;
            }

            /**
             * Sets the new value of "contributor" (any previous value will be replaced)
             * 
             * @param contributor
             *     New value of the "contributor" property.
             */
            public DataCiteMetadata.Contributors.Builder<TParentBuilder> withContributor(final Collection<? extends DataCiteMetadata.Contributors.Contributor> contributor) {
                if (this.contributor!= null) {
                    this.contributor.clear();
                }
                return addContributor(contributor);
            }

            /**
             * Adds the given items to the value of "contributor"
             * 
             * @param contributor
             *     Items to add to the value of the "contributor" property
             */
            public DataCiteMetadata.Contributors.Builder<TParentBuilder> addContributor(DataCiteMetadata.Contributors.Contributor... contributor) {
                addContributor(Arrays.asList(contributor));
                return this;
            }

            /**
             * Sets the new value of "contributor" (any previous value will be replaced)
             * 
             * @param contributor
             *     New value of the "contributor" property.
             */
            public DataCiteMetadata.Contributors.Builder<TParentBuilder> withContributor(DataCiteMetadata.Contributors.Contributor... contributor) {
                withContributor(Arrays.asList(contributor));
                return this;
            }

            /**
             * Returns a new builder to build an additional value of the "contributor" property.
             * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Contributors.Contributor.Builder#end()} to return to the current builder.
             * 
             * @return
             *     a new builder to build an additional value of the "contributor" property.
             *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Contributors.Contributor.Builder#end()} to return to the current builder.
             */
            public DataCiteMetadata.Contributors.Contributor.Builder<? extends DataCiteMetadata.Contributors.Builder<TParentBuilder>> addContributor() {
                if (this.contributor == null) {
                    this.contributor = new ArrayList<DataCiteMetadata.Contributors.Contributor.Builder<DataCiteMetadata.Contributors.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadata.Contributors.Contributor.Builder<DataCiteMetadata.Contributors.Builder<TParentBuilder>> contributorBuilder = new DataCiteMetadata.Contributors.Contributor.Builder<DataCiteMetadata.Contributors.Builder<TParentBuilder>>(this, null, false);
                this.contributor.add(contributorBuilder);
                return contributorBuilder;
            }

            public DataCiteMetadata.Contributors build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.Contributors());
                } else {
                    return ((DataCiteMetadata.Contributors) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="contributorName">
         *           &lt;complexType>
         *             &lt;simpleContent>
         *               &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
         *                 &lt;attribute name="nameType" type="{http://datacite.org/schema/kernel-4}nameType" />
         *                 &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
         *               &lt;/extension>
         *             &lt;/simpleContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="givenName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
         *         &lt;element name="familyName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
         *         &lt;element name="nameIdentifier" maxOccurs="unbounded" minOccurs="0">
         *           &lt;complexType>
         *             &lt;simpleContent>
         *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *                 &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *                 &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *               &lt;/extension>
         *             &lt;/simpleContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
         *       &lt;/sequence>
         *       &lt;attribute name="contributorType" use="required" type="{http://datacite.org/schema/kernel-4}contributorType" />
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "contributorName",
            "givenName",
            "familyName",
            "nameIdentifier",
            "affiliation"
        })
        public static class Contributor {

            @XmlElement(required = true)
            protected DataCiteMetadata.Contributors.Contributor.ContributorName contributorName;
            protected Object givenName;
            protected Object familyName;
            protected List<DataCiteMetadata.Contributors.Contributor.NameIdentifier> nameIdentifier;
            protected List<Object> affiliation;
            @XmlAttribute(name = "contributorType", required = true)
            protected ContributorType contributorType;

            /**
             * Gets the value of the contributorName property.
             * 
             * @return
             *     possible object is
             *     {@link DataCiteMetadata.Contributors.Contributor.ContributorName }
             *     
             */
            public DataCiteMetadata.Contributors.Contributor.ContributorName getContributorName() {
                return contributorName;
            }

            /**
             * Sets the value of the contributorName property.
             * 
             * @param value
             *     allowed object is
             *     {@link DataCiteMetadata.Contributors.Contributor.ContributorName }
             *     
             */
            public void setContributorName(DataCiteMetadata.Contributors.Contributor.ContributorName value) {
                this.contributorName = value;
            }

            /**
             * Gets the value of the givenName property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            public Object getGivenName() {
                return givenName;
            }

            /**
             * Sets the value of the givenName property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setGivenName(Object value) {
                this.givenName = value;
            }

            /**
             * Gets the value of the familyName property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            public Object getFamilyName() {
                return familyName;
            }

            /**
             * Sets the value of the familyName property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setFamilyName(Object value) {
                this.familyName = value;
            }

            /**
             * Gets the value of the nameIdentifier property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the nameIdentifier property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getNameIdentifier().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link DataCiteMetadata.Contributors.Contributor.NameIdentifier }
             * 
             * 
             */
            public List<DataCiteMetadata.Contributors.Contributor.NameIdentifier> getNameIdentifier() {
                if (nameIdentifier == null) {
                    nameIdentifier = new ArrayList<DataCiteMetadata.Contributors.Contributor.NameIdentifier>();
                }
                return this.nameIdentifier;
            }

            /**
             * Gets the value of the affiliation property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the affiliation property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getAffiliation().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link Object }
             * 
             * 
             */
            public List<Object> getAffiliation() {
                if (affiliation == null) {
                    affiliation = new ArrayList<Object>();
                }
                return this.affiliation;
            }

            /**
             * Gets the value of the contributorType property.
             * 
             * @return
             *     possible object is
             *     {@link ContributorType }
             *     
             */
            public ContributorType getContributorType() {
                return contributorType;
            }

            /**
             * Sets the value of the contributorType property.
             * 
             * @param value
             *     allowed object is
             *     {@link ContributorType }
             *     
             */
            public void setContributorType(ContributorType value) {
                this.contributorType = value;
            }

            public static DataCiteMetadata.Contributors.Contributor.Builder<Void> builder() {
                return new DataCiteMetadata.Contributors.Contributor.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadata.Contributors.Contributor.Builder<Void> copyOf(final DataCiteMetadata.Contributors.Contributor _other) {
                return new DataCiteMetadata.Contributors.Contributor.Builder<Void>(null, _other, true);
            }

            public static DataCiteMetadata.Contributors.Contributor.Builder<Void> copyOf(final DataCiteMetadata.Contributors.Contributor _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                return new DataCiteMetadata.Contributors.Contributor.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
            }

            public static DataCiteMetadata.Contributors.Contributor.Builder<Void> copyExcept(final DataCiteMetadata.Contributors.Contributor _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadata.Contributors.Contributor.Builder<Void> copyOnly(final DataCiteMetadata.Contributors.Contributor _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("contributorName", contributorName).add("givenName", givenName).add("familyName", familyName).add("nameIdentifier", nameIdentifier).add("affiliation", affiliation).add("contributorType", contributorType).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(contributorName, givenName, familyName, nameIdentifier, affiliation, contributorType);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadata.Contributors.Contributor o = ((DataCiteMetadata.Contributors.Contributor) other);
                return (((((Objects.equal(contributorName, o.contributorName)&&Objects.equal(givenName, o.givenName))&&Objects.equal(familyName, o.familyName))&&Objects.equal(nameIdentifier, o.nameIdentifier))&&Objects.equal(affiliation, o.affiliation))&&Objects.equal(contributorType, o.contributorType));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadata.Contributors.Contributor _product;
                private DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>> contributorName;
                private Object givenName;
                private Object familyName;
                private List<DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>>> nameIdentifier;
                private List<Object> affiliation;
                private ContributorType contributorType;

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Contributors.Contributor _other, final boolean _copy) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        this.contributorName = ((_other.contributorName == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Contributors.Contributor.ContributorName.Builder.class, _other.contributorName, this, _other.contributorName, true));
                        this.givenName = _other.givenName;
                        this.familyName = _other.familyName;
                        if (_other.nameIdentifier == null) {
                            this.nameIdentifier = null;
                        } else {
                            this.nameIdentifier = new ArrayList<DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.Contributors.Contributor.NameIdentifier _item: _other.nameIdentifier) {
                                this.nameIdentifier.add(((_other.nameIdentifier == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder.class, _item, this, _item, true)));
                            }
                        }
                        this.affiliation = ((_other.affiliation == null)?null:new ArrayList<Object>(_other.affiliation));
                        this.contributorType = _other.contributorType;
                    } else {
                        this._product = _other;
                    }
                }

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Contributors.Contributor _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        final PropertyTree contributorNamePropertyTree = ((propertyTree == null)?null:propertyTree.get("contributorName"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(contributorNamePropertyTree!= null):((contributorNamePropertyTree == null)||(!contributorNamePropertyTree.isLeaf())))) {
                            this.contributorName = ((_other.contributorName == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Contributors.Contributor.ContributorName.Builder.class, _other.contributorName, this, _other.contributorName, true, contributorNamePropertyTree, treeUse));
                        }
                        final PropertyTree givenNamePropertyTree = ((propertyTree == null)?null:propertyTree.get("givenName"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(givenNamePropertyTree!= null):((givenNamePropertyTree == null)||(!givenNamePropertyTree.isLeaf())))) {
                            this.givenName = _other.givenName;
                        }
                        final PropertyTree familyNamePropertyTree = ((propertyTree == null)?null:propertyTree.get("familyName"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(familyNamePropertyTree!= null):((familyNamePropertyTree == null)||(!familyNamePropertyTree.isLeaf())))) {
                            this.familyName = _other.familyName;
                        }
                        final PropertyTree nameIdentifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("nameIdentifier"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(nameIdentifierPropertyTree!= null):((nameIdentifierPropertyTree == null)||(!nameIdentifierPropertyTree.isLeaf())))) {
                            if (_other.nameIdentifier == null) {
                                this.nameIdentifier = null;
                            } else {
                                this.nameIdentifier = new ArrayList<DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>>>();
                                for (DataCiteMetadata.Contributors.Contributor.NameIdentifier _item: _other.nameIdentifier) {
                                    this.nameIdentifier.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder.class, _item, this, _item, true, nameIdentifierPropertyTree, treeUse)));
                                }
                            }
                        }
                        final PropertyTree affiliationPropertyTree = ((propertyTree == null)?null:propertyTree.get("affiliation"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(affiliationPropertyTree!= null):((affiliationPropertyTree == null)||(!affiliationPropertyTree.isLeaf())))) {
                            this.affiliation = ((_other.affiliation == null)?null:new ArrayList<Object>(_other.affiliation));
                        }
                        final PropertyTree contributorTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("contributorType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(contributorTypePropertyTree!= null):((contributorTypePropertyTree == null)||(!contributorTypePropertyTree.isLeaf())))) {
                            this.contributorType = _other.contributorType;
                        }
                    } else {
                        this._product = _other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadata.Contributors.Contributor >P init(final P product) {
                    product.contributorName = ((this.contributorName == null)?null:this.contributorName.build());
                    product.givenName = this.givenName;
                    product.familyName = this.familyName;
                    if (this.nameIdentifier!= null) {
                        final List<DataCiteMetadata.Contributors.Contributor.NameIdentifier> nameIdentifier = new ArrayList<DataCiteMetadata.Contributors.Contributor.NameIdentifier>(this.nameIdentifier.size());
                        for (DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>> _item: this.nameIdentifier) {
                            nameIdentifier.add(_item.build());
                        }
                        product.nameIdentifier = nameIdentifier;
                    }
                    product.affiliation = this.affiliation;
                    product.contributorType = this.contributorType;
                    return product;
                }

                /**
                 * Sets the new value of "contributorName" (any previous value will be replaced)
                 * 
                 * @param contributorName
                 *     New value of the "contributorName" property.
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> withContributorName(final DataCiteMetadata.Contributors.Contributor.ContributorName contributorName) {
                    this.contributorName = ((contributorName == null)?null:new DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>>(this, contributorName, false));
                    return this;
                }

                /**
                 * Returns a new builder to build the value of the "contributorName" property (replacing previous value).
                 * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Contributors.Contributor.ContributorName.Builder#end()} to return to the current builder.
                 * 
                 * @return
                 *     A new builder to build the value of the "contributorName" property.
                 *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Contributors.Contributor.ContributorName.Builder#end()} to return to the current builder.
                 */
                public DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<? extends DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>> withContributorName() {
                    return this.contributorName = new DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>>(this, null, false);
                }

                /**
                 * Sets the new value of "givenName" (any previous value will be replaced)
                 * 
                 * @param givenName
                 *     New value of the "givenName" property.
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> withGivenName(final Object givenName) {
                    this.givenName = givenName;
                    return this;
                }

                /**
                 * Sets the new value of "familyName" (any previous value will be replaced)
                 * 
                 * @param familyName
                 *     New value of the "familyName" property.
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> withFamilyName(final Object familyName) {
                    this.familyName = familyName;
                    return this;
                }

                /**
                 * Adds the given items to the value of "nameIdentifier"
                 * 
                 * @param nameIdentifier
                 *     Items to add to the value of the "nameIdentifier" property
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> addNameIdentifier(final Collection<? extends DataCiteMetadata.Contributors.Contributor.NameIdentifier> nameIdentifier) {
                    if (this.nameIdentifier == null) {
                        this.nameIdentifier = new ArrayList<DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>>>();
                    }
                    for (DataCiteMetadata.Contributors.Contributor.NameIdentifier _item: nameIdentifier) {
                        this.nameIdentifier.add(new DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>>(this, _item, false));
                    }
                    return this;
                }

                /**
                 * Sets the new value of "nameIdentifier" (any previous value will be replaced)
                 * 
                 * @param nameIdentifier
                 *     New value of the "nameIdentifier" property.
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> withNameIdentifier(final Collection<? extends DataCiteMetadata.Contributors.Contributor.NameIdentifier> nameIdentifier) {
                    if (this.nameIdentifier!= null) {
                        this.nameIdentifier.clear();
                    }
                    return addNameIdentifier(nameIdentifier);
                }

                /**
                 * Adds the given items to the value of "nameIdentifier"
                 * 
                 * @param nameIdentifier
                 *     Items to add to the value of the "nameIdentifier" property
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> addNameIdentifier(DataCiteMetadata.Contributors.Contributor.NameIdentifier... nameIdentifier) {
                    addNameIdentifier(Arrays.asList(nameIdentifier));
                    return this;
                }

                /**
                 * Sets the new value of "nameIdentifier" (any previous value will be replaced)
                 * 
                 * @param nameIdentifier
                 *     New value of the "nameIdentifier" property.
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> withNameIdentifier(DataCiteMetadata.Contributors.Contributor.NameIdentifier... nameIdentifier) {
                    withNameIdentifier(Arrays.asList(nameIdentifier));
                    return this;
                }

                /**
                 * Returns a new builder to build an additional value of the "nameIdentifier" property.
                 * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder#end()} to return to the current builder.
                 * 
                 * @return
                 *     a new builder to build an additional value of the "nameIdentifier" property.
                 *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder#end()} to return to the current builder.
                 */
                public DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<? extends DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>> addNameIdentifier() {
                    if (this.nameIdentifier == null) {
                        this.nameIdentifier = new ArrayList<DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>>>();
                    }
                    final DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>> nameIdentifierBuilder = new DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder>>(this, null, false);
                    this.nameIdentifier.add(nameIdentifierBuilder);
                    return nameIdentifierBuilder;
                }

                /**
                 * Adds the given items to the value of "affiliation"
                 * 
                 * @param affiliation
                 *     Items to add to the value of the "affiliation" property
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> addAffiliation(final Collection<?> affiliation) {
                    if (this.affiliation == null) {
                        this.affiliation = new ArrayList<Object>();
                    }
                    this.affiliation.addAll(affiliation);
                    return this;
                }

                /**
                 * Sets the new value of "affiliation" (any previous value will be replaced)
                 * 
                 * @param affiliation
                 *     New value of the "affiliation" property.
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> withAffiliation(final Collection<?> affiliation) {
                    if (this.affiliation!= null) {
                        this.affiliation.clear();
                    }
                    return addAffiliation(affiliation);
                }

                /**
                 * Adds the given items to the value of "affiliation"
                 * 
                 * @param affiliation
                 *     Items to add to the value of the "affiliation" property
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> addAffiliation(Object... affiliation) {
                    addAffiliation(Arrays.asList(affiliation));
                    return this;
                }

                /**
                 * Sets the new value of "affiliation" (any previous value will be replaced)
                 * 
                 * @param affiliation
                 *     New value of the "affiliation" property.
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> withAffiliation(Object... affiliation) {
                    withAffiliation(Arrays.asList(affiliation));
                    return this;
                }

                /**
                 * Sets the new value of "contributorType" (any previous value will be replaced)
                 * 
                 * @param contributorType
                 *     New value of the "contributorType" property.
                 */
                public DataCiteMetadata.Contributors.Contributor.Builder<TParentBuilder> withContributorType(final ContributorType contributorType) {
                    this.contributorType = contributorType;
                    return this;
                }

                public DataCiteMetadata.Contributors.Contributor build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadata.Contributors.Contributor());
                    } else {
                        return ((DataCiteMetadata.Contributors.Contributor) this._product);
                    }
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;simpleContent>
             *     &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
             *       &lt;attribute name="nameType" type="{http://datacite.org/schema/kernel-4}nameType" />
             *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
             *     &lt;/extension>
             *   &lt;/simpleContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "value"
            })
            public static class ContributorName {

                @XmlValue
                protected String value;
                @XmlAttribute(name = "nameType")
                protected NameType nameType;
                @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
                protected String lang;

                /**
                 * Gets the value of the value property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getValue() {
                    return value;
                }

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setValue(String value) {
                    this.value = value;
                }

                /**
                 * Gets the value of the nameType property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link NameType }
                 *     
                 */
                public NameType getNameType() {
                    return nameType;
                }

                /**
                 * Sets the value of the nameType property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link NameType }
                 *     
                 */
                public void setNameType(NameType value) {
                    this.nameType = value;
                }

                /**
                 * Gets the value of the lang property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getLang() {
                    return lang;
                }

                /**
                 * Sets the value of the lang property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setLang(String value) {
                    this.lang = value;
                }

                public static DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<Void> builder() {
                    return new DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<Void>(null, null, false);
                }

                public static DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<Void> copyOf(final DataCiteMetadata.Contributors.Contributor.ContributorName _other) {
                    return new DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<Void>(null, _other, true);
                }

                public static DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<Void> copyOf(final DataCiteMetadata.Contributors.Contributor.ContributorName _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                    return new DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
                }

                public static DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<Void> copyExcept(final DataCiteMetadata.Contributors.Contributor.ContributorName _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
                }

                public static DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<Void> copyOnly(final DataCiteMetadata.Contributors.Contributor.ContributorName _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
                }

                @Override
                public String toString() {
                    return Objects.toStringHelper(this).add("value", value).add("nameType", nameType).add("lang", lang).toString();
                }

                @Override
                public int hashCode() {
                    return Objects.hashCode(value, nameType, lang);
                }

                @Override
                public boolean equals(Object other) {
                    if (this == other) {
                        return true;
                    }
                    if (other == null) {
                        return false;
                    }
                    if (getClass()!= other.getClass()) {
                        return false;
                    }
                    final DataCiteMetadata.Contributors.Contributor.ContributorName o = ((DataCiteMetadata.Contributors.Contributor.ContributorName) other);
                    return ((Objects.equal(value, o.value)&&Objects.equal(nameType, o.nameType))&&Objects.equal(lang, o.lang));
                }

                public static class Builder<TParentBuilder >{

                    protected final TParentBuilder _parentBuilder;
                    protected final DataCiteMetadata.Contributors.Contributor.ContributorName _product;
                    private String value;
                    private NameType nameType;
                    private String lang;

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Contributors.Contributor.ContributorName _other, final boolean _copy) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            this.value = _other.value;
                            this.nameType = _other.nameType;
                            this.lang = _other.lang;
                        } else {
                            this._product = _other;
                        }
                    }

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Contributors.Contributor.ContributorName _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                                this.value = _other.value;
                            }
                            final PropertyTree nameTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("nameType"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(nameTypePropertyTree!= null):((nameTypePropertyTree == null)||(!nameTypePropertyTree.isLeaf())))) {
                                this.nameType = _other.nameType;
                            }
                            final PropertyTree langPropertyTree = ((propertyTree == null)?null:propertyTree.get("lang"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(langPropertyTree!= null):((langPropertyTree == null)||(!langPropertyTree.isLeaf())))) {
                                this.lang = _other.lang;
                            }
                        } else {
                            this._product = _other;
                        }
                    }

                    public TParentBuilder end() {
                        return this._parentBuilder;
                    }

                    protected<P extends DataCiteMetadata.Contributors.Contributor.ContributorName >P init(final P product) {
                        product.value = this.value;
                        product.nameType = this.nameType;
                        product.lang = this.lang;
                        return product;
                    }

                    /**
                     * Sets the new value of "value" (any previous value will be replaced)
                     * 
                     * @param value
                     *     New value of the "value" property.
                     */
                    public DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<TParentBuilder> withValue(final String value) {
                        this.value = value;
                        return this;
                    }

                    /**
                     * Sets the new value of "nameType" (any previous value will be replaced)
                     * 
                     * @param nameType
                     *     New value of the "nameType" property.
                     */
                    public DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<TParentBuilder> withNameType(final NameType nameType) {
                        this.nameType = nameType;
                        return this;
                    }

                    /**
                     * Sets the new value of "lang" (any previous value will be replaced)
                     * 
                     * @param lang
                     *     New value of the "lang" property.
                     */
                    public DataCiteMetadata.Contributors.Contributor.ContributorName.Builder<TParentBuilder> withLang(final String lang) {
                        this.lang = lang;
                        return this;
                    }

                    public DataCiteMetadata.Contributors.Contributor.ContributorName build() {
                        if (this._product == null) {
                            return this.init(new DataCiteMetadata.Contributors.Contributor.ContributorName());
                        } else {
                            return ((DataCiteMetadata.Contributors.Contributor.ContributorName) this._product);
                        }
                    }

                }

                public static class Select
                    extends DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<DataCiteMetadata.Contributors.Contributor.ContributorName.Select, Void>
                {


                    Select() {
                        super(null, null, null);
                    }

                    public static DataCiteMetadata.Contributors.Contributor.ContributorName.Select _root() {
                        return new DataCiteMetadata.Contributors.Contributor.ContributorName.Select();
                    }

                }

                public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                    extends com.kscs.util.jaxb.Selector<TRoot, TParent>
                {

                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, TParent>> value = null;
                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, TParent>> nameType = null;
                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, TParent>> lang = null;

                    public Selector(final TRoot root, final TParent parent, final String propertyName) {
                        super(root, parent, propertyName);
                    }

                    @Override
                    public Map<String, PropertyTree> buildChildren() {
                        final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                        products.putAll(super.buildChildren());
                        if (this.value!= null) {
                            products.put("value", this.value.init());
                        }
                        if (this.nameType!= null) {
                            products.put("nameType", this.nameType.init());
                        }
                        if (this.lang!= null) {
                            products.put("lang", this.lang.init());
                        }
                        return products;
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, TParent>> value() {
                        return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, TParent>> nameType() {
                        return ((this.nameType == null)?this.nameType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, TParent>>(this._root, this, "nameType"):this.nameType);
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, TParent>> lang() {
                        return ((this.lang == null)?this.lang = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, TParent>>(this._root, this, "lang"):this.lang);
                    }

                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;simpleContent>
             *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
             *       &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
             *       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
             *     &lt;/extension>
             *   &lt;/simpleContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "value"
            })
            public static class NameIdentifier {

                @XmlValue
                protected String value;
                @XmlAttribute(name = "nameIdentifierScheme", required = true)
                @XmlSchemaType(name = "anySimpleType")
                protected String nameIdentifierScheme;
                @XmlAttribute(name = "schemeURI")
                @XmlSchemaType(name = "anyURI")
                protected String schemeURI;

                /**
                 * Gets the value of the value property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getValue() {
                    return value;
                }

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setValue(String value) {
                    this.value = value;
                }

                /**
                 * Gets the value of the nameIdentifierScheme property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getNameIdentifierScheme() {
                    return nameIdentifierScheme;
                }

                /**
                 * Sets the value of the nameIdentifierScheme property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setNameIdentifierScheme(String value) {
                    this.nameIdentifierScheme = value;
                }

                /**
                 * Gets the value of the schemeURI property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getSchemeURI() {
                    return schemeURI;
                }

                /**
                 * Sets the value of the schemeURI property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setSchemeURI(String value) {
                    this.schemeURI = value;
                }

                public static DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<Void> builder() {
                    return new DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<Void>(null, null, false);
                }

                public static DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<Void> copyOf(final DataCiteMetadata.Contributors.Contributor.NameIdentifier _other) {
                    return new DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<Void>(null, _other, true);
                }

                public static DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<Void> copyOf(final DataCiteMetadata.Contributors.Contributor.NameIdentifier _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                    return new DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
                }

                public static DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<Void> copyExcept(final DataCiteMetadata.Contributors.Contributor.NameIdentifier _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
                }

                public static DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<Void> copyOnly(final DataCiteMetadata.Contributors.Contributor.NameIdentifier _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
                }

                @Override
                public String toString() {
                    return Objects.toStringHelper(this).add("value", value).add("nameIdentifierScheme", nameIdentifierScheme).add("schemeURI", schemeURI).toString();
                }

                @Override
                public int hashCode() {
                    return Objects.hashCode(value, nameIdentifierScheme, schemeURI);
                }

                @Override
                public boolean equals(Object other) {
                    if (this == other) {
                        return true;
                    }
                    if (other == null) {
                        return false;
                    }
                    if (getClass()!= other.getClass()) {
                        return false;
                    }
                    final DataCiteMetadata.Contributors.Contributor.NameIdentifier o = ((DataCiteMetadata.Contributors.Contributor.NameIdentifier) other);
                    return ((Objects.equal(value, o.value)&&Objects.equal(nameIdentifierScheme, o.nameIdentifierScheme))&&Objects.equal(schemeURI, o.schemeURI));
                }

                public static class Builder<TParentBuilder >{

                    protected final TParentBuilder _parentBuilder;
                    protected final DataCiteMetadata.Contributors.Contributor.NameIdentifier _product;
                    private String value;
                    private String nameIdentifierScheme;
                    private String schemeURI;

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Contributors.Contributor.NameIdentifier _other, final boolean _copy) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            this.value = _other.value;
                            this.nameIdentifierScheme = _other.nameIdentifierScheme;
                            this.schemeURI = _other.schemeURI;
                        } else {
                            this._product = _other;
                        }
                    }

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Contributors.Contributor.NameIdentifier _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                                this.value = _other.value;
                            }
                            final PropertyTree nameIdentifierSchemePropertyTree = ((propertyTree == null)?null:propertyTree.get("nameIdentifierScheme"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(nameIdentifierSchemePropertyTree!= null):((nameIdentifierSchemePropertyTree == null)||(!nameIdentifierSchemePropertyTree.isLeaf())))) {
                                this.nameIdentifierScheme = _other.nameIdentifierScheme;
                            }
                            final PropertyTree schemeURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("schemeURI"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(schemeURIPropertyTree!= null):((schemeURIPropertyTree == null)||(!schemeURIPropertyTree.isLeaf())))) {
                                this.schemeURI = _other.schemeURI;
                            }
                        } else {
                            this._product = _other;
                        }
                    }

                    public TParentBuilder end() {
                        return this._parentBuilder;
                    }

                    protected<P extends DataCiteMetadata.Contributors.Contributor.NameIdentifier >P init(final P product) {
                        product.value = this.value;
                        product.nameIdentifierScheme = this.nameIdentifierScheme;
                        product.schemeURI = this.schemeURI;
                        return product;
                    }

                    /**
                     * Sets the new value of "value" (any previous value will be replaced)
                     * 
                     * @param value
                     *     New value of the "value" property.
                     */
                    public DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<TParentBuilder> withValue(final String value) {
                        this.value = value;
                        return this;
                    }

                    /**
                     * Sets the new value of "nameIdentifierScheme" (any previous value will be replaced)
                     * 
                     * @param nameIdentifierScheme
                     *     New value of the "nameIdentifierScheme" property.
                     */
                    public DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<TParentBuilder> withNameIdentifierScheme(final String nameIdentifierScheme) {
                        this.nameIdentifierScheme = nameIdentifierScheme;
                        return this;
                    }

                    /**
                     * Sets the new value of "schemeURI" (any previous value will be replaced)
                     * 
                     * @param schemeURI
                     *     New value of the "schemeURI" property.
                     */
                    public DataCiteMetadata.Contributors.Contributor.NameIdentifier.Builder<TParentBuilder> withSchemeURI(final String schemeURI) {
                        this.schemeURI = schemeURI;
                        return this;
                    }

                    public DataCiteMetadata.Contributors.Contributor.NameIdentifier build() {
                        if (this._product == null) {
                            return this.init(new DataCiteMetadata.Contributors.Contributor.NameIdentifier());
                        } else {
                            return ((DataCiteMetadata.Contributors.Contributor.NameIdentifier) this._product);
                        }
                    }

                }

                public static class Select
                    extends DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<DataCiteMetadata.Contributors.Contributor.NameIdentifier.Select, Void>
                {


                    Select() {
                        super(null, null, null);
                    }

                    public static DataCiteMetadata.Contributors.Contributor.NameIdentifier.Select _root() {
                        return new DataCiteMetadata.Contributors.Contributor.NameIdentifier.Select();
                    }

                }

                public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                    extends com.kscs.util.jaxb.Selector<TRoot, TParent>
                {

                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, TParent>> value = null;
                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, TParent>> nameIdentifierScheme = null;
                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, TParent>> schemeURI = null;

                    public Selector(final TRoot root, final TParent parent, final String propertyName) {
                        super(root, parent, propertyName);
                    }

                    @Override
                    public Map<String, PropertyTree> buildChildren() {
                        final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                        products.putAll(super.buildChildren());
                        if (this.value!= null) {
                            products.put("value", this.value.init());
                        }
                        if (this.nameIdentifierScheme!= null) {
                            products.put("nameIdentifierScheme", this.nameIdentifierScheme.init());
                        }
                        if (this.schemeURI!= null) {
                            products.put("schemeURI", this.schemeURI.init());
                        }
                        return products;
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, TParent>> value() {
                        return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, TParent>> nameIdentifierScheme() {
                        return ((this.nameIdentifierScheme == null)?this.nameIdentifierScheme = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, TParent>>(this._root, this, "nameIdentifierScheme"):this.nameIdentifierScheme);
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, TParent>> schemeURI() {
                        return ((this.schemeURI == null)?this.schemeURI = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, TParent>>(this._root, this, "schemeURI"):this.schemeURI);
                    }

                }

            }

            public static class Select
                extends DataCiteMetadata.Contributors.Contributor.Selector<DataCiteMetadata.Contributors.Contributor.Select, Void>
            {


                Select() {
                    super(null, null, null);
                }

                public static DataCiteMetadata.Contributors.Contributor.Select _root() {
                    return new DataCiteMetadata.Contributors.Contributor.Select();
                }

            }

            public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                extends com.kscs.util.jaxb.Selector<TRoot, TParent>
            {

                private DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> contributorName = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> givenName = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> familyName = null;
                private DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> nameIdentifier = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> affiliation = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> contributorType = null;

                public Selector(final TRoot root, final TParent parent, final String propertyName) {
                    super(root, parent, propertyName);
                }

                @Override
                public Map<String, PropertyTree> buildChildren() {
                    final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                    products.putAll(super.buildChildren());
                    if (this.contributorName!= null) {
                        products.put("contributorName", this.contributorName.init());
                    }
                    if (this.givenName!= null) {
                        products.put("givenName", this.givenName.init());
                    }
                    if (this.familyName!= null) {
                        products.put("familyName", this.familyName.init());
                    }
                    if (this.nameIdentifier!= null) {
                        products.put("nameIdentifier", this.nameIdentifier.init());
                    }
                    if (this.affiliation!= null) {
                        products.put("affiliation", this.affiliation.init());
                    }
                    if (this.contributorType!= null) {
                        products.put("contributorType", this.contributorType.init());
                    }
                    return products;
                }

                public DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> contributorName() {
                    return ((this.contributorName == null)?this.contributorName = new DataCiteMetadata.Contributors.Contributor.ContributorName.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>>(this._root, this, "contributorName"):this.contributorName);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> givenName() {
                    return ((this.givenName == null)?this.givenName = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>>(this._root, this, "givenName"):this.givenName);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> familyName() {
                    return ((this.familyName == null)?this.familyName = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>>(this._root, this, "familyName"):this.familyName);
                }

                public DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> nameIdentifier() {
                    return ((this.nameIdentifier == null)?this.nameIdentifier = new DataCiteMetadata.Contributors.Contributor.NameIdentifier.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>>(this._root, this, "nameIdentifier"):this.nameIdentifier);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> affiliation() {
                    return ((this.affiliation == null)?this.affiliation = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>>(this._root, this, "affiliation"):this.affiliation);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>> contributorType() {
                    return ((this.contributorType == null)?this.contributorType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Contributors.Contributor.Selector<TRoot, TParent>>(this._root, this, "contributorType"):this.contributorType);
                }

            }

        }

        public static class Select
            extends DataCiteMetadata.Contributors.Selector<DataCiteMetadata.Contributors.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.Contributors.Select _root() {
                return new DataCiteMetadata.Contributors.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private DataCiteMetadata.Contributors.Contributor.Selector<TRoot, DataCiteMetadata.Contributors.Selector<TRoot, TParent>> contributor = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.contributor!= null) {
                    products.put("contributor", this.contributor.init());
                }
                return products;
            }

            public DataCiteMetadata.Contributors.Contributor.Selector<TRoot, DataCiteMetadata.Contributors.Selector<TRoot, TParent>> contributor() {
                return ((this.contributor == null)?this.contributor = new DataCiteMetadata.Contributors.Contributor.Selector<TRoot, DataCiteMetadata.Contributors.Selector<TRoot, TParent>>(this._root, this, "contributor"):this.contributor);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="creator" maxOccurs="unbounded">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;sequence>
     *                   &lt;element name="creatorName">
     *                     &lt;complexType>
     *                       &lt;simpleContent>
     *                         &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                           &lt;attribute name="nameType" type="{http://datacite.org/schema/kernel-4}nameType" />
     *                           &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
     *                         &lt;/extension>
     *                       &lt;/simpleContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="givenName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
     *                   &lt;element name="familyName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
     *                   &lt;element name="nameIdentifier" maxOccurs="unbounded" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;simpleContent>
     *                         &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
     *                           &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *                           &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                         &lt;/extension>
     *                       &lt;/simpleContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
     *                 &lt;/sequence>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "creator"
    })
    public static class Creators {

        @XmlElement(required = true)
        protected List<DataCiteMetadata.Creators.Creator> creator;

        /**
         * Gets the value of the creator property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the creator property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getCreator().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DataCiteMetadata.Creators.Creator }
         * 
         * 
         */
        public List<DataCiteMetadata.Creators.Creator> getCreator() {
            if (creator == null) {
                creator = new ArrayList<DataCiteMetadata.Creators.Creator>();
            }
            return this.creator;
        }

        public static DataCiteMetadata.Creators.Builder<Void> builder() {
            return new DataCiteMetadata.Creators.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.Creators.Builder<Void> copyOf(final DataCiteMetadata.Creators _other) {
            return new DataCiteMetadata.Creators.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.Creators.Builder<Void> copyOf(final DataCiteMetadata.Creators _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.Creators.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.Creators.Builder<Void> copyExcept(final DataCiteMetadata.Creators _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.Creators.Builder<Void> copyOnly(final DataCiteMetadata.Creators _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("creator", creator).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(creator);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.Creators o = ((DataCiteMetadata.Creators) other);
            return Objects.equal(creator, o.creator);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.Creators _product;
            private List<DataCiteMetadata.Creators.Creator.Builder<DataCiteMetadata.Creators.Builder<TParentBuilder>>> creator;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Creators _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    if (_other.creator == null) {
                        this.creator = null;
                    } else {
                        this.creator = new ArrayList<DataCiteMetadata.Creators.Creator.Builder<DataCiteMetadata.Creators.Builder<TParentBuilder>>>();
                        for (DataCiteMetadata.Creators.Creator _item: _other.creator) {
                            this.creator.add(((_other.creator == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Creators.Creator.Builder.class, _item, this, _item, true)));
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Creators _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree creatorPropertyTree = ((propertyTree == null)?null:propertyTree.get("creator"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(creatorPropertyTree!= null):((creatorPropertyTree == null)||(!creatorPropertyTree.isLeaf())))) {
                        if (_other.creator == null) {
                            this.creator = null;
                        } else {
                            this.creator = new ArrayList<DataCiteMetadata.Creators.Creator.Builder<DataCiteMetadata.Creators.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.Creators.Creator _item: _other.creator) {
                                this.creator.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Creators.Creator.Builder.class, _item, this, _item, true, creatorPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.Creators >P init(final P product) {
                if (this.creator!= null) {
                    final List<DataCiteMetadata.Creators.Creator> creator = new ArrayList<DataCiteMetadata.Creators.Creator>(this.creator.size());
                    for (DataCiteMetadata.Creators.Creator.Builder<DataCiteMetadata.Creators.Builder<TParentBuilder>> _item: this.creator) {
                        creator.add(_item.build());
                    }
                    product.creator = creator;
                }
                return product;
            }

            /**
             * Adds the given items to the value of "creator"
             * 
             * @param creator
             *     Items to add to the value of the "creator" property
             */
            public DataCiteMetadata.Creators.Builder<TParentBuilder> addCreator(final Collection<? extends DataCiteMetadata.Creators.Creator> creator) {
                if (this.creator == null) {
                    this.creator = new ArrayList<DataCiteMetadata.Creators.Creator.Builder<DataCiteMetadata.Creators.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadata.Creators.Creator _item: creator) {
                    this.creator.add(new DataCiteMetadata.Creators.Creator.Builder<DataCiteMetadata.Creators.Builder<TParentBuilder>>(this, _item, false));
                }
                return this;
            }

            /**
             * Sets the new value of "creator" (any previous value will be replaced)
             * 
             * @param creator
             *     New value of the "creator" property.
             */
            public DataCiteMetadata.Creators.Builder<TParentBuilder> withCreator(final Collection<? extends DataCiteMetadata.Creators.Creator> creator) {
                if (this.creator!= null) {
                    this.creator.clear();
                }
                return addCreator(creator);
            }

            /**
             * Adds the given items to the value of "creator"
             * 
             * @param creator
             *     Items to add to the value of the "creator" property
             */
            public DataCiteMetadata.Creators.Builder<TParentBuilder> addCreator(DataCiteMetadata.Creators.Creator... creator) {
                addCreator(Arrays.asList(creator));
                return this;
            }

            /**
             * Sets the new value of "creator" (any previous value will be replaced)
             * 
             * @param creator
             *     New value of the "creator" property.
             */
            public DataCiteMetadata.Creators.Builder<TParentBuilder> withCreator(DataCiteMetadata.Creators.Creator... creator) {
                withCreator(Arrays.asList(creator));
                return this;
            }

            /**
             * Returns a new builder to build an additional value of the "creator" property.
             * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Creators.Creator.Builder#end()} to return to the current builder.
             * 
             * @return
             *     a new builder to build an additional value of the "creator" property.
             *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Creators.Creator.Builder#end()} to return to the current builder.
             */
            public DataCiteMetadata.Creators.Creator.Builder<? extends DataCiteMetadata.Creators.Builder<TParentBuilder>> addCreator() {
                if (this.creator == null) {
                    this.creator = new ArrayList<DataCiteMetadata.Creators.Creator.Builder<DataCiteMetadata.Creators.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadata.Creators.Creator.Builder<DataCiteMetadata.Creators.Builder<TParentBuilder>> creatorBuilder = new DataCiteMetadata.Creators.Creator.Builder<DataCiteMetadata.Creators.Builder<TParentBuilder>>(this, null, false);
                this.creator.add(creatorBuilder);
                return creatorBuilder;
            }

            public DataCiteMetadata.Creators build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.Creators());
                } else {
                    return ((DataCiteMetadata.Creators) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;sequence>
         *         &lt;element name="creatorName">
         *           &lt;complexType>
         *             &lt;simpleContent>
         *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *                 &lt;attribute name="nameType" type="{http://datacite.org/schema/kernel-4}nameType" />
         *                 &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
         *               &lt;/extension>
         *             &lt;/simpleContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="givenName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
         *         &lt;element name="familyName" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
         *         &lt;element name="nameIdentifier" maxOccurs="unbounded" minOccurs="0">
         *           &lt;complexType>
         *             &lt;simpleContent>
         *               &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
         *                 &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *                 &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *               &lt;/extension>
         *             &lt;/simpleContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="affiliation" type="{http://www.w3.org/2001/XMLSchema}anyType" maxOccurs="unbounded" minOccurs="0"/>
         *       &lt;/sequence>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "creatorName",
            "givenName",
            "familyName",
            "nameIdentifier",
            "affiliation"
        })
        public static class Creator {

            @XmlElement(required = true)
            protected DataCiteMetadata.Creators.Creator.CreatorName creatorName;
            protected Object givenName;
            protected Object familyName;
            protected List<DataCiteMetadata.Creators.Creator.NameIdentifier> nameIdentifier;
            protected List<Object> affiliation;

            /**
             * Gets the value of the creatorName property.
             * 
             * @return
             *     possible object is
             *     {@link DataCiteMetadata.Creators.Creator.CreatorName }
             *     
             */
            public DataCiteMetadata.Creators.Creator.CreatorName getCreatorName() {
                return creatorName;
            }

            /**
             * Sets the value of the creatorName property.
             * 
             * @param value
             *     allowed object is
             *     {@link DataCiteMetadata.Creators.Creator.CreatorName }
             *     
             */
            public void setCreatorName(DataCiteMetadata.Creators.Creator.CreatorName value) {
                this.creatorName = value;
            }

            /**
             * Gets the value of the givenName property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            public Object getGivenName() {
                return givenName;
            }

            /**
             * Sets the value of the givenName property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setGivenName(Object value) {
                this.givenName = value;
            }

            /**
             * Gets the value of the familyName property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            public Object getFamilyName() {
                return familyName;
            }

            /**
             * Sets the value of the familyName property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setFamilyName(Object value) {
                this.familyName = value;
            }

            /**
             * Gets the value of the nameIdentifier property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the nameIdentifier property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getNameIdentifier().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link DataCiteMetadata.Creators.Creator.NameIdentifier }
             * 
             * 
             */
            public List<DataCiteMetadata.Creators.Creator.NameIdentifier> getNameIdentifier() {
                if (nameIdentifier == null) {
                    nameIdentifier = new ArrayList<DataCiteMetadata.Creators.Creator.NameIdentifier>();
                }
                return this.nameIdentifier;
            }

            /**
             * Gets the value of the affiliation property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the affiliation property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getAffiliation().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link Object }
             * 
             * 
             */
            public List<Object> getAffiliation() {
                if (affiliation == null) {
                    affiliation = new ArrayList<Object>();
                }
                return this.affiliation;
            }

            public static DataCiteMetadata.Creators.Creator.Builder<Void> builder() {
                return new DataCiteMetadata.Creators.Creator.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadata.Creators.Creator.Builder<Void> copyOf(final DataCiteMetadata.Creators.Creator _other) {
                return new DataCiteMetadata.Creators.Creator.Builder<Void>(null, _other, true);
            }

            public static DataCiteMetadata.Creators.Creator.Builder<Void> copyOf(final DataCiteMetadata.Creators.Creator _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                return new DataCiteMetadata.Creators.Creator.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
            }

            public static DataCiteMetadata.Creators.Creator.Builder<Void> copyExcept(final DataCiteMetadata.Creators.Creator _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadata.Creators.Creator.Builder<Void> copyOnly(final DataCiteMetadata.Creators.Creator _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("creatorName", creatorName).add("givenName", givenName).add("familyName", familyName).add("nameIdentifier", nameIdentifier).add("affiliation", affiliation).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(creatorName, givenName, familyName, nameIdentifier, affiliation);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadata.Creators.Creator o = ((DataCiteMetadata.Creators.Creator) other);
                return ((((Objects.equal(creatorName, o.creatorName)&&Objects.equal(givenName, o.givenName))&&Objects.equal(familyName, o.familyName))&&Objects.equal(nameIdentifier, o.nameIdentifier))&&Objects.equal(affiliation, o.affiliation));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadata.Creators.Creator _product;
                private DataCiteMetadata.Creators.Creator.CreatorName.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>> creatorName;
                private Object givenName;
                private Object familyName;
                private List<DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>>> nameIdentifier;
                private List<Object> affiliation;

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Creators.Creator _other, final boolean _copy) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        this.creatorName = ((_other.creatorName == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Creators.Creator.CreatorName.Builder.class, _other.creatorName, this, _other.creatorName, true));
                        this.givenName = _other.givenName;
                        this.familyName = _other.familyName;
                        if (_other.nameIdentifier == null) {
                            this.nameIdentifier = null;
                        } else {
                            this.nameIdentifier = new ArrayList<DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.Creators.Creator.NameIdentifier _item: _other.nameIdentifier) {
                                this.nameIdentifier.add(((_other.nameIdentifier == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Creators.Creator.NameIdentifier.Builder.class, _item, this, _item, true)));
                            }
                        }
                        this.affiliation = ((_other.affiliation == null)?null:new ArrayList<Object>(_other.affiliation));
                    } else {
                        this._product = _other;
                    }
                }

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Creators.Creator _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        final PropertyTree creatorNamePropertyTree = ((propertyTree == null)?null:propertyTree.get("creatorName"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(creatorNamePropertyTree!= null):((creatorNamePropertyTree == null)||(!creatorNamePropertyTree.isLeaf())))) {
                            this.creatorName = ((_other.creatorName == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Creators.Creator.CreatorName.Builder.class, _other.creatorName, this, _other.creatorName, true, creatorNamePropertyTree, treeUse));
                        }
                        final PropertyTree givenNamePropertyTree = ((propertyTree == null)?null:propertyTree.get("givenName"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(givenNamePropertyTree!= null):((givenNamePropertyTree == null)||(!givenNamePropertyTree.isLeaf())))) {
                            this.givenName = _other.givenName;
                        }
                        final PropertyTree familyNamePropertyTree = ((propertyTree == null)?null:propertyTree.get("familyName"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(familyNamePropertyTree!= null):((familyNamePropertyTree == null)||(!familyNamePropertyTree.isLeaf())))) {
                            this.familyName = _other.familyName;
                        }
                        final PropertyTree nameIdentifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("nameIdentifier"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(nameIdentifierPropertyTree!= null):((nameIdentifierPropertyTree == null)||(!nameIdentifierPropertyTree.isLeaf())))) {
                            if (_other.nameIdentifier == null) {
                                this.nameIdentifier = null;
                            } else {
                                this.nameIdentifier = new ArrayList<DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>>>();
                                for (DataCiteMetadata.Creators.Creator.NameIdentifier _item: _other.nameIdentifier) {
                                    this.nameIdentifier.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Creators.Creator.NameIdentifier.Builder.class, _item, this, _item, true, nameIdentifierPropertyTree, treeUse)));
                                }
                            }
                        }
                        final PropertyTree affiliationPropertyTree = ((propertyTree == null)?null:propertyTree.get("affiliation"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(affiliationPropertyTree!= null):((affiliationPropertyTree == null)||(!affiliationPropertyTree.isLeaf())))) {
                            this.affiliation = ((_other.affiliation == null)?null:new ArrayList<Object>(_other.affiliation));
                        }
                    } else {
                        this._product = _other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadata.Creators.Creator >P init(final P product) {
                    product.creatorName = ((this.creatorName == null)?null:this.creatorName.build());
                    product.givenName = this.givenName;
                    product.familyName = this.familyName;
                    if (this.nameIdentifier!= null) {
                        final List<DataCiteMetadata.Creators.Creator.NameIdentifier> nameIdentifier = new ArrayList<DataCiteMetadata.Creators.Creator.NameIdentifier>(this.nameIdentifier.size());
                        for (DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>> _item: this.nameIdentifier) {
                            nameIdentifier.add(_item.build());
                        }
                        product.nameIdentifier = nameIdentifier;
                    }
                    product.affiliation = this.affiliation;
                    return product;
                }

                /**
                 * Sets the new value of "creatorName" (any previous value will be replaced)
                 * 
                 * @param creatorName
                 *     New value of the "creatorName" property.
                 */
                public DataCiteMetadata.Creators.Creator.Builder<TParentBuilder> withCreatorName(final DataCiteMetadata.Creators.Creator.CreatorName creatorName) {
                    this.creatorName = ((creatorName == null)?null:new DataCiteMetadata.Creators.Creator.CreatorName.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>>(this, creatorName, false));
                    return this;
                }

                /**
                 * Returns a new builder to build the value of the "creatorName" property (replacing previous value).
                 * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Creators.Creator.CreatorName.Builder#end()} to return to the current builder.
                 * 
                 * @return
                 *     A new builder to build the value of the "creatorName" property.
                 *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Creators.Creator.CreatorName.Builder#end()} to return to the current builder.
                 */
                public DataCiteMetadata.Creators.Creator.CreatorName.Builder<? extends DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>> withCreatorName() {
                    return this.creatorName = new DataCiteMetadata.Creators.Creator.CreatorName.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>>(this, null, false);
                }

                /**
                 * Sets the new value of "givenName" (any previous value will be replaced)
                 * 
                 * @param givenName
                 *     New value of the "givenName" property.
                 */
                public DataCiteMetadata.Creators.Creator.Builder<TParentBuilder> withGivenName(final Object givenName) {
                    this.givenName = givenName;
                    return this;
                }

                /**
                 * Sets the new value of "familyName" (any previous value will be replaced)
                 * 
                 * @param familyName
                 *     New value of the "familyName" property.
                 */
                public DataCiteMetadata.Creators.Creator.Builder<TParentBuilder> withFamilyName(final Object familyName) {
                    this.familyName = familyName;
                    return this;
                }

                /**
                 * Adds the given items to the value of "nameIdentifier"
                 * 
                 * @param nameIdentifier
                 *     Items to add to the value of the "nameIdentifier" property
                 */
                public DataCiteMetadata.Creators.Creator.Builder<TParentBuilder> addNameIdentifier(final Collection<? extends DataCiteMetadata.Creators.Creator.NameIdentifier> nameIdentifier) {
                    if (this.nameIdentifier == null) {
                        this.nameIdentifier = new ArrayList<DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>>>();
                    }
                    for (DataCiteMetadata.Creators.Creator.NameIdentifier _item: nameIdentifier) {
                        this.nameIdentifier.add(new DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>>(this, _item, false));
                    }
                    return this;
                }

                /**
                 * Sets the new value of "nameIdentifier" (any previous value will be replaced)
                 * 
                 * @param nameIdentifier
                 *     New value of the "nameIdentifier" property.
                 */
                public DataCiteMetadata.Creators.Creator.Builder<TParentBuilder> withNameIdentifier(final Collection<? extends DataCiteMetadata.Creators.Creator.NameIdentifier> nameIdentifier) {
                    if (this.nameIdentifier!= null) {
                        this.nameIdentifier.clear();
                    }
                    return addNameIdentifier(nameIdentifier);
                }

                /**
                 * Adds the given items to the value of "nameIdentifier"
                 * 
                 * @param nameIdentifier
                 *     Items to add to the value of the "nameIdentifier" property
                 */
                public DataCiteMetadata.Creators.Creator.Builder<TParentBuilder> addNameIdentifier(DataCiteMetadata.Creators.Creator.NameIdentifier... nameIdentifier) {
                    addNameIdentifier(Arrays.asList(nameIdentifier));
                    return this;
                }

                /**
                 * Sets the new value of "nameIdentifier" (any previous value will be replaced)
                 * 
                 * @param nameIdentifier
                 *     New value of the "nameIdentifier" property.
                 */
                public DataCiteMetadata.Creators.Creator.Builder<TParentBuilder> withNameIdentifier(DataCiteMetadata.Creators.Creator.NameIdentifier... nameIdentifier) {
                    withNameIdentifier(Arrays.asList(nameIdentifier));
                    return this;
                }

                /**
                 * Returns a new builder to build an additional value of the "nameIdentifier" property.
                 * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Creators.Creator.NameIdentifier.Builder#end()} to return to the current builder.
                 * 
                 * @return
                 *     a new builder to build an additional value of the "nameIdentifier" property.
                 *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Creators.Creator.NameIdentifier.Builder#end()} to return to the current builder.
                 */
                public DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<? extends DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>> addNameIdentifier() {
                    if (this.nameIdentifier == null) {
                        this.nameIdentifier = new ArrayList<DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>>>();
                    }
                    final DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>> nameIdentifierBuilder = new DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<DataCiteMetadata.Creators.Creator.Builder<TParentBuilder>>(this, null, false);
                    this.nameIdentifier.add(nameIdentifierBuilder);
                    return nameIdentifierBuilder;
                }

                /**
                 * Adds the given items to the value of "affiliation"
                 * 
                 * @param affiliation
                 *     Items to add to the value of the "affiliation" property
                 */
                public DataCiteMetadata.Creators.Creator.Builder<TParentBuilder> addAffiliation(final Collection<?> affiliation) {
                    if (this.affiliation == null) {
                        this.affiliation = new ArrayList<Object>();
                    }
                    this.affiliation.addAll(affiliation);
                    return this;
                }

                /**
                 * Sets the new value of "affiliation" (any previous value will be replaced)
                 * 
                 * @param affiliation
                 *     New value of the "affiliation" property.
                 */
                public DataCiteMetadata.Creators.Creator.Builder<TParentBuilder> withAffiliation(final Collection<?> affiliation) {
                    if (this.affiliation!= null) {
                        this.affiliation.clear();
                    }
                    return addAffiliation(affiliation);
                }

                /**
                 * Adds the given items to the value of "affiliation"
                 * 
                 * @param affiliation
                 *     Items to add to the value of the "affiliation" property
                 */
                public DataCiteMetadata.Creators.Creator.Builder<TParentBuilder> addAffiliation(Object... affiliation) {
                    addAffiliation(Arrays.asList(affiliation));
                    return this;
                }

                /**
                 * Sets the new value of "affiliation" (any previous value will be replaced)
                 * 
                 * @param affiliation
                 *     New value of the "affiliation" property.
                 */
                public DataCiteMetadata.Creators.Creator.Builder<TParentBuilder> withAffiliation(Object... affiliation) {
                    withAffiliation(Arrays.asList(affiliation));
                    return this;
                }

                public DataCiteMetadata.Creators.Creator build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadata.Creators.Creator());
                    } else {
                        return ((DataCiteMetadata.Creators.Creator) this._product);
                    }
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;simpleContent>
             *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
             *       &lt;attribute name="nameType" type="{http://datacite.org/schema/kernel-4}nameType" />
             *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
             *     &lt;/extension>
             *   &lt;/simpleContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "value"
            })
            public static class CreatorName {

                @XmlValue
                protected String value;
                @XmlAttribute(name = "nameType")
                protected NameType nameType;
                @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
                protected String lang;

                /**
                 * Gets the value of the value property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getValue() {
                    return value;
                }

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setValue(String value) {
                    this.value = value;
                }

                /**
                 * Gets the value of the nameType property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link NameType }
                 *     
                 */
                public NameType getNameType() {
                    return nameType;
                }

                /**
                 * Sets the value of the nameType property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link NameType }
                 *     
                 */
                public void setNameType(NameType value) {
                    this.nameType = value;
                }

                /**
                 * Gets the value of the lang property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getLang() {
                    return lang;
                }

                /**
                 * Sets the value of the lang property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setLang(String value) {
                    this.lang = value;
                }

                public static DataCiteMetadata.Creators.Creator.CreatorName.Builder<Void> builder() {
                    return new DataCiteMetadata.Creators.Creator.CreatorName.Builder<Void>(null, null, false);
                }

                public static DataCiteMetadata.Creators.Creator.CreatorName.Builder<Void> copyOf(final DataCiteMetadata.Creators.Creator.CreatorName _other) {
                    return new DataCiteMetadata.Creators.Creator.CreatorName.Builder<Void>(null, _other, true);
                }

                public static DataCiteMetadata.Creators.Creator.CreatorName.Builder<Void> copyOf(final DataCiteMetadata.Creators.Creator.CreatorName _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                    return new DataCiteMetadata.Creators.Creator.CreatorName.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
                }

                public static DataCiteMetadata.Creators.Creator.CreatorName.Builder<Void> copyExcept(final DataCiteMetadata.Creators.Creator.CreatorName _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
                }

                public static DataCiteMetadata.Creators.Creator.CreatorName.Builder<Void> copyOnly(final DataCiteMetadata.Creators.Creator.CreatorName _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
                }

                @Override
                public String toString() {
                    return Objects.toStringHelper(this).add("value", value).add("nameType", nameType).add("lang", lang).toString();
                }

                @Override
                public int hashCode() {
                    return Objects.hashCode(value, nameType, lang);
                }

                @Override
                public boolean equals(Object other) {
                    if (this == other) {
                        return true;
                    }
                    if (other == null) {
                        return false;
                    }
                    if (getClass()!= other.getClass()) {
                        return false;
                    }
                    final DataCiteMetadata.Creators.Creator.CreatorName o = ((DataCiteMetadata.Creators.Creator.CreatorName) other);
                    return ((Objects.equal(value, o.value)&&Objects.equal(nameType, o.nameType))&&Objects.equal(lang, o.lang));
                }

                public static class Builder<TParentBuilder >{

                    protected final TParentBuilder _parentBuilder;
                    protected final DataCiteMetadata.Creators.Creator.CreatorName _product;
                    private String value;
                    private NameType nameType;
                    private String lang;

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Creators.Creator.CreatorName _other, final boolean _copy) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            this.value = _other.value;
                            this.nameType = _other.nameType;
                            this.lang = _other.lang;
                        } else {
                            this._product = _other;
                        }
                    }

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Creators.Creator.CreatorName _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                                this.value = _other.value;
                            }
                            final PropertyTree nameTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("nameType"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(nameTypePropertyTree!= null):((nameTypePropertyTree == null)||(!nameTypePropertyTree.isLeaf())))) {
                                this.nameType = _other.nameType;
                            }
                            final PropertyTree langPropertyTree = ((propertyTree == null)?null:propertyTree.get("lang"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(langPropertyTree!= null):((langPropertyTree == null)||(!langPropertyTree.isLeaf())))) {
                                this.lang = _other.lang;
                            }
                        } else {
                            this._product = _other;
                        }
                    }

                    public TParentBuilder end() {
                        return this._parentBuilder;
                    }

                    protected<P extends DataCiteMetadata.Creators.Creator.CreatorName >P init(final P product) {
                        product.value = this.value;
                        product.nameType = this.nameType;
                        product.lang = this.lang;
                        return product;
                    }

                    /**
                     * Sets the new value of "value" (any previous value will be replaced)
                     * 
                     * @param value
                     *     New value of the "value" property.
                     */
                    public DataCiteMetadata.Creators.Creator.CreatorName.Builder<TParentBuilder> withValue(final String value) {
                        this.value = value;
                        return this;
                    }

                    /**
                     * Sets the new value of "nameType" (any previous value will be replaced)
                     * 
                     * @param nameType
                     *     New value of the "nameType" property.
                     */
                    public DataCiteMetadata.Creators.Creator.CreatorName.Builder<TParentBuilder> withNameType(final NameType nameType) {
                        this.nameType = nameType;
                        return this;
                    }

                    /**
                     * Sets the new value of "lang" (any previous value will be replaced)
                     * 
                     * @param lang
                     *     New value of the "lang" property.
                     */
                    public DataCiteMetadata.Creators.Creator.CreatorName.Builder<TParentBuilder> withLang(final String lang) {
                        this.lang = lang;
                        return this;
                    }

                    public DataCiteMetadata.Creators.Creator.CreatorName build() {
                        if (this._product == null) {
                            return this.init(new DataCiteMetadata.Creators.Creator.CreatorName());
                        } else {
                            return ((DataCiteMetadata.Creators.Creator.CreatorName) this._product);
                        }
                    }

                }

                public static class Select
                    extends DataCiteMetadata.Creators.Creator.CreatorName.Selector<DataCiteMetadata.Creators.Creator.CreatorName.Select, Void>
                {


                    Select() {
                        super(null, null, null);
                    }

                    public static DataCiteMetadata.Creators.Creator.CreatorName.Select _root() {
                        return new DataCiteMetadata.Creators.Creator.CreatorName.Select();
                    }

                }

                public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                    extends com.kscs.util.jaxb.Selector<TRoot, TParent>
                {

                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, TParent>> value = null;
                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, TParent>> nameType = null;
                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, TParent>> lang = null;

                    public Selector(final TRoot root, final TParent parent, final String propertyName) {
                        super(root, parent, propertyName);
                    }

                    @Override
                    public Map<String, PropertyTree> buildChildren() {
                        final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                        products.putAll(super.buildChildren());
                        if (this.value!= null) {
                            products.put("value", this.value.init());
                        }
                        if (this.nameType!= null) {
                            products.put("nameType", this.nameType.init());
                        }
                        if (this.lang!= null) {
                            products.put("lang", this.lang.init());
                        }
                        return products;
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, TParent>> value() {
                        return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, TParent>> nameType() {
                        return ((this.nameType == null)?this.nameType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, TParent>>(this._root, this, "nameType"):this.nameType);
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, TParent>> lang() {
                        return ((this.lang == null)?this.lang = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, TParent>>(this._root, this, "lang"):this.lang);
                    }

                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;simpleContent>
             *     &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
             *       &lt;attribute name="nameIdentifierScheme" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
             *       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
             *     &lt;/extension>
             *   &lt;/simpleContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "value"
            })
            public static class NameIdentifier {

                @XmlValue
                protected String value;
                @XmlAttribute(name = "nameIdentifierScheme", required = true)
                @XmlSchemaType(name = "anySimpleType")
                protected String nameIdentifierScheme;
                @XmlAttribute(name = "schemeURI")
                @XmlSchemaType(name = "anyURI")
                protected String schemeURI;

                /**
                 * Gets the value of the value property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getValue() {
                    return value;
                }

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setValue(String value) {
                    this.value = value;
                }

                /**
                 * Gets the value of the nameIdentifierScheme property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getNameIdentifierScheme() {
                    return nameIdentifierScheme;
                }

                /**
                 * Sets the value of the nameIdentifierScheme property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setNameIdentifierScheme(String value) {
                    this.nameIdentifierScheme = value;
                }

                /**
                 * Gets the value of the schemeURI property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getSchemeURI() {
                    return schemeURI;
                }

                /**
                 * Sets the value of the schemeURI property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setSchemeURI(String value) {
                    this.schemeURI = value;
                }

                public static DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<Void> builder() {
                    return new DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<Void>(null, null, false);
                }

                public static DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<Void> copyOf(final DataCiteMetadata.Creators.Creator.NameIdentifier _other) {
                    return new DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<Void>(null, _other, true);
                }

                public static DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<Void> copyOf(final DataCiteMetadata.Creators.Creator.NameIdentifier _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                    return new DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
                }

                public static DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<Void> copyExcept(final DataCiteMetadata.Creators.Creator.NameIdentifier _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
                }

                public static DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<Void> copyOnly(final DataCiteMetadata.Creators.Creator.NameIdentifier _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
                }

                @Override
                public String toString() {
                    return Objects.toStringHelper(this).add("value", value).add("nameIdentifierScheme", nameIdentifierScheme).add("schemeURI", schemeURI).toString();
                }

                @Override
                public int hashCode() {
                    return Objects.hashCode(value, nameIdentifierScheme, schemeURI);
                }

                @Override
                public boolean equals(Object other) {
                    if (this == other) {
                        return true;
                    }
                    if (other == null) {
                        return false;
                    }
                    if (getClass()!= other.getClass()) {
                        return false;
                    }
                    final DataCiteMetadata.Creators.Creator.NameIdentifier o = ((DataCiteMetadata.Creators.Creator.NameIdentifier) other);
                    return ((Objects.equal(value, o.value)&&Objects.equal(nameIdentifierScheme, o.nameIdentifierScheme))&&Objects.equal(schemeURI, o.schemeURI));
                }

                public static class Builder<TParentBuilder >{

                    protected final TParentBuilder _parentBuilder;
                    protected final DataCiteMetadata.Creators.Creator.NameIdentifier _product;
                    private String value;
                    private String nameIdentifierScheme;
                    private String schemeURI;

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Creators.Creator.NameIdentifier _other, final boolean _copy) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            this.value = _other.value;
                            this.nameIdentifierScheme = _other.nameIdentifierScheme;
                            this.schemeURI = _other.schemeURI;
                        } else {
                            this._product = _other;
                        }
                    }

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Creators.Creator.NameIdentifier _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                                this.value = _other.value;
                            }
                            final PropertyTree nameIdentifierSchemePropertyTree = ((propertyTree == null)?null:propertyTree.get("nameIdentifierScheme"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(nameIdentifierSchemePropertyTree!= null):((nameIdentifierSchemePropertyTree == null)||(!nameIdentifierSchemePropertyTree.isLeaf())))) {
                                this.nameIdentifierScheme = _other.nameIdentifierScheme;
                            }
                            final PropertyTree schemeURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("schemeURI"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(schemeURIPropertyTree!= null):((schemeURIPropertyTree == null)||(!schemeURIPropertyTree.isLeaf())))) {
                                this.schemeURI = _other.schemeURI;
                            }
                        } else {
                            this._product = _other;
                        }
                    }

                    public TParentBuilder end() {
                        return this._parentBuilder;
                    }

                    protected<P extends DataCiteMetadata.Creators.Creator.NameIdentifier >P init(final P product) {
                        product.value = this.value;
                        product.nameIdentifierScheme = this.nameIdentifierScheme;
                        product.schemeURI = this.schemeURI;
                        return product;
                    }

                    /**
                     * Sets the new value of "value" (any previous value will be replaced)
                     * 
                     * @param value
                     *     New value of the "value" property.
                     */
                    public DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<TParentBuilder> withValue(final String value) {
                        this.value = value;
                        return this;
                    }

                    /**
                     * Sets the new value of "nameIdentifierScheme" (any previous value will be replaced)
                     * 
                     * @param nameIdentifierScheme
                     *     New value of the "nameIdentifierScheme" property.
                     */
                    public DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<TParentBuilder> withNameIdentifierScheme(final String nameIdentifierScheme) {
                        this.nameIdentifierScheme = nameIdentifierScheme;
                        return this;
                    }

                    /**
                     * Sets the new value of "schemeURI" (any previous value will be replaced)
                     * 
                     * @param schemeURI
                     *     New value of the "schemeURI" property.
                     */
                    public DataCiteMetadata.Creators.Creator.NameIdentifier.Builder<TParentBuilder> withSchemeURI(final String schemeURI) {
                        this.schemeURI = schemeURI;
                        return this;
                    }

                    public DataCiteMetadata.Creators.Creator.NameIdentifier build() {
                        if (this._product == null) {
                            return this.init(new DataCiteMetadata.Creators.Creator.NameIdentifier());
                        } else {
                            return ((DataCiteMetadata.Creators.Creator.NameIdentifier) this._product);
                        }
                    }

                }

                public static class Select
                    extends DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<DataCiteMetadata.Creators.Creator.NameIdentifier.Select, Void>
                {


                    Select() {
                        super(null, null, null);
                    }

                    public static DataCiteMetadata.Creators.Creator.NameIdentifier.Select _root() {
                        return new DataCiteMetadata.Creators.Creator.NameIdentifier.Select();
                    }

                }

                public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                    extends com.kscs.util.jaxb.Selector<TRoot, TParent>
                {

                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, TParent>> value = null;
                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, TParent>> nameIdentifierScheme = null;
                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, TParent>> schemeURI = null;

                    public Selector(final TRoot root, final TParent parent, final String propertyName) {
                        super(root, parent, propertyName);
                    }

                    @Override
                    public Map<String, PropertyTree> buildChildren() {
                        final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                        products.putAll(super.buildChildren());
                        if (this.value!= null) {
                            products.put("value", this.value.init());
                        }
                        if (this.nameIdentifierScheme!= null) {
                            products.put("nameIdentifierScheme", this.nameIdentifierScheme.init());
                        }
                        if (this.schemeURI!= null) {
                            products.put("schemeURI", this.schemeURI.init());
                        }
                        return products;
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, TParent>> value() {
                        return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, TParent>> nameIdentifierScheme() {
                        return ((this.nameIdentifierScheme == null)?this.nameIdentifierScheme = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, TParent>>(this._root, this, "nameIdentifierScheme"):this.nameIdentifierScheme);
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, TParent>> schemeURI() {
                        return ((this.schemeURI == null)?this.schemeURI = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, TParent>>(this._root, this, "schemeURI"):this.schemeURI);
                    }

                }

            }

            public static class Select
                extends DataCiteMetadata.Creators.Creator.Selector<DataCiteMetadata.Creators.Creator.Select, Void>
            {


                Select() {
                    super(null, null, null);
                }

                public static DataCiteMetadata.Creators.Creator.Select _root() {
                    return new DataCiteMetadata.Creators.Creator.Select();
                }

            }

            public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                extends com.kscs.util.jaxb.Selector<TRoot, TParent>
            {

                private DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>> creatorName = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>> givenName = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>> familyName = null;
                private DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>> nameIdentifier = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>> affiliation = null;

                public Selector(final TRoot root, final TParent parent, final String propertyName) {
                    super(root, parent, propertyName);
                }

                @Override
                public Map<String, PropertyTree> buildChildren() {
                    final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                    products.putAll(super.buildChildren());
                    if (this.creatorName!= null) {
                        products.put("creatorName", this.creatorName.init());
                    }
                    if (this.givenName!= null) {
                        products.put("givenName", this.givenName.init());
                    }
                    if (this.familyName!= null) {
                        products.put("familyName", this.familyName.init());
                    }
                    if (this.nameIdentifier!= null) {
                        products.put("nameIdentifier", this.nameIdentifier.init());
                    }
                    if (this.affiliation!= null) {
                        products.put("affiliation", this.affiliation.init());
                    }
                    return products;
                }

                public DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>> creatorName() {
                    return ((this.creatorName == null)?this.creatorName = new DataCiteMetadata.Creators.Creator.CreatorName.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>>(this._root, this, "creatorName"):this.creatorName);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>> givenName() {
                    return ((this.givenName == null)?this.givenName = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>>(this._root, this, "givenName"):this.givenName);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>> familyName() {
                    return ((this.familyName == null)?this.familyName = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>>(this._root, this, "familyName"):this.familyName);
                }

                public DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>> nameIdentifier() {
                    return ((this.nameIdentifier == null)?this.nameIdentifier = new DataCiteMetadata.Creators.Creator.NameIdentifier.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>>(this._root, this, "nameIdentifier"):this.nameIdentifier);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>> affiliation() {
                    return ((this.affiliation == null)?this.affiliation = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Creators.Creator.Selector<TRoot, TParent>>(this._root, this, "affiliation"):this.affiliation);
                }

            }

        }

        public static class Select
            extends DataCiteMetadata.Creators.Selector<DataCiteMetadata.Creators.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.Creators.Select _root() {
                return new DataCiteMetadata.Creators.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private DataCiteMetadata.Creators.Creator.Selector<TRoot, DataCiteMetadata.Creators.Selector<TRoot, TParent>> creator = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.creator!= null) {
                    products.put("creator", this.creator.init());
                }
                return products;
            }

            public DataCiteMetadata.Creators.Creator.Selector<TRoot, DataCiteMetadata.Creators.Selector<TRoot, TParent>> creator() {
                return ((this.creator == null)?this.creator = new DataCiteMetadata.Creators.Creator.Selector<TRoot, DataCiteMetadata.Creators.Selector<TRoot, TParent>>(this._root, this, "creator"):this.creator);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="date" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="dateType" use="required" type="{http://datacite.org/schema/kernel-4}dateType" />
     *                 &lt;attribute name="dateInformation" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "date"
    })
    public static class Dates {

        protected List<DataCiteMetadata.Dates.Date> date;

        /**
         * Gets the value of the date property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the date property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getDate().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DataCiteMetadata.Dates.Date }
         * 
         * 
         */
        public List<DataCiteMetadata.Dates.Date> getDate() {
            if (date == null) {
                date = new ArrayList<DataCiteMetadata.Dates.Date>();
            }
            return this.date;
        }

        public static DataCiteMetadata.Dates.Builder<Void> builder() {
            return new DataCiteMetadata.Dates.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.Dates.Builder<Void> copyOf(final DataCiteMetadata.Dates _other) {
            return new DataCiteMetadata.Dates.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.Dates.Builder<Void> copyOf(final DataCiteMetadata.Dates _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.Dates.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.Dates.Builder<Void> copyExcept(final DataCiteMetadata.Dates _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.Dates.Builder<Void> copyOnly(final DataCiteMetadata.Dates _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("date", date).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(date);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.Dates o = ((DataCiteMetadata.Dates) other);
            return Objects.equal(date, o.date);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.Dates _product;
            private List<DataCiteMetadata.Dates.Date.Builder<DataCiteMetadata.Dates.Builder<TParentBuilder>>> date;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Dates _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    if (_other.date == null) {
                        this.date = null;
                    } else {
                        this.date = new ArrayList<DataCiteMetadata.Dates.Date.Builder<DataCiteMetadata.Dates.Builder<TParentBuilder>>>();
                        for (DataCiteMetadata.Dates.Date _item: _other.date) {
                            this.date.add(((_other.date == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Dates.Date.Builder.class, _item, this, _item, true)));
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Dates _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree datePropertyTree = ((propertyTree == null)?null:propertyTree.get("date"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(datePropertyTree!= null):((datePropertyTree == null)||(!datePropertyTree.isLeaf())))) {
                        if (_other.date == null) {
                            this.date = null;
                        } else {
                            this.date = new ArrayList<DataCiteMetadata.Dates.Date.Builder<DataCiteMetadata.Dates.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.Dates.Date _item: _other.date) {
                                this.date.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Dates.Date.Builder.class, _item, this, _item, true, datePropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.Dates >P init(final P product) {
                if (this.date!= null) {
                    final List<DataCiteMetadata.Dates.Date> date = new ArrayList<DataCiteMetadata.Dates.Date>(this.date.size());
                    for (DataCiteMetadata.Dates.Date.Builder<DataCiteMetadata.Dates.Builder<TParentBuilder>> _item: this.date) {
                        date.add(_item.build());
                    }
                    product.date = date;
                }
                return product;
            }

            /**
             * Adds the given items to the value of "date"
             * 
             * @param date
             *     Items to add to the value of the "date" property
             */
            public DataCiteMetadata.Dates.Builder<TParentBuilder> addDate(final Collection<? extends DataCiteMetadata.Dates.Date> date) {
                if (this.date == null) {
                    this.date = new ArrayList<DataCiteMetadata.Dates.Date.Builder<DataCiteMetadata.Dates.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadata.Dates.Date _item: date) {
                    this.date.add(new DataCiteMetadata.Dates.Date.Builder<DataCiteMetadata.Dates.Builder<TParentBuilder>>(this, _item, false));
                }
                return this;
            }

            /**
             * Sets the new value of "date" (any previous value will be replaced)
             * 
             * @param date
             *     New value of the "date" property.
             */
            public DataCiteMetadata.Dates.Builder<TParentBuilder> withDate(final Collection<? extends DataCiteMetadata.Dates.Date> date) {
                if (this.date!= null) {
                    this.date.clear();
                }
                return addDate(date);
            }

            /**
             * Adds the given items to the value of "date"
             * 
             * @param date
             *     Items to add to the value of the "date" property
             */
            public DataCiteMetadata.Dates.Builder<TParentBuilder> addDate(DataCiteMetadata.Dates.Date... date) {
                addDate(Arrays.asList(date));
                return this;
            }

            /**
             * Sets the new value of "date" (any previous value will be replaced)
             * 
             * @param date
             *     New value of the "date" property.
             */
            public DataCiteMetadata.Dates.Builder<TParentBuilder> withDate(DataCiteMetadata.Dates.Date... date) {
                withDate(Arrays.asList(date));
                return this;
            }

            /**
             * Returns a new builder to build an additional value of the "date" property.
             * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Dates.Date.Builder#end()} to return to the current builder.
             * 
             * @return
             *     a new builder to build an additional value of the "date" property.
             *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Dates.Date.Builder#end()} to return to the current builder.
             */
            public DataCiteMetadata.Dates.Date.Builder<? extends DataCiteMetadata.Dates.Builder<TParentBuilder>> addDate() {
                if (this.date == null) {
                    this.date = new ArrayList<DataCiteMetadata.Dates.Date.Builder<DataCiteMetadata.Dates.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadata.Dates.Date.Builder<DataCiteMetadata.Dates.Builder<TParentBuilder>> dateBuilder = new DataCiteMetadata.Dates.Date.Builder<DataCiteMetadata.Dates.Builder<TParentBuilder>>(this, null, false);
                this.date.add(dateBuilder);
                return dateBuilder;
            }

            public DataCiteMetadata.Dates build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.Dates());
                } else {
                    return ((DataCiteMetadata.Dates) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="dateType" use="required" type="{http://datacite.org/schema/kernel-4}dateType" />
         *       &lt;attribute name="dateInformation" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Date {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "dateType", required = true)
            protected DateType dateType;
            @XmlAttribute(name = "dateInformation")
            @XmlSchemaType(name = "anySimpleType")
            protected String dateInformation;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the dateType property.
             * 
             * @return
             *     possible object is
             *     {@link DateType }
             *     
             */
            public DateType getDateType() {
                return dateType;
            }

            /**
             * Sets the value of the dateType property.
             * 
             * @param value
             *     allowed object is
             *     {@link DateType }
             *     
             */
            public void setDateType(DateType value) {
                this.dateType = value;
            }

            /**
             * Gets the value of the dateInformation property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getDateInformation() {
                return dateInformation;
            }

            /**
             * Sets the value of the dateInformation property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setDateInformation(String value) {
                this.dateInformation = value;
            }

            public static DataCiteMetadata.Dates.Date.Builder<Void> builder() {
                return new DataCiteMetadata.Dates.Date.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadata.Dates.Date.Builder<Void> copyOf(final DataCiteMetadata.Dates.Date _other) {
                return new DataCiteMetadata.Dates.Date.Builder<Void>(null, _other, true);
            }

            public static DataCiteMetadata.Dates.Date.Builder<Void> copyOf(final DataCiteMetadata.Dates.Date _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                return new DataCiteMetadata.Dates.Date.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
            }

            public static DataCiteMetadata.Dates.Date.Builder<Void> copyExcept(final DataCiteMetadata.Dates.Date _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadata.Dates.Date.Builder<Void> copyOnly(final DataCiteMetadata.Dates.Date _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("dateType", dateType).add("dateInformation", dateInformation).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, dateType, dateInformation);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadata.Dates.Date o = ((DataCiteMetadata.Dates.Date) other);
                return ((Objects.equal(value, o.value)&&Objects.equal(dateType, o.dateType))&&Objects.equal(dateInformation, o.dateInformation));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadata.Dates.Date _product;
                private String value;
                private DateType dateType;
                private String dateInformation;

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Dates.Date _other, final boolean _copy) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        this.value = _other.value;
                        this.dateType = _other.dateType;
                        this.dateInformation = _other.dateInformation;
                    } else {
                        this._product = _other;
                    }
                }

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Dates.Date _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = _other.value;
                        }
                        final PropertyTree dateTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("dateType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(dateTypePropertyTree!= null):((dateTypePropertyTree == null)||(!dateTypePropertyTree.isLeaf())))) {
                            this.dateType = _other.dateType;
                        }
                        final PropertyTree dateInformationPropertyTree = ((propertyTree == null)?null:propertyTree.get("dateInformation"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(dateInformationPropertyTree!= null):((dateInformationPropertyTree == null)||(!dateInformationPropertyTree.isLeaf())))) {
                            this.dateInformation = _other.dateInformation;
                        }
                    } else {
                        this._product = _other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadata.Dates.Date >P init(final P product) {
                    product.value = this.value;
                    product.dateType = this.dateType;
                    product.dateInformation = this.dateInformation;
                    return product;
                }

                /**
                 * Sets the new value of "value" (any previous value will be replaced)
                 * 
                 * @param value
                 *     New value of the "value" property.
                 */
                public DataCiteMetadata.Dates.Date.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                /**
                 * Sets the new value of "dateType" (any previous value will be replaced)
                 * 
                 * @param dateType
                 *     New value of the "dateType" property.
                 */
                public DataCiteMetadata.Dates.Date.Builder<TParentBuilder> withDateType(final DateType dateType) {
                    this.dateType = dateType;
                    return this;
                }

                /**
                 * Sets the new value of "dateInformation" (any previous value will be replaced)
                 * 
                 * @param dateInformation
                 *     New value of the "dateInformation" property.
                 */
                public DataCiteMetadata.Dates.Date.Builder<TParentBuilder> withDateInformation(final String dateInformation) {
                    this.dateInformation = dateInformation;
                    return this;
                }

                public DataCiteMetadata.Dates.Date build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadata.Dates.Date());
                    } else {
                        return ((DataCiteMetadata.Dates.Date) this._product);
                    }
                }

            }

            public static class Select
                extends DataCiteMetadata.Dates.Date.Selector<DataCiteMetadata.Dates.Date.Select, Void>
            {


                Select() {
                    super(null, null, null);
                }

                public static DataCiteMetadata.Dates.Date.Select _root() {
                    return new DataCiteMetadata.Dates.Date.Select();
                }

            }

            public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                extends com.kscs.util.jaxb.Selector<TRoot, TParent>
            {

                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Dates.Date.Selector<TRoot, TParent>> value = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Dates.Date.Selector<TRoot, TParent>> dateType = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Dates.Date.Selector<TRoot, TParent>> dateInformation = null;

                public Selector(final TRoot root, final TParent parent, final String propertyName) {
                    super(root, parent, propertyName);
                }

                @Override
                public Map<String, PropertyTree> buildChildren() {
                    final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                    products.putAll(super.buildChildren());
                    if (this.value!= null) {
                        products.put("value", this.value.init());
                    }
                    if (this.dateType!= null) {
                        products.put("dateType", this.dateType.init());
                    }
                    if (this.dateInformation!= null) {
                        products.put("dateInformation", this.dateInformation.init());
                    }
                    return products;
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Dates.Date.Selector<TRoot, TParent>> value() {
                    return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Dates.Date.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Dates.Date.Selector<TRoot, TParent>> dateType() {
                    return ((this.dateType == null)?this.dateType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Dates.Date.Selector<TRoot, TParent>>(this._root, this, "dateType"):this.dateType);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Dates.Date.Selector<TRoot, TParent>> dateInformation() {
                    return ((this.dateInformation == null)?this.dateInformation = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Dates.Date.Selector<TRoot, TParent>>(this._root, this, "dateInformation"):this.dateInformation);
                }

            }

        }

        public static class Select
            extends DataCiteMetadata.Dates.Selector<DataCiteMetadata.Dates.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.Dates.Select _root() {
                return new DataCiteMetadata.Dates.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private DataCiteMetadata.Dates.Date.Selector<TRoot, DataCiteMetadata.Dates.Selector<TRoot, TParent>> date = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.date!= null) {
                    products.put("date", this.date.init());
                }
                return products;
            }

            public DataCiteMetadata.Dates.Date.Selector<TRoot, DataCiteMetadata.Dates.Selector<TRoot, TParent>> date() {
                return ((this.date == null)?this.date = new DataCiteMetadata.Dates.Date.Selector<TRoot, DataCiteMetadata.Dates.Selector<TRoot, TParent>>(this._root, this, "date"):this.date);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="description" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;choice>
     *                   &lt;element name="br" maxOccurs="unbounded" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                 &lt;/choice>
     *                 &lt;attribute name="descriptionType" use="required" type="{http://datacite.org/schema/kernel-4}descriptionType" />
     *                 &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "description"
    })
    public static class Descriptions {

        protected List<DataCiteMetadata.Descriptions.Description> description;

        /**
         * Gets the value of the description property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the description property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getDescription().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DataCiteMetadata.Descriptions.Description }
         * 
         * 
         */
        public List<DataCiteMetadata.Descriptions.Description> getDescription() {
            if (description == null) {
                description = new ArrayList<DataCiteMetadata.Descriptions.Description>();
            }
            return this.description;
        }

        public static DataCiteMetadata.Descriptions.Builder<Void> builder() {
            return new DataCiteMetadata.Descriptions.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.Descriptions.Builder<Void> copyOf(final DataCiteMetadata.Descriptions _other) {
            return new DataCiteMetadata.Descriptions.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.Descriptions.Builder<Void> copyOf(final DataCiteMetadata.Descriptions _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.Descriptions.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.Descriptions.Builder<Void> copyExcept(final DataCiteMetadata.Descriptions _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.Descriptions.Builder<Void> copyOnly(final DataCiteMetadata.Descriptions _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("description", description).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(description);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.Descriptions o = ((DataCiteMetadata.Descriptions) other);
            return Objects.equal(description, o.description);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.Descriptions _product;
            private List<DataCiteMetadata.Descriptions.Description.Builder<DataCiteMetadata.Descriptions.Builder<TParentBuilder>>> description;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Descriptions _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    if (_other.description == null) {
                        this.description = null;
                    } else {
                        this.description = new ArrayList<DataCiteMetadata.Descriptions.Description.Builder<DataCiteMetadata.Descriptions.Builder<TParentBuilder>>>();
                        for (DataCiteMetadata.Descriptions.Description _item: _other.description) {
                            this.description.add(((_other.description == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Descriptions.Description.Builder.class, _item, this, _item, true)));
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Descriptions _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree descriptionPropertyTree = ((propertyTree == null)?null:propertyTree.get("description"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(descriptionPropertyTree!= null):((descriptionPropertyTree == null)||(!descriptionPropertyTree.isLeaf())))) {
                        if (_other.description == null) {
                            this.description = null;
                        } else {
                            this.description = new ArrayList<DataCiteMetadata.Descriptions.Description.Builder<DataCiteMetadata.Descriptions.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.Descriptions.Description _item: _other.description) {
                                this.description.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Descriptions.Description.Builder.class, _item, this, _item, true, descriptionPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.Descriptions >P init(final P product) {
                if (this.description!= null) {
                    final List<DataCiteMetadata.Descriptions.Description> description = new ArrayList<DataCiteMetadata.Descriptions.Description>(this.description.size());
                    for (DataCiteMetadata.Descriptions.Description.Builder<DataCiteMetadata.Descriptions.Builder<TParentBuilder>> _item: this.description) {
                        description.add(_item.build());
                    }
                    product.description = description;
                }
                return product;
            }

            /**
             * Adds the given items to the value of "description"
             * 
             * @param description
             *     Items to add to the value of the "description" property
             */
            public DataCiteMetadata.Descriptions.Builder<TParentBuilder> addDescription(final Collection<? extends DataCiteMetadata.Descriptions.Description> description) {
                if (this.description == null) {
                    this.description = new ArrayList<DataCiteMetadata.Descriptions.Description.Builder<DataCiteMetadata.Descriptions.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadata.Descriptions.Description _item: description) {
                    this.description.add(new DataCiteMetadata.Descriptions.Description.Builder<DataCiteMetadata.Descriptions.Builder<TParentBuilder>>(this, _item, false));
                }
                return this;
            }

            /**
             * Sets the new value of "description" (any previous value will be replaced)
             * 
             * @param description
             *     New value of the "description" property.
             */
            public DataCiteMetadata.Descriptions.Builder<TParentBuilder> withDescription(final Collection<? extends DataCiteMetadata.Descriptions.Description> description) {
                if (this.description!= null) {
                    this.description.clear();
                }
                return addDescription(description);
            }

            /**
             * Adds the given items to the value of "description"
             * 
             * @param description
             *     Items to add to the value of the "description" property
             */
            public DataCiteMetadata.Descriptions.Builder<TParentBuilder> addDescription(DataCiteMetadata.Descriptions.Description... description) {
                addDescription(Arrays.asList(description));
                return this;
            }

            /**
             * Sets the new value of "description" (any previous value will be replaced)
             * 
             * @param description
             *     New value of the "description" property.
             */
            public DataCiteMetadata.Descriptions.Builder<TParentBuilder> withDescription(DataCiteMetadata.Descriptions.Description... description) {
                withDescription(Arrays.asList(description));
                return this;
            }

            /**
             * Returns a new builder to build an additional value of the "description" property.
             * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Descriptions.Description.Builder#end()} to return to the current builder.
             * 
             * @return
             *     a new builder to build an additional value of the "description" property.
             *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Descriptions.Description.Builder#end()} to return to the current builder.
             */
            public DataCiteMetadata.Descriptions.Description.Builder<? extends DataCiteMetadata.Descriptions.Builder<TParentBuilder>> addDescription() {
                if (this.description == null) {
                    this.description = new ArrayList<DataCiteMetadata.Descriptions.Description.Builder<DataCiteMetadata.Descriptions.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadata.Descriptions.Description.Builder<DataCiteMetadata.Descriptions.Builder<TParentBuilder>> descriptionBuilder = new DataCiteMetadata.Descriptions.Description.Builder<DataCiteMetadata.Descriptions.Builder<TParentBuilder>>(this, null, false);
                this.description.add(descriptionBuilder);
                return descriptionBuilder;
            }

            public DataCiteMetadata.Descriptions build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.Descriptions());
                } else {
                    return ((DataCiteMetadata.Descriptions) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;choice>
         *         &lt;element name="br" maxOccurs="unbounded" minOccurs="0">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *       &lt;/choice>
         *       &lt;attribute name="descriptionType" use="required" type="{http://datacite.org/schema/kernel-4}descriptionType" />
         *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "content"
        })
        public static class Description {

            @XmlElementRef(name = "br", namespace = "http://datacite.org/schema/kernel-4", type = JAXBElement.class, required = false)
            @XmlMixed
            protected List<Serializable> content;
            @XmlAttribute(name = "descriptionType", required = true)
            protected DescriptionType descriptionType;
            @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
            protected String lang;

            /**
             * Gets the value of the content property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the content property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getContent().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link JAXBElement }{@code <}{@link DataCiteMetadata.Descriptions.Description.Br }{@code >}
             * {@link String }
             * 
             * 
             */
            public List<Serializable> getContent() {
                if (content == null) {
                    content = new ArrayList<Serializable>();
                }
                return this.content;
            }

            /**
             * Gets the value of the descriptionType property.
             * 
             * @return
             *     possible object is
             *     {@link DescriptionType }
             *     
             */
            public DescriptionType getDescriptionType() {
                return descriptionType;
            }

            /**
             * Sets the value of the descriptionType property.
             * 
             * @param value
             *     allowed object is
             *     {@link DescriptionType }
             *     
             */
            public void setDescriptionType(DescriptionType value) {
                this.descriptionType = value;
            }

            /**
             * Gets the value of the lang property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getLang() {
                return lang;
            }

            /**
             * Sets the value of the lang property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setLang(String value) {
                this.lang = value;
            }

            public static DataCiteMetadata.Descriptions.Description.Builder<Void> builder() {
                return new DataCiteMetadata.Descriptions.Description.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadata.Descriptions.Description.Builder<Void> copyOf(final DataCiteMetadata.Descriptions.Description _other) {
                return new DataCiteMetadata.Descriptions.Description.Builder<Void>(null, _other, true);
            }

            public static DataCiteMetadata.Descriptions.Description.Builder<Void> copyOf(final DataCiteMetadata.Descriptions.Description _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                return new DataCiteMetadata.Descriptions.Description.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
            }

            public static DataCiteMetadata.Descriptions.Description.Builder<Void> copyExcept(final DataCiteMetadata.Descriptions.Description _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadata.Descriptions.Description.Builder<Void> copyOnly(final DataCiteMetadata.Descriptions.Description _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("content", content).add("descriptionType", descriptionType).add("lang", lang).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(content, descriptionType, lang);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadata.Descriptions.Description o = ((DataCiteMetadata.Descriptions.Description) other);
                return ((Objects.equal(content, o.content)&&Objects.equal(descriptionType, o.descriptionType))&&Objects.equal(lang, o.lang));
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "")
            public static class Br {


                public static DataCiteMetadata.Descriptions.Description.Br.Builder<Void> builder() {
                    return new DataCiteMetadata.Descriptions.Description.Br.Builder<Void>(null, null, false);
                }

                public static DataCiteMetadata.Descriptions.Description.Br.Builder<Void> copyOf(final DataCiteMetadata.Descriptions.Description.Br _other) {
                    return new DataCiteMetadata.Descriptions.Description.Br.Builder<Void>(null, _other, true);
                }

                public static DataCiteMetadata.Descriptions.Description.Br.Builder<Void> copyOf(final DataCiteMetadata.Descriptions.Description.Br _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                    return new DataCiteMetadata.Descriptions.Description.Br.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
                }

                public static DataCiteMetadata.Descriptions.Description.Br.Builder<Void> copyExcept(final DataCiteMetadata.Descriptions.Description.Br _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
                }

                public static DataCiteMetadata.Descriptions.Description.Br.Builder<Void> copyOnly(final DataCiteMetadata.Descriptions.Description.Br _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
                }

                @Override
                public String toString() {
                    return Objects.toStringHelper(this).toString();
                }

                public static class Builder<TParentBuilder >{

                    protected final TParentBuilder _parentBuilder;
                    protected final DataCiteMetadata.Descriptions.Description.Br _product;

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Descriptions.Description.Br _other, final boolean _copy) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                        } else {
                            this._product = _other;
                        }
                    }

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Descriptions.Description.Br _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                        } else {
                            this._product = _other;
                        }
                    }

                    public TParentBuilder end() {
                        return this._parentBuilder;
                    }

                    protected<P extends DataCiteMetadata.Descriptions.Description.Br >P init(final P product) {
                        return product;
                    }

                    public DataCiteMetadata.Descriptions.Description.Br build() {
                        if (this._product == null) {
                            return this.init(new DataCiteMetadata.Descriptions.Description.Br());
                        } else {
                            return ((DataCiteMetadata.Descriptions.Description.Br) this._product);
                        }
                    }

                }

                public static class Select
                    extends DataCiteMetadata.Descriptions.Description.Br.Selector<DataCiteMetadata.Descriptions.Description.Br.Select, Void>
                {


                    Select() {
                        super(null, null, null);
                    }

                    public static DataCiteMetadata.Descriptions.Description.Br.Select _root() {
                        return new DataCiteMetadata.Descriptions.Description.Br.Select();
                    }

                }

                public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                    extends com.kscs.util.jaxb.Selector<TRoot, TParent>
                {


                    public Selector(final TRoot root, final TParent parent, final String propertyName) {
                        super(root, parent, propertyName);
                    }

                    @Override
                    public Map<String, PropertyTree> buildChildren() {
                        final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                        products.putAll(super.buildChildren());
                        return products;
                    }

                }

            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadata.Descriptions.Description _product;
                private List<Serializable> content;
                private DescriptionType descriptionType;
                private String lang;

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Descriptions.Description _other, final boolean _copy) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        this.content = ((_other.content == null)?null:new ArrayList<Serializable>(_other.content));
                        this.descriptionType = _other.descriptionType;
                        this.lang = _other.lang;
                    } else {
                        this._product = _other;
                    }
                }

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Descriptions.Description _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        final PropertyTree contentPropertyTree = ((propertyTree == null)?null:propertyTree.get("content"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(contentPropertyTree!= null):((contentPropertyTree == null)||(!contentPropertyTree.isLeaf())))) {
                            this.content = ((_other.content == null)?null:new ArrayList<Serializable>(_other.content));
                        }
                        final PropertyTree descriptionTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("descriptionType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(descriptionTypePropertyTree!= null):((descriptionTypePropertyTree == null)||(!descriptionTypePropertyTree.isLeaf())))) {
                            this.descriptionType = _other.descriptionType;
                        }
                        final PropertyTree langPropertyTree = ((propertyTree == null)?null:propertyTree.get("lang"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(langPropertyTree!= null):((langPropertyTree == null)||(!langPropertyTree.isLeaf())))) {
                            this.lang = _other.lang;
                        }
                    } else {
                        this._product = _other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadata.Descriptions.Description >P init(final P product) {
                    product.content = this.content;
                    product.descriptionType = this.descriptionType;
                    product.lang = this.lang;
                    return product;
                }

                /**
                 * Adds the given items to the value of "content"
                 * 
                 * @param content
                 *     Items to add to the value of the "content" property
                 */
                public DataCiteMetadata.Descriptions.Description.Builder<TParentBuilder> addContent(final Collection<? extends Serializable> content) {
                    if (this.content == null) {
                        this.content = new ArrayList<Serializable>();
                    }
                    this.content.addAll(content);
                    return this;
                }

                /**
                 * Sets the new value of "content" (any previous value will be replaced)
                 * 
                 * @param content
                 *     New value of the "content" property.
                 */
                public DataCiteMetadata.Descriptions.Description.Builder<TParentBuilder> withContent(final Collection<? extends Serializable> content) {
                    if (this.content!= null) {
                        this.content.clear();
                    }
                    return addContent(content);
                }

                /**
                 * Adds the given items to the value of "content"
                 * 
                 * @param content
                 *     Items to add to the value of the "content" property
                 */
                public DataCiteMetadata.Descriptions.Description.Builder<TParentBuilder> addContent(Serializable... content) {
                    addContent(Arrays.asList(content));
                    return this;
                }

                /**
                 * Sets the new value of "content" (any previous value will be replaced)
                 * 
                 * @param content
                 *     New value of the "content" property.
                 */
                public DataCiteMetadata.Descriptions.Description.Builder<TParentBuilder> withContent(Serializable... content) {
                    withContent(Arrays.asList(content));
                    return this;
                }

                /**
                 * Sets the new value of "descriptionType" (any previous value will be replaced)
                 * 
                 * @param descriptionType
                 *     New value of the "descriptionType" property.
                 */
                public DataCiteMetadata.Descriptions.Description.Builder<TParentBuilder> withDescriptionType(final DescriptionType descriptionType) {
                    this.descriptionType = descriptionType;
                    return this;
                }

                /**
                 * Sets the new value of "lang" (any previous value will be replaced)
                 * 
                 * @param lang
                 *     New value of the "lang" property.
                 */
                public DataCiteMetadata.Descriptions.Description.Builder<TParentBuilder> withLang(final String lang) {
                    this.lang = lang;
                    return this;
                }

                public DataCiteMetadata.Descriptions.Description build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadata.Descriptions.Description());
                    } else {
                        return ((DataCiteMetadata.Descriptions.Description) this._product);
                    }
                }

            }

            public static class Select
                extends DataCiteMetadata.Descriptions.Description.Selector<DataCiteMetadata.Descriptions.Description.Select, Void>
            {


                Select() {
                    super(null, null, null);
                }

                public static DataCiteMetadata.Descriptions.Description.Select _root() {
                    return new DataCiteMetadata.Descriptions.Description.Select();
                }

            }

            public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                extends com.kscs.util.jaxb.Selector<TRoot, TParent>
            {

                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Descriptions.Description.Selector<TRoot, TParent>> content = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Descriptions.Description.Selector<TRoot, TParent>> descriptionType = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Descriptions.Description.Selector<TRoot, TParent>> lang = null;

                public Selector(final TRoot root, final TParent parent, final String propertyName) {
                    super(root, parent, propertyName);
                }

                @Override
                public Map<String, PropertyTree> buildChildren() {
                    final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                    products.putAll(super.buildChildren());
                    if (this.content!= null) {
                        products.put("content", this.content.init());
                    }
                    if (this.descriptionType!= null) {
                        products.put("descriptionType", this.descriptionType.init());
                    }
                    if (this.lang!= null) {
                        products.put("lang", this.lang.init());
                    }
                    return products;
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Descriptions.Description.Selector<TRoot, TParent>> content() {
                    return ((this.content == null)?this.content = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Descriptions.Description.Selector<TRoot, TParent>>(this._root, this, "content"):this.content);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Descriptions.Description.Selector<TRoot, TParent>> descriptionType() {
                    return ((this.descriptionType == null)?this.descriptionType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Descriptions.Description.Selector<TRoot, TParent>>(this._root, this, "descriptionType"):this.descriptionType);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Descriptions.Description.Selector<TRoot, TParent>> lang() {
                    return ((this.lang == null)?this.lang = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Descriptions.Description.Selector<TRoot, TParent>>(this._root, this, "lang"):this.lang);
                }

            }

        }

        public static class Select
            extends DataCiteMetadata.Descriptions.Selector<DataCiteMetadata.Descriptions.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.Descriptions.Select _root() {
                return new DataCiteMetadata.Descriptions.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private DataCiteMetadata.Descriptions.Description.Selector<TRoot, DataCiteMetadata.Descriptions.Selector<TRoot, TParent>> description = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.description!= null) {
                    products.put("description", this.description.init());
                }
                return products;
            }

            public DataCiteMetadata.Descriptions.Description.Selector<TRoot, DataCiteMetadata.Descriptions.Selector<TRoot, TParent>> description() {
                return ((this.description == null)?this.description = new DataCiteMetadata.Descriptions.Description.Selector<TRoot, DataCiteMetadata.Descriptions.Selector<TRoot, TParent>>(this._root, this, "description"):this.description);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="format" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "format"
    })
    public static class Formats {

        protected List<String> format;

        /**
         * Gets the value of the format property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the format property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getFormat().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link String }
         * 
         * 
         */
        public List<String> getFormat() {
            if (format == null) {
                format = new ArrayList<String>();
            }
            return this.format;
        }

        public static DataCiteMetadata.Formats.Builder<Void> builder() {
            return new DataCiteMetadata.Formats.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.Formats.Builder<Void> copyOf(final DataCiteMetadata.Formats _other) {
            return new DataCiteMetadata.Formats.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.Formats.Builder<Void> copyOf(final DataCiteMetadata.Formats _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.Formats.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.Formats.Builder<Void> copyExcept(final DataCiteMetadata.Formats _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.Formats.Builder<Void> copyOnly(final DataCiteMetadata.Formats _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("format", format).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(format);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.Formats o = ((DataCiteMetadata.Formats) other);
            return Objects.equal(format, o.format);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.Formats _product;
            private List<String> format;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Formats _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    this.format = ((_other.format == null)?null:new ArrayList<String>(_other.format));
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Formats _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree formatPropertyTree = ((propertyTree == null)?null:propertyTree.get("format"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(formatPropertyTree!= null):((formatPropertyTree == null)||(!formatPropertyTree.isLeaf())))) {
                        this.format = ((_other.format == null)?null:new ArrayList<String>(_other.format));
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.Formats >P init(final P product) {
                product.format = this.format;
                return product;
            }

            /**
             * Adds the given items to the value of "format"
             * 
             * @param format
             *     Items to add to the value of the "format" property
             */
            public DataCiteMetadata.Formats.Builder<TParentBuilder> addFormat(final Collection<? extends String> format) {
                if (this.format == null) {
                    this.format = new ArrayList<String>();
                }
                this.format.addAll(format);
                return this;
            }

            /**
             * Sets the new value of "format" (any previous value will be replaced)
             * 
             * @param format
             *     New value of the "format" property.
             */
            public DataCiteMetadata.Formats.Builder<TParentBuilder> withFormat(final Collection<? extends String> format) {
                if (this.format!= null) {
                    this.format.clear();
                }
                return addFormat(format);
            }

            /**
             * Adds the given items to the value of "format"
             * 
             * @param format
             *     Items to add to the value of the "format" property
             */
            public DataCiteMetadata.Formats.Builder<TParentBuilder> addFormat(String... format) {
                addFormat(Arrays.asList(format));
                return this;
            }

            /**
             * Sets the new value of "format" (any previous value will be replaced)
             * 
             * @param format
             *     New value of the "format" property.
             */
            public DataCiteMetadata.Formats.Builder<TParentBuilder> withFormat(String... format) {
                withFormat(Arrays.asList(format));
                return this;
            }

            public DataCiteMetadata.Formats build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.Formats());
                } else {
                    return ((DataCiteMetadata.Formats) this._product);
                }
            }

        }

        public static class Select
            extends DataCiteMetadata.Formats.Selector<DataCiteMetadata.Formats.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.Formats.Select _root() {
                return new DataCiteMetadata.Formats.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Formats.Selector<TRoot, TParent>> format = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.format!= null) {
                    products.put("format", this.format.init());
                }
                return products;
            }

            public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Formats.Selector<TRoot, TParent>> format() {
                return ((this.format == null)?this.format = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Formats.Selector<TRoot, TParent>>(this._root, this, "format"):this.format);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="fundingReference" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;all>
     *                   &lt;element name="funderName">
     *                     &lt;simpleType>
     *                       &lt;restriction base="{http://datacite.org/schema/kernel-4}nonemptycontentStringType">
     *                       &lt;/restriction>
     *                     &lt;/simpleType>
     *                   &lt;/element>
     *                   &lt;element name="funderIdentifier" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;simpleContent>
     *                         &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                           &lt;attribute name="funderIdentifierType" use="required" type="{http://datacite.org/schema/kernel-4}funderIdentifierType" />
     *                         &lt;/extension>
     *                       &lt;/simpleContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="awardNumber" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;simpleContent>
     *                         &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                           &lt;attribute name="awardURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                         &lt;/extension>
     *                       &lt;/simpleContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                   &lt;element name="awardTitle" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
     *                 &lt;/all>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "fundingReference"
    })
    public static class FundingReferences {

        protected List<DataCiteMetadata.FundingReferences.FundingReference> fundingReference;

        /**
         * Gets the value of the fundingReference property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the fundingReference property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getFundingReference().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DataCiteMetadata.FundingReferences.FundingReference }
         * 
         * 
         */
        public List<DataCiteMetadata.FundingReferences.FundingReference> getFundingReference() {
            if (fundingReference == null) {
                fundingReference = new ArrayList<DataCiteMetadata.FundingReferences.FundingReference>();
            }
            return this.fundingReference;
        }

        public static DataCiteMetadata.FundingReferences.Builder<Void> builder() {
            return new DataCiteMetadata.FundingReferences.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.FundingReferences.Builder<Void> copyOf(final DataCiteMetadata.FundingReferences _other) {
            return new DataCiteMetadata.FundingReferences.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.FundingReferences.Builder<Void> copyOf(final DataCiteMetadata.FundingReferences _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.FundingReferences.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.FundingReferences.Builder<Void> copyExcept(final DataCiteMetadata.FundingReferences _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.FundingReferences.Builder<Void> copyOnly(final DataCiteMetadata.FundingReferences _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("fundingReference", fundingReference).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(fundingReference);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.FundingReferences o = ((DataCiteMetadata.FundingReferences) other);
            return Objects.equal(fundingReference, o.fundingReference);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.FundingReferences _product;
            private List<DataCiteMetadata.FundingReferences.FundingReference.Builder<DataCiteMetadata.FundingReferences.Builder<TParentBuilder>>> fundingReference;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.FundingReferences _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    if (_other.fundingReference == null) {
                        this.fundingReference = null;
                    } else {
                        this.fundingReference = new ArrayList<DataCiteMetadata.FundingReferences.FundingReference.Builder<DataCiteMetadata.FundingReferences.Builder<TParentBuilder>>>();
                        for (DataCiteMetadata.FundingReferences.FundingReference _item: _other.fundingReference) {
                            this.fundingReference.add(((_other.fundingReference == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.FundingReferences.FundingReference.Builder.class, _item, this, _item, true)));
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.FundingReferences _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree fundingReferencePropertyTree = ((propertyTree == null)?null:propertyTree.get("fundingReference"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(fundingReferencePropertyTree!= null):((fundingReferencePropertyTree == null)||(!fundingReferencePropertyTree.isLeaf())))) {
                        if (_other.fundingReference == null) {
                            this.fundingReference = null;
                        } else {
                            this.fundingReference = new ArrayList<DataCiteMetadata.FundingReferences.FundingReference.Builder<DataCiteMetadata.FundingReferences.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.FundingReferences.FundingReference _item: _other.fundingReference) {
                                this.fundingReference.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.FundingReferences.FundingReference.Builder.class, _item, this, _item, true, fundingReferencePropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.FundingReferences >P init(final P product) {
                if (this.fundingReference!= null) {
                    final List<DataCiteMetadata.FundingReferences.FundingReference> fundingReference = new ArrayList<DataCiteMetadata.FundingReferences.FundingReference>(this.fundingReference.size());
                    for (DataCiteMetadata.FundingReferences.FundingReference.Builder<DataCiteMetadata.FundingReferences.Builder<TParentBuilder>> _item: this.fundingReference) {
                        fundingReference.add(_item.build());
                    }
                    product.fundingReference = fundingReference;
                }
                return product;
            }

            /**
             * Adds the given items to the value of "fundingReference"
             * 
             * @param fundingReference
             *     Items to add to the value of the "fundingReference" property
             */
            public DataCiteMetadata.FundingReferences.Builder<TParentBuilder> addFundingReference(final Collection<? extends DataCiteMetadata.FundingReferences.FundingReference> fundingReference) {
                if (this.fundingReference == null) {
                    this.fundingReference = new ArrayList<DataCiteMetadata.FundingReferences.FundingReference.Builder<DataCiteMetadata.FundingReferences.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadata.FundingReferences.FundingReference _item: fundingReference) {
                    this.fundingReference.add(new DataCiteMetadata.FundingReferences.FundingReference.Builder<DataCiteMetadata.FundingReferences.Builder<TParentBuilder>>(this, _item, false));
                }
                return this;
            }

            /**
             * Sets the new value of "fundingReference" (any previous value will be replaced)
             * 
             * @param fundingReference
             *     New value of the "fundingReference" property.
             */
            public DataCiteMetadata.FundingReferences.Builder<TParentBuilder> withFundingReference(final Collection<? extends DataCiteMetadata.FundingReferences.FundingReference> fundingReference) {
                if (this.fundingReference!= null) {
                    this.fundingReference.clear();
                }
                return addFundingReference(fundingReference);
            }

            /**
             * Adds the given items to the value of "fundingReference"
             * 
             * @param fundingReference
             *     Items to add to the value of the "fundingReference" property
             */
            public DataCiteMetadata.FundingReferences.Builder<TParentBuilder> addFundingReference(DataCiteMetadata.FundingReferences.FundingReference... fundingReference) {
                addFundingReference(Arrays.asList(fundingReference));
                return this;
            }

            /**
             * Sets the new value of "fundingReference" (any previous value will be replaced)
             * 
             * @param fundingReference
             *     New value of the "fundingReference" property.
             */
            public DataCiteMetadata.FundingReferences.Builder<TParentBuilder> withFundingReference(DataCiteMetadata.FundingReferences.FundingReference... fundingReference) {
                withFundingReference(Arrays.asList(fundingReference));
                return this;
            }

            /**
             * Returns a new builder to build an additional value of the "fundingReference" property.
             * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.FundingReferences.FundingReference.Builder#end()} to return to the current builder.
             * 
             * @return
             *     a new builder to build an additional value of the "fundingReference" property.
             *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.FundingReferences.FundingReference.Builder#end()} to return to the current builder.
             */
            public DataCiteMetadata.FundingReferences.FundingReference.Builder<? extends DataCiteMetadata.FundingReferences.Builder<TParentBuilder>> addFundingReference() {
                if (this.fundingReference == null) {
                    this.fundingReference = new ArrayList<DataCiteMetadata.FundingReferences.FundingReference.Builder<DataCiteMetadata.FundingReferences.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadata.FundingReferences.FundingReference.Builder<DataCiteMetadata.FundingReferences.Builder<TParentBuilder>> fundingReferenceBuilder = new DataCiteMetadata.FundingReferences.FundingReference.Builder<DataCiteMetadata.FundingReferences.Builder<TParentBuilder>>(this, null, false);
                this.fundingReference.add(fundingReferenceBuilder);
                return fundingReferenceBuilder;
            }

            public DataCiteMetadata.FundingReferences build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.FundingReferences());
                } else {
                    return ((DataCiteMetadata.FundingReferences) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;all>
         *         &lt;element name="funderName">
         *           &lt;simpleType>
         *             &lt;restriction base="{http://datacite.org/schema/kernel-4}nonemptycontentStringType">
         *             &lt;/restriction>
         *           &lt;/simpleType>
         *         &lt;/element>
         *         &lt;element name="funderIdentifier" minOccurs="0">
         *           &lt;complexType>
         *             &lt;simpleContent>
         *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *                 &lt;attribute name="funderIdentifierType" use="required" type="{http://datacite.org/schema/kernel-4}funderIdentifierType" />
         *               &lt;/extension>
         *             &lt;/simpleContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="awardNumber" minOccurs="0">
         *           &lt;complexType>
         *             &lt;simpleContent>
         *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *                 &lt;attribute name="awardURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *               &lt;/extension>
         *             &lt;/simpleContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *         &lt;element name="awardTitle" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
         *       &lt;/all>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {

        })
        public static class FundingReference {

            @XmlElement(required = true)
            protected String funderName;
            protected DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier funderIdentifier;
            protected DataCiteMetadata.FundingReferences.FundingReference.AwardNumber awardNumber;
            protected Object awardTitle;

            /**
             * Gets the value of the funderName property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getFunderName() {
                return funderName;
            }

            /**
             * Sets the value of the funderName property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setFunderName(String value) {
                this.funderName = value;
            }

            /**
             * Gets the value of the funderIdentifier property.
             * 
             * @return
             *     possible object is
             *     {@link DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier }
             *     
             */
            public DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier getFunderIdentifier() {
                return funderIdentifier;
            }

            /**
             * Sets the value of the funderIdentifier property.
             * 
             * @param value
             *     allowed object is
             *     {@link DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier }
             *     
             */
            public void setFunderIdentifier(DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier value) {
                this.funderIdentifier = value;
            }

            /**
             * Gets the value of the awardNumber property.
             * 
             * @return
             *     possible object is
             *     {@link DataCiteMetadata.FundingReferences.FundingReference.AwardNumber }
             *     
             */
            public DataCiteMetadata.FundingReferences.FundingReference.AwardNumber getAwardNumber() {
                return awardNumber;
            }

            /**
             * Sets the value of the awardNumber property.
             * 
             * @param value
             *     allowed object is
             *     {@link DataCiteMetadata.FundingReferences.FundingReference.AwardNumber }
             *     
             */
            public void setAwardNumber(DataCiteMetadata.FundingReferences.FundingReference.AwardNumber value) {
                this.awardNumber = value;
            }

            /**
             * Gets the value of the awardTitle property.
             * 
             * @return
             *     possible object is
             *     {@link Object }
             *     
             */
            public Object getAwardTitle() {
                return awardTitle;
            }

            /**
             * Sets the value of the awardTitle property.
             * 
             * @param value
             *     allowed object is
             *     {@link Object }
             *     
             */
            public void setAwardTitle(Object value) {
                this.awardTitle = value;
            }

            public static DataCiteMetadata.FundingReferences.FundingReference.Builder<Void> builder() {
                return new DataCiteMetadata.FundingReferences.FundingReference.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadata.FundingReferences.FundingReference.Builder<Void> copyOf(final DataCiteMetadata.FundingReferences.FundingReference _other) {
                return new DataCiteMetadata.FundingReferences.FundingReference.Builder<Void>(null, _other, true);
            }

            public static DataCiteMetadata.FundingReferences.FundingReference.Builder<Void> copyOf(final DataCiteMetadata.FundingReferences.FundingReference _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                return new DataCiteMetadata.FundingReferences.FundingReference.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
            }

            public static DataCiteMetadata.FundingReferences.FundingReference.Builder<Void> copyExcept(final DataCiteMetadata.FundingReferences.FundingReference _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadata.FundingReferences.FundingReference.Builder<Void> copyOnly(final DataCiteMetadata.FundingReferences.FundingReference _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("funderName", funderName).add("funderIdentifier", funderIdentifier).add("awardNumber", awardNumber).add("awardTitle", awardTitle).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(funderName, funderIdentifier, awardNumber, awardTitle);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadata.FundingReferences.FundingReference o = ((DataCiteMetadata.FundingReferences.FundingReference) other);
                return (((Objects.equal(funderName, o.funderName)&&Objects.equal(funderIdentifier, o.funderIdentifier))&&Objects.equal(awardNumber, o.awardNumber))&&Objects.equal(awardTitle, o.awardTitle));
            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;simpleContent>
             *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
             *       &lt;attribute name="awardURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
             *     &lt;/extension>
             *   &lt;/simpleContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "value"
            })
            public static class AwardNumber {

                @XmlValue
                protected String value;
                @XmlAttribute(name = "awardURI")
                @XmlSchemaType(name = "anyURI")
                protected String awardURI;

                /**
                 * Gets the value of the value property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getValue() {
                    return value;
                }

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setValue(String value) {
                    this.value = value;
                }

                /**
                 * Gets the value of the awardURI property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getAwardURI() {
                    return awardURI;
                }

                /**
                 * Sets the value of the awardURI property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setAwardURI(String value) {
                    this.awardURI = value;
                }

                public static DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<Void> builder() {
                    return new DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<Void>(null, null, false);
                }

                public static DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<Void> copyOf(final DataCiteMetadata.FundingReferences.FundingReference.AwardNumber _other) {
                    return new DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<Void>(null, _other, true);
                }

                public static DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<Void> copyOf(final DataCiteMetadata.FundingReferences.FundingReference.AwardNumber _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                    return new DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
                }

                public static DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<Void> copyExcept(final DataCiteMetadata.FundingReferences.FundingReference.AwardNumber _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
                }

                public static DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<Void> copyOnly(final DataCiteMetadata.FundingReferences.FundingReference.AwardNumber _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
                }

                @Override
                public String toString() {
                    return Objects.toStringHelper(this).add("value", value).add("awardURI", awardURI).toString();
                }

                @Override
                public int hashCode() {
                    return Objects.hashCode(value, awardURI);
                }

                @Override
                public boolean equals(Object other) {
                    if (this == other) {
                        return true;
                    }
                    if (other == null) {
                        return false;
                    }
                    if (getClass()!= other.getClass()) {
                        return false;
                    }
                    final DataCiteMetadata.FundingReferences.FundingReference.AwardNumber o = ((DataCiteMetadata.FundingReferences.FundingReference.AwardNumber) other);
                    return (Objects.equal(value, o.value)&&Objects.equal(awardURI, o.awardURI));
                }

                public static class Builder<TParentBuilder >{

                    protected final TParentBuilder _parentBuilder;
                    protected final DataCiteMetadata.FundingReferences.FundingReference.AwardNumber _product;
                    private String value;
                    private String awardURI;

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.FundingReferences.FundingReference.AwardNumber _other, final boolean _copy) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            this.value = _other.value;
                            this.awardURI = _other.awardURI;
                        } else {
                            this._product = _other;
                        }
                    }

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.FundingReferences.FundingReference.AwardNumber _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                                this.value = _other.value;
                            }
                            final PropertyTree awardURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("awardURI"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(awardURIPropertyTree!= null):((awardURIPropertyTree == null)||(!awardURIPropertyTree.isLeaf())))) {
                                this.awardURI = _other.awardURI;
                            }
                        } else {
                            this._product = _other;
                        }
                    }

                    public TParentBuilder end() {
                        return this._parentBuilder;
                    }

                    protected<P extends DataCiteMetadata.FundingReferences.FundingReference.AwardNumber >P init(final P product) {
                        product.value = this.value;
                        product.awardURI = this.awardURI;
                        return product;
                    }

                    /**
                     * Sets the new value of "value" (any previous value will be replaced)
                     * 
                     * @param value
                     *     New value of the "value" property.
                     */
                    public DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<TParentBuilder> withValue(final String value) {
                        this.value = value;
                        return this;
                    }

                    /**
                     * Sets the new value of "awardURI" (any previous value will be replaced)
                     * 
                     * @param awardURI
                     *     New value of the "awardURI" property.
                     */
                    public DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<TParentBuilder> withAwardURI(final String awardURI) {
                        this.awardURI = awardURI;
                        return this;
                    }

                    public DataCiteMetadata.FundingReferences.FundingReference.AwardNumber build() {
                        if (this._product == null) {
                            return this.init(new DataCiteMetadata.FundingReferences.FundingReference.AwardNumber());
                        } else {
                            return ((DataCiteMetadata.FundingReferences.FundingReference.AwardNumber) this._product);
                        }
                    }

                }

                public static class Select
                    extends DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Selector<DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Select, Void>
                {


                    Select() {
                        super(null, null, null);
                    }

                    public static DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Select _root() {
                        return new DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Select();
                    }

                }

                public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                    extends com.kscs.util.jaxb.Selector<TRoot, TParent>
                {

                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Selector<TRoot, TParent>> value = null;
                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Selector<TRoot, TParent>> awardURI = null;

                    public Selector(final TRoot root, final TParent parent, final String propertyName) {
                        super(root, parent, propertyName);
                    }

                    @Override
                    public Map<String, PropertyTree> buildChildren() {
                        final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                        products.putAll(super.buildChildren());
                        if (this.value!= null) {
                            products.put("value", this.value.init());
                        }
                        if (this.awardURI!= null) {
                            products.put("awardURI", this.awardURI.init());
                        }
                        return products;
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Selector<TRoot, TParent>> value() {
                        return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Selector<TRoot, TParent>> awardURI() {
                        return ((this.awardURI == null)?this.awardURI = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Selector<TRoot, TParent>>(this._root, this, "awardURI"):this.awardURI);
                    }

                }

            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadata.FundingReferences.FundingReference _product;
                private String funderName;
                private DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder>> funderIdentifier;
                private DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder>> awardNumber;
                private Object awardTitle;

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.FundingReferences.FundingReference _other, final boolean _copy) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        this.funderName = _other.funderName;
                        this.funderIdentifier = ((_other.funderIdentifier == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder.class, _other.funderIdentifier, this, _other.funderIdentifier, true));
                        this.awardNumber = ((_other.awardNumber == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder.class, _other.awardNumber, this, _other.awardNumber, true));
                        this.awardTitle = _other.awardTitle;
                    } else {
                        this._product = _other;
                    }
                }

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.FundingReferences.FundingReference _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        final PropertyTree funderNamePropertyTree = ((propertyTree == null)?null:propertyTree.get("funderName"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(funderNamePropertyTree!= null):((funderNamePropertyTree == null)||(!funderNamePropertyTree.isLeaf())))) {
                            this.funderName = _other.funderName;
                        }
                        final PropertyTree funderIdentifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("funderIdentifier"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(funderIdentifierPropertyTree!= null):((funderIdentifierPropertyTree == null)||(!funderIdentifierPropertyTree.isLeaf())))) {
                            this.funderIdentifier = ((_other.funderIdentifier == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder.class, _other.funderIdentifier, this, _other.funderIdentifier, true, funderIdentifierPropertyTree, treeUse));
                        }
                        final PropertyTree awardNumberPropertyTree = ((propertyTree == null)?null:propertyTree.get("awardNumber"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(awardNumberPropertyTree!= null):((awardNumberPropertyTree == null)||(!awardNumberPropertyTree.isLeaf())))) {
                            this.awardNumber = ((_other.awardNumber == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder.class, _other.awardNumber, this, _other.awardNumber, true, awardNumberPropertyTree, treeUse));
                        }
                        final PropertyTree awardTitlePropertyTree = ((propertyTree == null)?null:propertyTree.get("awardTitle"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(awardTitlePropertyTree!= null):((awardTitlePropertyTree == null)||(!awardTitlePropertyTree.isLeaf())))) {
                            this.awardTitle = _other.awardTitle;
                        }
                    } else {
                        this._product = _other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadata.FundingReferences.FundingReference >P init(final P product) {
                    product.funderName = this.funderName;
                    product.funderIdentifier = ((this.funderIdentifier == null)?null:this.funderIdentifier.build());
                    product.awardNumber = ((this.awardNumber == null)?null:this.awardNumber.build());
                    product.awardTitle = this.awardTitle;
                    return product;
                }

                /**
                 * Sets the new value of "funderName" (any previous value will be replaced)
                 * 
                 * @param funderName
                 *     New value of the "funderName" property.
                 */
                public DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder> withFunderName(final String funderName) {
                    this.funderName = funderName;
                    return this;
                }

                /**
                 * Sets the new value of "funderIdentifier" (any previous value will be replaced)
                 * 
                 * @param funderIdentifier
                 *     New value of the "funderIdentifier" property.
                 */
                public DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder> withFunderIdentifier(final DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier funderIdentifier) {
                    this.funderIdentifier = ((funderIdentifier == null)?null:new DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder>>(this, funderIdentifier, false));
                    return this;
                }

                /**
                 * Returns a new builder to build the value of the "funderIdentifier" property (replacing previous value).
                 * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder#end()} to return to the current builder.
                 * 
                 * @return
                 *     A new builder to build the value of the "funderIdentifier" property.
                 *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder#end()} to return to the current builder.
                 */
                public DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<? extends DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder>> withFunderIdentifier() {
                    return this.funderIdentifier = new DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder>>(this, null, false);
                }

                /**
                 * Sets the new value of "awardNumber" (any previous value will be replaced)
                 * 
                 * @param awardNumber
                 *     New value of the "awardNumber" property.
                 */
                public DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder> withAwardNumber(final DataCiteMetadata.FundingReferences.FundingReference.AwardNumber awardNumber) {
                    this.awardNumber = ((awardNumber == null)?null:new DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder>>(this, awardNumber, false));
                    return this;
                }

                /**
                 * Returns a new builder to build the value of the "awardNumber" property (replacing previous value).
                 * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder#end()} to return to the current builder.
                 * 
                 * @return
                 *     A new builder to build the value of the "awardNumber" property.
                 *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder#end()} to return to the current builder.
                 */
                public DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<? extends DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder>> withAwardNumber() {
                    return this.awardNumber = new DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Builder<DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder>>(this, null, false);
                }

                /**
                 * Sets the new value of "awardTitle" (any previous value will be replaced)
                 * 
                 * @param awardTitle
                 *     New value of the "awardTitle" property.
                 */
                public DataCiteMetadata.FundingReferences.FundingReference.Builder<TParentBuilder> withAwardTitle(final Object awardTitle) {
                    this.awardTitle = awardTitle;
                    return this;
                }

                public DataCiteMetadata.FundingReferences.FundingReference build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadata.FundingReferences.FundingReference());
                    } else {
                        return ((DataCiteMetadata.FundingReferences.FundingReference) this._product);
                    }
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;simpleContent>
             *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
             *       &lt;attribute name="funderIdentifierType" use="required" type="{http://datacite.org/schema/kernel-4}funderIdentifierType" />
             *     &lt;/extension>
             *   &lt;/simpleContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "value"
            })
            public static class FunderIdentifier {

                @XmlValue
                protected String value;
                @XmlAttribute(name = "funderIdentifierType", required = true)
                protected FunderIdentifierType funderIdentifierType;

                /**
                 * Gets the value of the value property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link String }
                 *     
                 */
                public String getValue() {
                    return value;
                }

                /**
                 * Sets the value of the value property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link String }
                 *     
                 */
                public void setValue(String value) {
                    this.value = value;
                }

                /**
                 * Gets the value of the funderIdentifierType property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link FunderIdentifierType }
                 *     
                 */
                public FunderIdentifierType getFunderIdentifierType() {
                    return funderIdentifierType;
                }

                /**
                 * Sets the value of the funderIdentifierType property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link FunderIdentifierType }
                 *     
                 */
                public void setFunderIdentifierType(FunderIdentifierType value) {
                    this.funderIdentifierType = value;
                }

                public static DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<Void> builder() {
                    return new DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<Void>(null, null, false);
                }

                public static DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<Void> copyOf(final DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier _other) {
                    return new DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<Void>(null, _other, true);
                }

                public static DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<Void> copyOf(final DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                    return new DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
                }

                public static DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<Void> copyExcept(final DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
                }

                public static DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<Void> copyOnly(final DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
                }

                @Override
                public String toString() {
                    return Objects.toStringHelper(this).add("value", value).add("funderIdentifierType", funderIdentifierType).toString();
                }

                @Override
                public int hashCode() {
                    return Objects.hashCode(value, funderIdentifierType);
                }

                @Override
                public boolean equals(Object other) {
                    if (this == other) {
                        return true;
                    }
                    if (other == null) {
                        return false;
                    }
                    if (getClass()!= other.getClass()) {
                        return false;
                    }
                    final DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier o = ((DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier) other);
                    return (Objects.equal(value, o.value)&&Objects.equal(funderIdentifierType, o.funderIdentifierType));
                }

                public static class Builder<TParentBuilder >{

                    protected final TParentBuilder _parentBuilder;
                    protected final DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier _product;
                    private String value;
                    private FunderIdentifierType funderIdentifierType;

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier _other, final boolean _copy) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            this.value = _other.value;
                            this.funderIdentifierType = _other.funderIdentifierType;
                        } else {
                            this._product = _other;
                        }
                    }

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                                this.value = _other.value;
                            }
                            final PropertyTree funderIdentifierTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("funderIdentifierType"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(funderIdentifierTypePropertyTree!= null):((funderIdentifierTypePropertyTree == null)||(!funderIdentifierTypePropertyTree.isLeaf())))) {
                                this.funderIdentifierType = _other.funderIdentifierType;
                            }
                        } else {
                            this._product = _other;
                        }
                    }

                    public TParentBuilder end() {
                        return this._parentBuilder;
                    }

                    protected<P extends DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier >P init(final P product) {
                        product.value = this.value;
                        product.funderIdentifierType = this.funderIdentifierType;
                        return product;
                    }

                    /**
                     * Sets the new value of "value" (any previous value will be replaced)
                     * 
                     * @param value
                     *     New value of the "value" property.
                     */
                    public DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<TParentBuilder> withValue(final String value) {
                        this.value = value;
                        return this;
                    }

                    /**
                     * Sets the new value of "funderIdentifierType" (any previous value will be replaced)
                     * 
                     * @param funderIdentifierType
                     *     New value of the "funderIdentifierType" property.
                     */
                    public DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Builder<TParentBuilder> withFunderIdentifierType(final FunderIdentifierType funderIdentifierType) {
                        this.funderIdentifierType = funderIdentifierType;
                        return this;
                    }

                    public DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier build() {
                        if (this._product == null) {
                            return this.init(new DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier());
                        } else {
                            return ((DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier) this._product);
                        }
                    }

                }

                public static class Select
                    extends DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Selector<DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Select, Void>
                {


                    Select() {
                        super(null, null, null);
                    }

                    public static DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Select _root() {
                        return new DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Select();
                    }

                }

                public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                    extends com.kscs.util.jaxb.Selector<TRoot, TParent>
                {

                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Selector<TRoot, TParent>> value = null;
                    private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Selector<TRoot, TParent>> funderIdentifierType = null;

                    public Selector(final TRoot root, final TParent parent, final String propertyName) {
                        super(root, parent, propertyName);
                    }

                    @Override
                    public Map<String, PropertyTree> buildChildren() {
                        final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                        products.putAll(super.buildChildren());
                        if (this.value!= null) {
                            products.put("value", this.value.init());
                        }
                        if (this.funderIdentifierType!= null) {
                            products.put("funderIdentifierType", this.funderIdentifierType.init());
                        }
                        return products;
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Selector<TRoot, TParent>> value() {
                        return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                    }

                    public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Selector<TRoot, TParent>> funderIdentifierType() {
                        return ((this.funderIdentifierType == null)?this.funderIdentifierType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Selector<TRoot, TParent>>(this._root, this, "funderIdentifierType"):this.funderIdentifierType);
                    }

                }

            }

            public static class Select
                extends DataCiteMetadata.FundingReferences.FundingReference.Selector<DataCiteMetadata.FundingReferences.FundingReference.Select, Void>
            {


                Select() {
                    super(null, null, null);
                }

                public static DataCiteMetadata.FundingReferences.FundingReference.Select _root() {
                    return new DataCiteMetadata.FundingReferences.FundingReference.Select();
                }

            }

            public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                extends com.kscs.util.jaxb.Selector<TRoot, TParent>
            {

                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>> funderName = null;
                private DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>> funderIdentifier = null;
                private DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>> awardNumber = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>> awardTitle = null;

                public Selector(final TRoot root, final TParent parent, final String propertyName) {
                    super(root, parent, propertyName);
                }

                @Override
                public Map<String, PropertyTree> buildChildren() {
                    final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                    products.putAll(super.buildChildren());
                    if (this.funderName!= null) {
                        products.put("funderName", this.funderName.init());
                    }
                    if (this.funderIdentifier!= null) {
                        products.put("funderIdentifier", this.funderIdentifier.init());
                    }
                    if (this.awardNumber!= null) {
                        products.put("awardNumber", this.awardNumber.init());
                    }
                    if (this.awardTitle!= null) {
                        products.put("awardTitle", this.awardTitle.init());
                    }
                    return products;
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>> funderName() {
                    return ((this.funderName == null)?this.funderName = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>>(this._root, this, "funderName"):this.funderName);
                }

                public DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>> funderIdentifier() {
                    return ((this.funderIdentifier == null)?this.funderIdentifier = new DataCiteMetadata.FundingReferences.FundingReference.FunderIdentifier.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>>(this._root, this, "funderIdentifier"):this.funderIdentifier);
                }

                public DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>> awardNumber() {
                    return ((this.awardNumber == null)?this.awardNumber = new DataCiteMetadata.FundingReferences.FundingReference.AwardNumber.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>>(this._root, this, "awardNumber"):this.awardNumber);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>> awardTitle() {
                    return ((this.awardTitle == null)?this.awardTitle = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, TParent>>(this._root, this, "awardTitle"):this.awardTitle);
                }

            }

        }

        public static class Select
            extends DataCiteMetadata.FundingReferences.Selector<DataCiteMetadata.FundingReferences.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.FundingReferences.Select _root() {
                return new DataCiteMetadata.FundingReferences.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, DataCiteMetadata.FundingReferences.Selector<TRoot, TParent>> fundingReference = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.fundingReference!= null) {
                    products.put("fundingReference", this.fundingReference.init());
                }
                return products;
            }

            public DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, DataCiteMetadata.FundingReferences.Selector<TRoot, TParent>> fundingReference() {
                return ((this.fundingReference == null)?this.fundingReference = new DataCiteMetadata.FundingReferences.FundingReference.Selector<TRoot, DataCiteMetadata.FundingReferences.Selector<TRoot, TParent>>(this._root, this, "fundingReference"):this.fundingReference);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="geoLocation" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;complexContent>
     *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                 &lt;choice maxOccurs="unbounded">
     *                   &lt;element name="geoLocationPlace" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
     *                   &lt;element name="geoLocationPoint" type="{http://datacite.org/schema/kernel-4}point" minOccurs="0"/>
     *                   &lt;element name="geoLocationBox" type="{http://datacite.org/schema/kernel-4}box" minOccurs="0"/>
     *                   &lt;element name="geoLocationPolygon" maxOccurs="unbounded" minOccurs="0">
     *                     &lt;complexType>
     *                       &lt;complexContent>
     *                         &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *                           &lt;sequence>
     *                             &lt;element name="polygonPoint" type="{http://datacite.org/schema/kernel-4}point" maxOccurs="unbounded" minOccurs="4"/>
     *                             &lt;element name="inPolygonPoint" type="{http://datacite.org/schema/kernel-4}point" minOccurs="0"/>
     *                           &lt;/sequence>
     *                         &lt;/restriction>
     *                       &lt;/complexContent>
     *                     &lt;/complexType>
     *                   &lt;/element>
     *                 &lt;/choice>
     *               &lt;/restriction>
     *             &lt;/complexContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "geoLocation"
    })
    public static class GeoLocations {

        protected List<DataCiteMetadata.GeoLocations.GeoLocation> geoLocation;

        /**
         * Gets the value of the geoLocation property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the geoLocation property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getGeoLocation().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DataCiteMetadata.GeoLocations.GeoLocation }
         * 
         * 
         */
        public List<DataCiteMetadata.GeoLocations.GeoLocation> getGeoLocation() {
            if (geoLocation == null) {
                geoLocation = new ArrayList<DataCiteMetadata.GeoLocations.GeoLocation>();
            }
            return this.geoLocation;
        }

        public static DataCiteMetadata.GeoLocations.Builder<Void> builder() {
            return new DataCiteMetadata.GeoLocations.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.GeoLocations.Builder<Void> copyOf(final DataCiteMetadata.GeoLocations _other) {
            return new DataCiteMetadata.GeoLocations.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.GeoLocations.Builder<Void> copyOf(final DataCiteMetadata.GeoLocations _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.GeoLocations.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.GeoLocations.Builder<Void> copyExcept(final DataCiteMetadata.GeoLocations _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.GeoLocations.Builder<Void> copyOnly(final DataCiteMetadata.GeoLocations _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("geoLocation", geoLocation).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(geoLocation);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.GeoLocations o = ((DataCiteMetadata.GeoLocations) other);
            return Objects.equal(geoLocation, o.geoLocation);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.GeoLocations _product;
            private List<DataCiteMetadata.GeoLocations.GeoLocation.Builder<DataCiteMetadata.GeoLocations.Builder<TParentBuilder>>> geoLocation;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.GeoLocations _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    if (_other.geoLocation == null) {
                        this.geoLocation = null;
                    } else {
                        this.geoLocation = new ArrayList<DataCiteMetadata.GeoLocations.GeoLocation.Builder<DataCiteMetadata.GeoLocations.Builder<TParentBuilder>>>();
                        for (DataCiteMetadata.GeoLocations.GeoLocation _item: _other.geoLocation) {
                            this.geoLocation.add(((_other.geoLocation == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.GeoLocations.GeoLocation.Builder.class, _item, this, _item, true)));
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.GeoLocations _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree geoLocationPropertyTree = ((propertyTree == null)?null:propertyTree.get("geoLocation"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(geoLocationPropertyTree!= null):((geoLocationPropertyTree == null)||(!geoLocationPropertyTree.isLeaf())))) {
                        if (_other.geoLocation == null) {
                            this.geoLocation = null;
                        } else {
                            this.geoLocation = new ArrayList<DataCiteMetadata.GeoLocations.GeoLocation.Builder<DataCiteMetadata.GeoLocations.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.GeoLocations.GeoLocation _item: _other.geoLocation) {
                                this.geoLocation.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.GeoLocations.GeoLocation.Builder.class, _item, this, _item, true, geoLocationPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.GeoLocations >P init(final P product) {
                if (this.geoLocation!= null) {
                    final List<DataCiteMetadata.GeoLocations.GeoLocation> geoLocation = new ArrayList<DataCiteMetadata.GeoLocations.GeoLocation>(this.geoLocation.size());
                    for (DataCiteMetadata.GeoLocations.GeoLocation.Builder<DataCiteMetadata.GeoLocations.Builder<TParentBuilder>> _item: this.geoLocation) {
                        geoLocation.add(_item.build());
                    }
                    product.geoLocation = geoLocation;
                }
                return product;
            }

            /**
             * Adds the given items to the value of "geoLocation"
             * 
             * @param geoLocation
             *     Items to add to the value of the "geoLocation" property
             */
            public DataCiteMetadata.GeoLocations.Builder<TParentBuilder> addGeoLocation(final Collection<? extends DataCiteMetadata.GeoLocations.GeoLocation> geoLocation) {
                if (this.geoLocation == null) {
                    this.geoLocation = new ArrayList<DataCiteMetadata.GeoLocations.GeoLocation.Builder<DataCiteMetadata.GeoLocations.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadata.GeoLocations.GeoLocation _item: geoLocation) {
                    this.geoLocation.add(new DataCiteMetadata.GeoLocations.GeoLocation.Builder<DataCiteMetadata.GeoLocations.Builder<TParentBuilder>>(this, _item, false));
                }
                return this;
            }

            /**
             * Sets the new value of "geoLocation" (any previous value will be replaced)
             * 
             * @param geoLocation
             *     New value of the "geoLocation" property.
             */
            public DataCiteMetadata.GeoLocations.Builder<TParentBuilder> withGeoLocation(final Collection<? extends DataCiteMetadata.GeoLocations.GeoLocation> geoLocation) {
                if (this.geoLocation!= null) {
                    this.geoLocation.clear();
                }
                return addGeoLocation(geoLocation);
            }

            /**
             * Adds the given items to the value of "geoLocation"
             * 
             * @param geoLocation
             *     Items to add to the value of the "geoLocation" property
             */
            public DataCiteMetadata.GeoLocations.Builder<TParentBuilder> addGeoLocation(DataCiteMetadata.GeoLocations.GeoLocation... geoLocation) {
                addGeoLocation(Arrays.asList(geoLocation));
                return this;
            }

            /**
             * Sets the new value of "geoLocation" (any previous value will be replaced)
             * 
             * @param geoLocation
             *     New value of the "geoLocation" property.
             */
            public DataCiteMetadata.GeoLocations.Builder<TParentBuilder> withGeoLocation(DataCiteMetadata.GeoLocations.GeoLocation... geoLocation) {
                withGeoLocation(Arrays.asList(geoLocation));
                return this;
            }

            /**
             * Returns a new builder to build an additional value of the "geoLocation" property.
             * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.GeoLocations.GeoLocation.Builder#end()} to return to the current builder.
             * 
             * @return
             *     a new builder to build an additional value of the "geoLocation" property.
             *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.GeoLocations.GeoLocation.Builder#end()} to return to the current builder.
             */
            public DataCiteMetadata.GeoLocations.GeoLocation.Builder<? extends DataCiteMetadata.GeoLocations.Builder<TParentBuilder>> addGeoLocation() {
                if (this.geoLocation == null) {
                    this.geoLocation = new ArrayList<DataCiteMetadata.GeoLocations.GeoLocation.Builder<DataCiteMetadata.GeoLocations.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadata.GeoLocations.GeoLocation.Builder<DataCiteMetadata.GeoLocations.Builder<TParentBuilder>> geoLocationBuilder = new DataCiteMetadata.GeoLocations.GeoLocation.Builder<DataCiteMetadata.GeoLocations.Builder<TParentBuilder>>(this, null, false);
                this.geoLocation.add(geoLocationBuilder);
                return geoLocationBuilder;
            }

            public DataCiteMetadata.GeoLocations build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.GeoLocations());
                } else {
                    return ((DataCiteMetadata.GeoLocations) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;complexContent>
         *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *       &lt;choice maxOccurs="unbounded">
         *         &lt;element name="geoLocationPlace" type="{http://www.w3.org/2001/XMLSchema}anyType" minOccurs="0"/>
         *         &lt;element name="geoLocationPoint" type="{http://datacite.org/schema/kernel-4}point" minOccurs="0"/>
         *         &lt;element name="geoLocationBox" type="{http://datacite.org/schema/kernel-4}box" minOccurs="0"/>
         *         &lt;element name="geoLocationPolygon" maxOccurs="unbounded" minOccurs="0">
         *           &lt;complexType>
         *             &lt;complexContent>
         *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
         *                 &lt;sequence>
         *                   &lt;element name="polygonPoint" type="{http://datacite.org/schema/kernel-4}point" maxOccurs="unbounded" minOccurs="4"/>
         *                   &lt;element name="inPolygonPoint" type="{http://datacite.org/schema/kernel-4}point" minOccurs="0"/>
         *                 &lt;/sequence>
         *               &lt;/restriction>
         *             &lt;/complexContent>
         *           &lt;/complexType>
         *         &lt;/element>
         *       &lt;/choice>
         *     &lt;/restriction>
         *   &lt;/complexContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "geoLocationPlaceOrGeoLocationPointOrGeoLocationBox"
        })
        public static class GeoLocation {

            @XmlElements({
                @XmlElement(name = "geoLocationPlace"),
                @XmlElement(name = "geoLocationPoint", type = Point.class),
                @XmlElement(name = "geoLocationBox", type = Box.class),
                @XmlElement(name = "geoLocationPolygon", type = DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.class)
            })
            protected List<Object> geoLocationPlaceOrGeoLocationPointOrGeoLocationBox;

            /**
             * Gets the value of the geoLocationPlaceOrGeoLocationPointOrGeoLocationBox property.
             * 
             * <p>
             * This accessor method returns a reference to the live list,
             * not a snapshot. Therefore any modification you make to the
             * returned list will be present inside the JAXB object.
             * This is why there is not a <CODE>set</CODE> method for the geoLocationPlaceOrGeoLocationPointOrGeoLocationBox property.
             * 
             * <p>
             * For example, to add a new item, do as follows:
             * <pre>
             *    getGeoLocationPlaceOrGeoLocationPointOrGeoLocationBox().add(newItem);
             * </pre>
             * 
             * 
             * <p>
             * Objects of the following type(s) are allowed in the list
             * {@link Object }
             * {@link Point }
             * {@link Box }
             * {@link DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon }
             * 
             * 
             */
            public List<Object> getGeoLocationPlaceOrGeoLocationPointOrGeoLocationBox() {
                if (geoLocationPlaceOrGeoLocationPointOrGeoLocationBox == null) {
                    geoLocationPlaceOrGeoLocationPointOrGeoLocationBox = new ArrayList<Object>();
                }
                return this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox;
            }

            public static DataCiteMetadata.GeoLocations.GeoLocation.Builder<Void> builder() {
                return new DataCiteMetadata.GeoLocations.GeoLocation.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadata.GeoLocations.GeoLocation.Builder<Void> copyOf(final DataCiteMetadata.GeoLocations.GeoLocation _other) {
                return new DataCiteMetadata.GeoLocations.GeoLocation.Builder<Void>(null, _other, true);
            }

            public static DataCiteMetadata.GeoLocations.GeoLocation.Builder<Void> copyOf(final DataCiteMetadata.GeoLocations.GeoLocation _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                return new DataCiteMetadata.GeoLocations.GeoLocation.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
            }

            public static DataCiteMetadata.GeoLocations.GeoLocation.Builder<Void> copyExcept(final DataCiteMetadata.GeoLocations.GeoLocation _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadata.GeoLocations.GeoLocation.Builder<Void> copyOnly(final DataCiteMetadata.GeoLocations.GeoLocation _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("geoLocationPlaceOrGeoLocationPointOrGeoLocationBox", geoLocationPlaceOrGeoLocationPointOrGeoLocationBox).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(geoLocationPlaceOrGeoLocationPointOrGeoLocationBox);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadata.GeoLocations.GeoLocation o = ((DataCiteMetadata.GeoLocations.GeoLocation) other);
                return Objects.equal(geoLocationPlaceOrGeoLocationPointOrGeoLocationBox, o.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox);
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadata.GeoLocations.GeoLocation _product;
                private List<Object> geoLocationPlaceOrGeoLocationPointOrGeoLocationBox;

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.GeoLocations.GeoLocation _other, final boolean _copy) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox = ((_other.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox == null)?null:new ArrayList<Object>(_other.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox));
                    } else {
                        this._product = _other;
                    }
                }

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.GeoLocations.GeoLocation _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        final PropertyTree geoLocationPlaceOrGeoLocationPointOrGeoLocationBoxPropertyTree = ((propertyTree == null)?null:propertyTree.get("geoLocationPlaceOrGeoLocationPointOrGeoLocationBox"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(geoLocationPlaceOrGeoLocationPointOrGeoLocationBoxPropertyTree!= null):((geoLocationPlaceOrGeoLocationPointOrGeoLocationBoxPropertyTree == null)||(!geoLocationPlaceOrGeoLocationPointOrGeoLocationBoxPropertyTree.isLeaf())))) {
                            this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox = ((_other.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox == null)?null:new ArrayList<Object>(_other.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox));
                        }
                    } else {
                        this._product = _other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadata.GeoLocations.GeoLocation >P init(final P product) {
                    product.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox = this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox;
                    return product;
                }

                /**
                 * Adds the given items to the value of "geoLocationPlaceOrGeoLocationPointOrGeoLocationBox"
                 * 
                 * @param geoLocationPlaceOrGeoLocationPointOrGeoLocationBox
                 *     Items to add to the value of the "geoLocationPlaceOrGeoLocationPointOrGeoLocationBox" property
                 */
                public DataCiteMetadata.GeoLocations.GeoLocation.Builder<TParentBuilder> addGeoLocationPlaceOrGeoLocationPointOrGeoLocationBox(final Collection<?> geoLocationPlaceOrGeoLocationPointOrGeoLocationBox) {
                    if (this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox == null) {
                        this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox = new ArrayList<Object>();
                    }
                    this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox.addAll(geoLocationPlaceOrGeoLocationPointOrGeoLocationBox);
                    return this;
                }

                /**
                 * Sets the new value of "geoLocationPlaceOrGeoLocationPointOrGeoLocationBox" (any previous value will be replaced)
                 * 
                 * @param geoLocationPlaceOrGeoLocationPointOrGeoLocationBox
                 *     New value of the "geoLocationPlaceOrGeoLocationPointOrGeoLocationBox" property.
                 */
                public DataCiteMetadata.GeoLocations.GeoLocation.Builder<TParentBuilder> withGeoLocationPlaceOrGeoLocationPointOrGeoLocationBox(final Collection<?> geoLocationPlaceOrGeoLocationPointOrGeoLocationBox) {
                    if (this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox!= null) {
                        this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox.clear();
                    }
                    return addGeoLocationPlaceOrGeoLocationPointOrGeoLocationBox(geoLocationPlaceOrGeoLocationPointOrGeoLocationBox);
                }

                /**
                 * Adds the given items to the value of "geoLocationPlaceOrGeoLocationPointOrGeoLocationBox"
                 * 
                 * @param geoLocationPlaceOrGeoLocationPointOrGeoLocationBox
                 *     Items to add to the value of the "geoLocationPlaceOrGeoLocationPointOrGeoLocationBox" property
                 */
                public DataCiteMetadata.GeoLocations.GeoLocation.Builder<TParentBuilder> addGeoLocationPlaceOrGeoLocationPointOrGeoLocationBox(Object... geoLocationPlaceOrGeoLocationPointOrGeoLocationBox) {
                    addGeoLocationPlaceOrGeoLocationPointOrGeoLocationBox(Arrays.asList(geoLocationPlaceOrGeoLocationPointOrGeoLocationBox));
                    return this;
                }

                /**
                 * Sets the new value of "geoLocationPlaceOrGeoLocationPointOrGeoLocationBox" (any previous value will be replaced)
                 * 
                 * @param geoLocationPlaceOrGeoLocationPointOrGeoLocationBox
                 *     New value of the "geoLocationPlaceOrGeoLocationPointOrGeoLocationBox" property.
                 */
                public DataCiteMetadata.GeoLocations.GeoLocation.Builder<TParentBuilder> withGeoLocationPlaceOrGeoLocationPointOrGeoLocationBox(Object... geoLocationPlaceOrGeoLocationPointOrGeoLocationBox) {
                    withGeoLocationPlaceOrGeoLocationPointOrGeoLocationBox(Arrays.asList(geoLocationPlaceOrGeoLocationPointOrGeoLocationBox));
                    return this;
                }

                public DataCiteMetadata.GeoLocations.GeoLocation build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadata.GeoLocations.GeoLocation());
                    } else {
                        return ((DataCiteMetadata.GeoLocations.GeoLocation) this._product);
                    }
                }

            }


            /**
             * <p>Java class for anonymous complex type.
             * 
             * <p>The following schema fragment specifies the expected content contained within this class.
             * 
             * <pre>
             * &lt;complexType>
             *   &lt;complexContent>
             *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
             *       &lt;sequence>
             *         &lt;element name="polygonPoint" type="{http://datacite.org/schema/kernel-4}point" maxOccurs="unbounded" minOccurs="4"/>
             *         &lt;element name="inPolygonPoint" type="{http://datacite.org/schema/kernel-4}point" minOccurs="0"/>
             *       &lt;/sequence>
             *     &lt;/restriction>
             *   &lt;/complexContent>
             * &lt;/complexType>
             * </pre>
             * 
             * 
             */
            @XmlAccessorType(XmlAccessType.FIELD)
            @XmlType(name = "", propOrder = {
                "polygonPoint",
                "inPolygonPoint"
            })
            public static class GeoLocationPolygon {

                @XmlElement(required = true)
                protected List<Point> polygonPoint;
                protected Point inPolygonPoint;

                /**
                 * Gets the value of the polygonPoint property.
                 * 
                 * <p>
                 * This accessor method returns a reference to the live list,
                 * not a snapshot. Therefore any modification you make to the
                 * returned list will be present inside the JAXB object.
                 * This is why there is not a <CODE>set</CODE> method for the polygonPoint property.
                 * 
                 * <p>
                 * For example, to add a new item, do as follows:
                 * <pre>
                 *    getPolygonPoint().add(newItem);
                 * </pre>
                 * 
                 * 
                 * <p>
                 * Objects of the following type(s) are allowed in the list
                 * {@link Point }
                 * 
                 * 
                 */
                public List<Point> getPolygonPoint() {
                    if (polygonPoint == null) {
                        polygonPoint = new ArrayList<Point>();
                    }
                    return this.polygonPoint;
                }

                /**
                 * Gets the value of the inPolygonPoint property.
                 * 
                 * @return
                 *     possible object is
                 *     {@link Point }
                 *     
                 */
                public Point getInPolygonPoint() {
                    return inPolygonPoint;
                }

                /**
                 * Sets the value of the inPolygonPoint property.
                 * 
                 * @param value
                 *     allowed object is
                 *     {@link Point }
                 *     
                 */
                public void setInPolygonPoint(Point value) {
                    this.inPolygonPoint = value;
                }

                public static DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<Void> builder() {
                    return new DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<Void>(null, null, false);
                }

                public static DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<Void> copyOf(final DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon _other) {
                    return new DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<Void>(null, _other, true);
                }

                public static DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<Void> copyOf(final DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                    return new DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
                }

                public static DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<Void> copyExcept(final DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
                }

                public static DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<Void> copyOnly(final DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon _other, final PropertyTree _propertyTree) {
                    return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
                }

                @Override
                public String toString() {
                    return Objects.toStringHelper(this).add("polygonPoint", polygonPoint).add("inPolygonPoint", inPolygonPoint).toString();
                }

                @Override
                public int hashCode() {
                    return Objects.hashCode(polygonPoint, inPolygonPoint);
                }

                @Override
                public boolean equals(Object other) {
                    if (this == other) {
                        return true;
                    }
                    if (other == null) {
                        return false;
                    }
                    if (getClass()!= other.getClass()) {
                        return false;
                    }
                    final DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon o = ((DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon) other);
                    return (Objects.equal(polygonPoint, o.polygonPoint)&&Objects.equal(inPolygonPoint, o.inPolygonPoint));
                }

                public static class Builder<TParentBuilder >{

                    protected final TParentBuilder _parentBuilder;
                    protected final DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon _product;
                    private List<Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>>> polygonPoint;
                    private Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>> inPolygonPoint;

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon _other, final boolean _copy) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            if (_other.polygonPoint == null) {
                                this.polygonPoint = null;
                            } else {
                                this.polygonPoint = new ArrayList<Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>>>();
                                for (Point _item: _other.polygonPoint) {
                                    this.polygonPoint.add(((_other.polygonPoint == null)?null:BuilderUtilities.getBuilder(Point.Builder.class, _item, this, _item, true)));
                                }
                            }
                            this.inPolygonPoint = ((_other.inPolygonPoint == null)?null:BuilderUtilities.getBuilder(Point.Builder.class, _other.inPolygonPoint, this, _other.inPolygonPoint, true));
                        } else {
                            this._product = _other;
                        }
                    }

                    public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                        this._parentBuilder = _parentBuilder;
                        if (_copy) {
                            this._product = null;
                            final PropertyTree polygonPointPropertyTree = ((propertyTree == null)?null:propertyTree.get("polygonPoint"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(polygonPointPropertyTree!= null):((polygonPointPropertyTree == null)||(!polygonPointPropertyTree.isLeaf())))) {
                                if (_other.polygonPoint == null) {
                                    this.polygonPoint = null;
                                } else {
                                    this.polygonPoint = new ArrayList<Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>>>();
                                    for (Point _item: _other.polygonPoint) {
                                        this.polygonPoint.add(((_item == null)?null:BuilderUtilities.getBuilder(Point.Builder.class, _item, this, _item, true, polygonPointPropertyTree, treeUse)));
                                    }
                                }
                            }
                            final PropertyTree inPolygonPointPropertyTree = ((propertyTree == null)?null:propertyTree.get("inPolygonPoint"));
                            if (((treeUse == PropertyTreeUse.INCLUDE)?(inPolygonPointPropertyTree!= null):((inPolygonPointPropertyTree == null)||(!inPolygonPointPropertyTree.isLeaf())))) {
                                this.inPolygonPoint = ((_other.inPolygonPoint == null)?null:BuilderUtilities.getBuilder(Point.Builder.class, _other.inPolygonPoint, this, _other.inPolygonPoint, true, inPolygonPointPropertyTree, treeUse));
                            }
                        } else {
                            this._product = _other;
                        }
                    }

                    public TParentBuilder end() {
                        return this._parentBuilder;
                    }

                    protected<P extends DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon >P init(final P product) {
                        if (this.polygonPoint!= null) {
                            final List<Point> polygonPoint = new ArrayList<Point>(this.polygonPoint.size());
                            for (Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>> _item: this.polygonPoint) {
                                polygonPoint.add(_item.build());
                            }
                            product.polygonPoint = polygonPoint;
                        }
                        product.inPolygonPoint = ((this.inPolygonPoint == null)?null:this.inPolygonPoint.build());
                        return product;
                    }

                    /**
                     * Adds the given items to the value of "polygonPoint"
                     * 
                     * @param polygonPoint
                     *     Items to add to the value of the "polygonPoint" property
                     */
                    public DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder> addPolygonPoint(final Collection<? extends Point> polygonPoint) {
                        if (this.polygonPoint == null) {
                            this.polygonPoint = new ArrayList<Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>>>();
                        }
                        for (Point _item: polygonPoint) {
                            this.polygonPoint.add(new Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>>(this, _item, false));
                        }
                        return this;
                    }

                    /**
                     * Sets the new value of "polygonPoint" (any previous value will be replaced)
                     * 
                     * @param polygonPoint
                     *     New value of the "polygonPoint" property.
                     */
                    public DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder> withPolygonPoint(final Collection<? extends Point> polygonPoint) {
                        if (this.polygonPoint!= null) {
                            this.polygonPoint.clear();
                        }
                        return addPolygonPoint(polygonPoint);
                    }

                    /**
                     * Adds the given items to the value of "polygonPoint"
                     * 
                     * @param polygonPoint
                     *     Items to add to the value of the "polygonPoint" property
                     */
                    public DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder> addPolygonPoint(Point... polygonPoint) {
                        addPolygonPoint(Arrays.asList(polygonPoint));
                        return this;
                    }

                    /**
                     * Sets the new value of "polygonPoint" (any previous value will be replaced)
                     * 
                     * @param polygonPoint
                     *     New value of the "polygonPoint" property.
                     */
                    public DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder> withPolygonPoint(Point... polygonPoint) {
                        withPolygonPoint(Arrays.asList(polygonPoint));
                        return this;
                    }

                    /**
                     * Returns a new builder to build an additional value of the "polygonPoint" property.
                     * Use {@link org.gbif.doi.metadata.datacite.Point.Builder#end()} to return to the current builder.
                     * 
                     * @return
                     *     a new builder to build an additional value of the "polygonPoint" property.
                     *     Use {@link org.gbif.doi.metadata.datacite.Point.Builder#end()} to return to the current builder.
                     */
                    public Point.Builder<? extends DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>> addPolygonPoint() {
                        if (this.polygonPoint == null) {
                            this.polygonPoint = new ArrayList<Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>>>();
                        }
                        final Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>> polygonPointBuilder = new Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>>(this, null, false);
                        this.polygonPoint.add(polygonPointBuilder);
                        return polygonPointBuilder;
                    }

                    /**
                     * Sets the new value of "inPolygonPoint" (any previous value will be replaced)
                     * 
                     * @param inPolygonPoint
                     *     New value of the "inPolygonPoint" property.
                     */
                    public DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder> withInPolygonPoint(final Point inPolygonPoint) {
                        this.inPolygonPoint = ((inPolygonPoint == null)?null:new Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>>(this, inPolygonPoint, false));
                        return this;
                    }

                    /**
                     * Returns a new builder to build the value of the "inPolygonPoint" property (replacing previous value).
                     * Use {@link org.gbif.doi.metadata.datacite.Point.Builder#end()} to return to the current builder.
                     * 
                     * @return
                     *     A new builder to build the value of the "inPolygonPoint" property.
                     *     Use {@link org.gbif.doi.metadata.datacite.Point.Builder#end()} to return to the current builder.
                     */
                    public Point.Builder<? extends DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>> withInPolygonPoint() {
                        return this.inPolygonPoint = new Point.Builder<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Builder<TParentBuilder>>(this, null, false);
                    }

                    public DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon build() {
                        if (this._product == null) {
                            return this.init(new DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon());
                        } else {
                            return ((DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon) this._product);
                        }
                    }

                }

                public static class Select
                    extends DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Selector<DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Select, Void>
                {


                    Select() {
                        super(null, null, null);
                    }

                    public static DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Select _root() {
                        return new DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Select();
                    }

                }

                public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                    extends com.kscs.util.jaxb.Selector<TRoot, TParent>
                {

                    private Point.Selector<TRoot, DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Selector<TRoot, TParent>> polygonPoint = null;
                    private Point.Selector<TRoot, DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Selector<TRoot, TParent>> inPolygonPoint = null;

                    public Selector(final TRoot root, final TParent parent, final String propertyName) {
                        super(root, parent, propertyName);
                    }

                    @Override
                    public Map<String, PropertyTree> buildChildren() {
                        final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                        products.putAll(super.buildChildren());
                        if (this.polygonPoint!= null) {
                            products.put("polygonPoint", this.polygonPoint.init());
                        }
                        if (this.inPolygonPoint!= null) {
                            products.put("inPolygonPoint", this.inPolygonPoint.init());
                        }
                        return products;
                    }

                    public Point.Selector<TRoot, DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Selector<TRoot, TParent>> polygonPoint() {
                        return ((this.polygonPoint == null)?this.polygonPoint = new Point.Selector<TRoot, DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Selector<TRoot, TParent>>(this._root, this, "polygonPoint"):this.polygonPoint);
                    }

                    public Point.Selector<TRoot, DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Selector<TRoot, TParent>> inPolygonPoint() {
                        return ((this.inPolygonPoint == null)?this.inPolygonPoint = new Point.Selector<TRoot, DataCiteMetadata.GeoLocations.GeoLocation.GeoLocationPolygon.Selector<TRoot, TParent>>(this._root, this, "inPolygonPoint"):this.inPolygonPoint);
                    }

                }

            }

            public static class Select
                extends DataCiteMetadata.GeoLocations.GeoLocation.Selector<DataCiteMetadata.GeoLocations.GeoLocation.Select, Void>
            {


                Select() {
                    super(null, null, null);
                }

                public static DataCiteMetadata.GeoLocations.GeoLocation.Select _root() {
                    return new DataCiteMetadata.GeoLocations.GeoLocation.Select();
                }

            }

            public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                extends com.kscs.util.jaxb.Selector<TRoot, TParent>
            {

                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.GeoLocations.GeoLocation.Selector<TRoot, TParent>> geoLocationPlaceOrGeoLocationPointOrGeoLocationBox = null;

                public Selector(final TRoot root, final TParent parent, final String propertyName) {
                    super(root, parent, propertyName);
                }

                @Override
                public Map<String, PropertyTree> buildChildren() {
                    final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                    products.putAll(super.buildChildren());
                    if (this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox!= null) {
                        products.put("geoLocationPlaceOrGeoLocationPointOrGeoLocationBox", this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox.init());
                    }
                    return products;
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.GeoLocations.GeoLocation.Selector<TRoot, TParent>> geoLocationPlaceOrGeoLocationPointOrGeoLocationBox() {
                    return ((this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox == null)?this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.GeoLocations.GeoLocation.Selector<TRoot, TParent>>(this._root, this, "geoLocationPlaceOrGeoLocationPointOrGeoLocationBox"):this.geoLocationPlaceOrGeoLocationPointOrGeoLocationBox);
                }

            }

        }

        public static class Select
            extends DataCiteMetadata.GeoLocations.Selector<DataCiteMetadata.GeoLocations.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.GeoLocations.Select _root() {
                return new DataCiteMetadata.GeoLocations.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private DataCiteMetadata.GeoLocations.GeoLocation.Selector<TRoot, DataCiteMetadata.GeoLocations.Selector<TRoot, TParent>> geoLocation = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.geoLocation!= null) {
                    products.put("geoLocation", this.geoLocation.init());
                }
                return products;
            }

            public DataCiteMetadata.GeoLocations.GeoLocation.Selector<TRoot, DataCiteMetadata.GeoLocations.Selector<TRoot, TParent>> geoLocation() {
                return ((this.geoLocation == null)?this.geoLocation = new DataCiteMetadata.GeoLocations.GeoLocation.Selector<TRoot, DataCiteMetadata.GeoLocations.Selector<TRoot, TParent>>(this._root, this, "geoLocation"):this.geoLocation);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;simpleContent>
     *     &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
     *       &lt;attribute name="identifierType" use="required" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *     &lt;/extension>
     *   &lt;/simpleContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class Identifier {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "identifierType", required = true)
        @XmlSchemaType(name = "anySimpleType")
        protected String identifierType;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the identifierType property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getIdentifierType() {
            return identifierType;
        }

        /**
         * Sets the value of the identifierType property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setIdentifierType(String value) {
            this.identifierType = value;
        }

        public static DataCiteMetadata.Identifier.Builder<Void> builder() {
            return new DataCiteMetadata.Identifier.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.Identifier.Builder<Void> copyOf(final DataCiteMetadata.Identifier _other) {
            return new DataCiteMetadata.Identifier.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.Identifier.Builder<Void> copyOf(final DataCiteMetadata.Identifier _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.Identifier.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.Identifier.Builder<Void> copyExcept(final DataCiteMetadata.Identifier _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.Identifier.Builder<Void> copyOnly(final DataCiteMetadata.Identifier _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("value", value).add("identifierType", identifierType).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(value, identifierType);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.Identifier o = ((DataCiteMetadata.Identifier) other);
            return (Objects.equal(value, o.value)&&Objects.equal(identifierType, o.identifierType));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.Identifier _product;
            private String value;
            private String identifierType;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Identifier _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    this.value = _other.value;
                    this.identifierType = _other.identifierType;
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Identifier _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                        this.value = _other.value;
                    }
                    final PropertyTree identifierTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("identifierType"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(identifierTypePropertyTree!= null):((identifierTypePropertyTree == null)||(!identifierTypePropertyTree.isLeaf())))) {
                        this.identifierType = _other.identifierType;
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.Identifier >P init(final P product) {
                product.value = this.value;
                product.identifierType = this.identifierType;
                return product;
            }

            /**
             * Sets the new value of "value" (any previous value will be replaced)
             * 
             * @param value
             *     New value of the "value" property.
             */
            public DataCiteMetadata.Identifier.Builder<TParentBuilder> withValue(final String value) {
                this.value = value;
                return this;
            }

            /**
             * Sets the new value of "identifierType" (any previous value will be replaced)
             * 
             * @param identifierType
             *     New value of the "identifierType" property.
             */
            public DataCiteMetadata.Identifier.Builder<TParentBuilder> withIdentifierType(final String identifierType) {
                this.identifierType = identifierType;
                return this;
            }

            public DataCiteMetadata.Identifier build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.Identifier());
                } else {
                    return ((DataCiteMetadata.Identifier) this._product);
                }
            }

        }

        public static class Select
            extends DataCiteMetadata.Identifier.Selector<DataCiteMetadata.Identifier.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.Identifier.Select _root() {
                return new DataCiteMetadata.Identifier.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Identifier.Selector<TRoot, TParent>> value = null;
            private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Identifier.Selector<TRoot, TParent>> identifierType = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.value!= null) {
                    products.put("value", this.value.init());
                }
                if (this.identifierType!= null) {
                    products.put("identifierType", this.identifierType.init());
                }
                return products;
            }

            public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Identifier.Selector<TRoot, TParent>> value() {
                return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Identifier.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
            }

            public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Identifier.Selector<TRoot, TParent>> identifierType() {
                return ((this.identifierType == null)?this.identifierType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Identifier.Selector<TRoot, TParent>>(this._root, this, "identifierType"):this.identifierType);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;simpleContent>
     *     &lt;extension base="&lt;http://datacite.org/schema/kernel-4>nonemptycontentStringType">
     *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
     *     &lt;/extension>
     *   &lt;/simpleContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class Publisher {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
        protected String lang;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the lang property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getLang() {
            return lang;
        }

        /**
         * Sets the value of the lang property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setLang(String value) {
            this.lang = value;
        }

        public static DataCiteMetadata.Publisher.Builder<Void> builder() {
            return new DataCiteMetadata.Publisher.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.Publisher.Builder<Void> copyOf(final DataCiteMetadata.Publisher _other) {
            return new DataCiteMetadata.Publisher.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.Publisher.Builder<Void> copyOf(final DataCiteMetadata.Publisher _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.Publisher.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.Publisher.Builder<Void> copyExcept(final DataCiteMetadata.Publisher _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.Publisher.Builder<Void> copyOnly(final DataCiteMetadata.Publisher _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("value", value).add("lang", lang).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(value, lang);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.Publisher o = ((DataCiteMetadata.Publisher) other);
            return (Objects.equal(value, o.value)&&Objects.equal(lang, o.lang));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.Publisher _product;
            private String value;
            private String lang;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Publisher _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    this.value = _other.value;
                    this.lang = _other.lang;
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Publisher _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                        this.value = _other.value;
                    }
                    final PropertyTree langPropertyTree = ((propertyTree == null)?null:propertyTree.get("lang"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(langPropertyTree!= null):((langPropertyTree == null)||(!langPropertyTree.isLeaf())))) {
                        this.lang = _other.lang;
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.Publisher >P init(final P product) {
                product.value = this.value;
                product.lang = this.lang;
                return product;
            }

            /**
             * Sets the new value of "value" (any previous value will be replaced)
             * 
             * @param value
             *     New value of the "value" property.
             */
            public DataCiteMetadata.Publisher.Builder<TParentBuilder> withValue(final String value) {
                this.value = value;
                return this;
            }

            /**
             * Sets the new value of "lang" (any previous value will be replaced)
             * 
             * @param lang
             *     New value of the "lang" property.
             */
            public DataCiteMetadata.Publisher.Builder<TParentBuilder> withLang(final String lang) {
                this.lang = lang;
                return this;
            }

            public DataCiteMetadata.Publisher build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.Publisher());
                } else {
                    return ((DataCiteMetadata.Publisher) this._product);
                }
            }

        }

        public static class Select
            extends DataCiteMetadata.Publisher.Selector<DataCiteMetadata.Publisher.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.Publisher.Select _root() {
                return new DataCiteMetadata.Publisher.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Publisher.Selector<TRoot, TParent>> value = null;
            private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Publisher.Selector<TRoot, TParent>> lang = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.value!= null) {
                    products.put("value", this.value.init());
                }
                if (this.lang!= null) {
                    products.put("lang", this.lang.init());
                }
                return products;
            }

            public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Publisher.Selector<TRoot, TParent>> value() {
                return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Publisher.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
            }

            public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Publisher.Selector<TRoot, TParent>> lang() {
                return ((this.lang == null)?this.lang = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Publisher.Selector<TRoot, TParent>>(this._root, this, "lang"):this.lang);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="relatedIdentifier" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="resourceTypeGeneral" type="{http://datacite.org/schema/kernel-4}resourceType" />
     *                 &lt;attribute name="relatedIdentifierType" use="required" type="{http://datacite.org/schema/kernel-4}relatedIdentifierType" />
     *                 &lt;attribute name="relationType" use="required" type="{http://datacite.org/schema/kernel-4}relationType" />
     *                 &lt;attribute name="relatedMetadataScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *                 &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                 &lt;attribute name="schemeType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "relatedIdentifier"
    })
    public static class RelatedIdentifiers {

        protected List<DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier> relatedIdentifier;

        /**
         * Gets the value of the relatedIdentifier property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the relatedIdentifier property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getRelatedIdentifier().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier }
         * 
         * 
         */
        public List<DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier> getRelatedIdentifier() {
            if (relatedIdentifier == null) {
                relatedIdentifier = new ArrayList<DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier>();
            }
            return this.relatedIdentifier;
        }

        public static DataCiteMetadata.RelatedIdentifiers.Builder<Void> builder() {
            return new DataCiteMetadata.RelatedIdentifiers.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.RelatedIdentifiers.Builder<Void> copyOf(final DataCiteMetadata.RelatedIdentifiers _other) {
            return new DataCiteMetadata.RelatedIdentifiers.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.RelatedIdentifiers.Builder<Void> copyOf(final DataCiteMetadata.RelatedIdentifiers _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.RelatedIdentifiers.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.RelatedIdentifiers.Builder<Void> copyExcept(final DataCiteMetadata.RelatedIdentifiers _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.RelatedIdentifiers.Builder<Void> copyOnly(final DataCiteMetadata.RelatedIdentifiers _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("relatedIdentifier", relatedIdentifier).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(relatedIdentifier);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.RelatedIdentifiers o = ((DataCiteMetadata.RelatedIdentifiers) other);
            return Objects.equal(relatedIdentifier, o.relatedIdentifier);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.RelatedIdentifiers _product;
            private List<DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder>>> relatedIdentifier;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.RelatedIdentifiers _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    if (_other.relatedIdentifier == null) {
                        this.relatedIdentifier = null;
                    } else {
                        this.relatedIdentifier = new ArrayList<DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder>>>();
                        for (DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier _item: _other.relatedIdentifier) {
                            this.relatedIdentifier.add(((_other.relatedIdentifier == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder.class, _item, this, _item, true)));
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.RelatedIdentifiers _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree relatedIdentifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("relatedIdentifier"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(relatedIdentifierPropertyTree!= null):((relatedIdentifierPropertyTree == null)||(!relatedIdentifierPropertyTree.isLeaf())))) {
                        if (_other.relatedIdentifier == null) {
                            this.relatedIdentifier = null;
                        } else {
                            this.relatedIdentifier = new ArrayList<DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier _item: _other.relatedIdentifier) {
                                this.relatedIdentifier.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder.class, _item, this, _item, true, relatedIdentifierPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.RelatedIdentifiers >P init(final P product) {
                if (this.relatedIdentifier!= null) {
                    final List<DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier> relatedIdentifier = new ArrayList<DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier>(this.relatedIdentifier.size());
                    for (DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder>> _item: this.relatedIdentifier) {
                        relatedIdentifier.add(_item.build());
                    }
                    product.relatedIdentifier = relatedIdentifier;
                }
                return product;
            }

            /**
             * Adds the given items to the value of "relatedIdentifier"
             * 
             * @param relatedIdentifier
             *     Items to add to the value of the "relatedIdentifier" property
             */
            public DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder> addRelatedIdentifier(final Collection<? extends DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier> relatedIdentifier) {
                if (this.relatedIdentifier == null) {
                    this.relatedIdentifier = new ArrayList<DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier _item: relatedIdentifier) {
                    this.relatedIdentifier.add(new DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder>>(this, _item, false));
                }
                return this;
            }

            /**
             * Sets the new value of "relatedIdentifier" (any previous value will be replaced)
             * 
             * @param relatedIdentifier
             *     New value of the "relatedIdentifier" property.
             */
            public DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder> withRelatedIdentifier(final Collection<? extends DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier> relatedIdentifier) {
                if (this.relatedIdentifier!= null) {
                    this.relatedIdentifier.clear();
                }
                return addRelatedIdentifier(relatedIdentifier);
            }

            /**
             * Adds the given items to the value of "relatedIdentifier"
             * 
             * @param relatedIdentifier
             *     Items to add to the value of the "relatedIdentifier" property
             */
            public DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder> addRelatedIdentifier(DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier... relatedIdentifier) {
                addRelatedIdentifier(Arrays.asList(relatedIdentifier));
                return this;
            }

            /**
             * Sets the new value of "relatedIdentifier" (any previous value will be replaced)
             * 
             * @param relatedIdentifier
             *     New value of the "relatedIdentifier" property.
             */
            public DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder> withRelatedIdentifier(DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier... relatedIdentifier) {
                withRelatedIdentifier(Arrays.asList(relatedIdentifier));
                return this;
            }

            /**
             * Returns a new builder to build an additional value of the "relatedIdentifier" property.
             * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder#end()} to return to the current builder.
             * 
             * @return
             *     a new builder to build an additional value of the "relatedIdentifier" property.
             *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder#end()} to return to the current builder.
             */
            public DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<? extends DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder>> addRelatedIdentifier() {
                if (this.relatedIdentifier == null) {
                    this.relatedIdentifier = new ArrayList<DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder>> relatedIdentifierBuilder = new DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<DataCiteMetadata.RelatedIdentifiers.Builder<TParentBuilder>>(this, null, false);
                this.relatedIdentifier.add(relatedIdentifierBuilder);
                return relatedIdentifierBuilder;
            }

            public DataCiteMetadata.RelatedIdentifiers build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.RelatedIdentifiers());
                } else {
                    return ((DataCiteMetadata.RelatedIdentifiers) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="resourceTypeGeneral" type="{http://datacite.org/schema/kernel-4}resourceType" />
         *       &lt;attribute name="relatedIdentifierType" use="required" type="{http://datacite.org/schema/kernel-4}relatedIdentifierType" />
         *       &lt;attribute name="relationType" use="required" type="{http://datacite.org/schema/kernel-4}relationType" />
         *       &lt;attribute name="relatedMetadataScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *       &lt;attribute name="schemeType" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class RelatedIdentifier {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "resourceTypeGeneral")
            protected org.gbif.doi.metadata.datacite.ResourceType resourceTypeGeneral;
            @XmlAttribute(name = "relatedIdentifierType", required = true)
            protected RelatedIdentifierType relatedIdentifierType;
            @XmlAttribute(name = "relationType", required = true)
            protected RelationType relationType;
            @XmlAttribute(name = "relatedMetadataScheme")
            @XmlSchemaType(name = "anySimpleType")
            protected String relatedMetadataScheme;
            @XmlAttribute(name = "schemeURI")
            @XmlSchemaType(name = "anyURI")
            protected String schemeURI;
            @XmlAttribute(name = "schemeType")
            @XmlSchemaType(name = "anySimpleType")
            protected String schemeType;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the resourceTypeGeneral property.
             * 
             * @return
             *     possible object is
             *     {@link org.gbif.doi.metadata.datacite.ResourceType }
             *     
             */
            public org.gbif.doi.metadata.datacite.ResourceType getResourceTypeGeneral() {
                return resourceTypeGeneral;
            }

            /**
             * Sets the value of the resourceTypeGeneral property.
             * 
             * @param value
             *     allowed object is
             *     {@link org.gbif.doi.metadata.datacite.ResourceType }
             *     
             */
            public void setResourceTypeGeneral(org.gbif.doi.metadata.datacite.ResourceType value) {
                this.resourceTypeGeneral = value;
            }

            /**
             * Gets the value of the relatedIdentifierType property.
             * 
             * @return
             *     possible object is
             *     {@link RelatedIdentifierType }
             *     
             */
            public RelatedIdentifierType getRelatedIdentifierType() {
                return relatedIdentifierType;
            }

            /**
             * Sets the value of the relatedIdentifierType property.
             * 
             * @param value
             *     allowed object is
             *     {@link RelatedIdentifierType }
             *     
             */
            public void setRelatedIdentifierType(RelatedIdentifierType value) {
                this.relatedIdentifierType = value;
            }

            /**
             * Gets the value of the relationType property.
             * 
             * @return
             *     possible object is
             *     {@link RelationType }
             *     
             */
            public RelationType getRelationType() {
                return relationType;
            }

            /**
             * Sets the value of the relationType property.
             * 
             * @param value
             *     allowed object is
             *     {@link RelationType }
             *     
             */
            public void setRelationType(RelationType value) {
                this.relationType = value;
            }

            /**
             * Gets the value of the relatedMetadataScheme property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getRelatedMetadataScheme() {
                return relatedMetadataScheme;
            }

            /**
             * Sets the value of the relatedMetadataScheme property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setRelatedMetadataScheme(String value) {
                this.relatedMetadataScheme = value;
            }

            /**
             * Gets the value of the schemeURI property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getSchemeURI() {
                return schemeURI;
            }

            /**
             * Sets the value of the schemeURI property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setSchemeURI(String value) {
                this.schemeURI = value;
            }

            /**
             * Gets the value of the schemeType property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getSchemeType() {
                return schemeType;
            }

            /**
             * Sets the value of the schemeType property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setSchemeType(String value) {
                this.schemeType = value;
            }

            public static DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<Void> builder() {
                return new DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<Void> copyOf(final DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier _other) {
                return new DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<Void>(null, _other, true);
            }

            public static DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<Void> copyOf(final DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                return new DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
            }

            public static DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<Void> copyExcept(final DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<Void> copyOnly(final DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("resourceTypeGeneral", resourceTypeGeneral).add("relatedIdentifierType", relatedIdentifierType).add("relationType", relationType).add("relatedMetadataScheme", relatedMetadataScheme).add("schemeURI", schemeURI).add("schemeType", schemeType).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, resourceTypeGeneral, relatedIdentifierType, relationType, relatedMetadataScheme, schemeURI, schemeType);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier o = ((DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier) other);
                return ((((((Objects.equal(value, o.value)&&Objects.equal(resourceTypeGeneral, o.resourceTypeGeneral))&&Objects.equal(relatedIdentifierType, o.relatedIdentifierType))&&Objects.equal(relationType, o.relationType))&&Objects.equal(relatedMetadataScheme, o.relatedMetadataScheme))&&Objects.equal(schemeURI, o.schemeURI))&&Objects.equal(schemeType, o.schemeType));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier _product;
                private String value;
                private org.gbif.doi.metadata.datacite.ResourceType resourceTypeGeneral;
                private RelatedIdentifierType relatedIdentifierType;
                private RelationType relationType;
                private String relatedMetadataScheme;
                private String schemeURI;
                private String schemeType;

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier _other, final boolean _copy) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        this.value = _other.value;
                        this.resourceTypeGeneral = _other.resourceTypeGeneral;
                        this.relatedIdentifierType = _other.relatedIdentifierType;
                        this.relationType = _other.relationType;
                        this.relatedMetadataScheme = _other.relatedMetadataScheme;
                        this.schemeURI = _other.schemeURI;
                        this.schemeType = _other.schemeType;
                    } else {
                        this._product = _other;
                    }
                }

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = _other.value;
                        }
                        final PropertyTree resourceTypeGeneralPropertyTree = ((propertyTree == null)?null:propertyTree.get("resourceTypeGeneral"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(resourceTypeGeneralPropertyTree!= null):((resourceTypeGeneralPropertyTree == null)||(!resourceTypeGeneralPropertyTree.isLeaf())))) {
                            this.resourceTypeGeneral = _other.resourceTypeGeneral;
                        }
                        final PropertyTree relatedIdentifierTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("relatedIdentifierType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(relatedIdentifierTypePropertyTree!= null):((relatedIdentifierTypePropertyTree == null)||(!relatedIdentifierTypePropertyTree.isLeaf())))) {
                            this.relatedIdentifierType = _other.relatedIdentifierType;
                        }
                        final PropertyTree relationTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("relationType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(relationTypePropertyTree!= null):((relationTypePropertyTree == null)||(!relationTypePropertyTree.isLeaf())))) {
                            this.relationType = _other.relationType;
                        }
                        final PropertyTree relatedMetadataSchemePropertyTree = ((propertyTree == null)?null:propertyTree.get("relatedMetadataScheme"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(relatedMetadataSchemePropertyTree!= null):((relatedMetadataSchemePropertyTree == null)||(!relatedMetadataSchemePropertyTree.isLeaf())))) {
                            this.relatedMetadataScheme = _other.relatedMetadataScheme;
                        }
                        final PropertyTree schemeURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("schemeURI"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(schemeURIPropertyTree!= null):((schemeURIPropertyTree == null)||(!schemeURIPropertyTree.isLeaf())))) {
                            this.schemeURI = _other.schemeURI;
                        }
                        final PropertyTree schemeTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("schemeType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(schemeTypePropertyTree!= null):((schemeTypePropertyTree == null)||(!schemeTypePropertyTree.isLeaf())))) {
                            this.schemeType = _other.schemeType;
                        }
                    } else {
                        this._product = _other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier >P init(final P product) {
                    product.value = this.value;
                    product.resourceTypeGeneral = this.resourceTypeGeneral;
                    product.relatedIdentifierType = this.relatedIdentifierType;
                    product.relationType = this.relationType;
                    product.relatedMetadataScheme = this.relatedMetadataScheme;
                    product.schemeURI = this.schemeURI;
                    product.schemeType = this.schemeType;
                    return product;
                }

                /**
                 * Sets the new value of "value" (any previous value will be replaced)
                 * 
                 * @param value
                 *     New value of the "value" property.
                 */
                public DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                /**
                 * Sets the new value of "resourceTypeGeneral" (any previous value will be replaced)
                 * 
                 * @param resourceTypeGeneral
                 *     New value of the "resourceTypeGeneral" property.
                 */
                public DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withResourceTypeGeneral(final org.gbif.doi.metadata.datacite.ResourceType resourceTypeGeneral) {
                    this.resourceTypeGeneral = resourceTypeGeneral;
                    return this;
                }

                /**
                 * Sets the new value of "relatedIdentifierType" (any previous value will be replaced)
                 * 
                 * @param relatedIdentifierType
                 *     New value of the "relatedIdentifierType" property.
                 */
                public DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withRelatedIdentifierType(final RelatedIdentifierType relatedIdentifierType) {
                    this.relatedIdentifierType = relatedIdentifierType;
                    return this;
                }

                /**
                 * Sets the new value of "relationType" (any previous value will be replaced)
                 * 
                 * @param relationType
                 *     New value of the "relationType" property.
                 */
                public DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withRelationType(final RelationType relationType) {
                    this.relationType = relationType;
                    return this;
                }

                /**
                 * Sets the new value of "relatedMetadataScheme" (any previous value will be replaced)
                 * 
                 * @param relatedMetadataScheme
                 *     New value of the "relatedMetadataScheme" property.
                 */
                public DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withRelatedMetadataScheme(final String relatedMetadataScheme) {
                    this.relatedMetadataScheme = relatedMetadataScheme;
                    return this;
                }

                /**
                 * Sets the new value of "schemeURI" (any previous value will be replaced)
                 * 
                 * @param schemeURI
                 *     New value of the "schemeURI" property.
                 */
                public DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withSchemeURI(final String schemeURI) {
                    this.schemeURI = schemeURI;
                    return this;
                }

                /**
                 * Sets the new value of "schemeType" (any previous value will be replaced)
                 * 
                 * @param schemeType
                 *     New value of the "schemeType" property.
                 */
                public DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Builder<TParentBuilder> withSchemeType(final String schemeType) {
                    this.schemeType = schemeType;
                    return this;
                }

                public DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier());
                    } else {
                        return ((DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier) this._product);
                    }
                }

            }

            public static class Select
                extends DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Select, Void>
            {


                Select() {
                    super(null, null, null);
                }

                public static DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Select _root() {
                    return new DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Select();
                }

            }

            public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                extends com.kscs.util.jaxb.Selector<TRoot, TParent>
            {

                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> value = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> resourceTypeGeneral = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> relatedIdentifierType = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> relationType = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> relatedMetadataScheme = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> schemeURI = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> schemeType = null;

                public Selector(final TRoot root, final TParent parent, final String propertyName) {
                    super(root, parent, propertyName);
                }

                @Override
                public Map<String, PropertyTree> buildChildren() {
                    final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                    products.putAll(super.buildChildren());
                    if (this.value!= null) {
                        products.put("value", this.value.init());
                    }
                    if (this.resourceTypeGeneral!= null) {
                        products.put("resourceTypeGeneral", this.resourceTypeGeneral.init());
                    }
                    if (this.relatedIdentifierType!= null) {
                        products.put("relatedIdentifierType", this.relatedIdentifierType.init());
                    }
                    if (this.relationType!= null) {
                        products.put("relationType", this.relationType.init());
                    }
                    if (this.relatedMetadataScheme!= null) {
                        products.put("relatedMetadataScheme", this.relatedMetadataScheme.init());
                    }
                    if (this.schemeURI!= null) {
                        products.put("schemeURI", this.schemeURI.init());
                    }
                    if (this.schemeType!= null) {
                        products.put("schemeType", this.schemeType.init());
                    }
                    return products;
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> value() {
                    return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> resourceTypeGeneral() {
                    return ((this.resourceTypeGeneral == null)?this.resourceTypeGeneral = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>>(this._root, this, "resourceTypeGeneral"):this.resourceTypeGeneral);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> relatedIdentifierType() {
                    return ((this.relatedIdentifierType == null)?this.relatedIdentifierType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>>(this._root, this, "relatedIdentifierType"):this.relatedIdentifierType);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> relationType() {
                    return ((this.relationType == null)?this.relationType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>>(this._root, this, "relationType"):this.relationType);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> relatedMetadataScheme() {
                    return ((this.relatedMetadataScheme == null)?this.relatedMetadataScheme = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>>(this._root, this, "relatedMetadataScheme"):this.relatedMetadataScheme);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> schemeURI() {
                    return ((this.schemeURI == null)?this.schemeURI = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>>(this._root, this, "schemeURI"):this.schemeURI);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>> schemeType() {
                    return ((this.schemeType == null)?this.schemeType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, TParent>>(this._root, this, "schemeType"):this.schemeType);
                }

            }

        }

        public static class Select
            extends DataCiteMetadata.RelatedIdentifiers.Selector<DataCiteMetadata.RelatedIdentifiers.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.RelatedIdentifiers.Select _root() {
                return new DataCiteMetadata.RelatedIdentifiers.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.Selector<TRoot, TParent>> relatedIdentifier = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.relatedIdentifier!= null) {
                    products.put("relatedIdentifier", this.relatedIdentifier.init());
                }
                return products;
            }

            public DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.Selector<TRoot, TParent>> relatedIdentifier() {
                return ((this.relatedIdentifier == null)?this.relatedIdentifier = new DataCiteMetadata.RelatedIdentifiers.RelatedIdentifier.Selector<TRoot, DataCiteMetadata.RelatedIdentifiers.Selector<TRoot, TParent>>(this._root, this, "relatedIdentifier"):this.relatedIdentifier);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;simpleContent>
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *       &lt;attribute name="resourceTypeGeneral" use="required" type="{http://datacite.org/schema/kernel-4}resourceType" />
     *     &lt;/extension>
     *   &lt;/simpleContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "value"
    })
    public static class ResourceType {

        @XmlValue
        protected String value;
        @XmlAttribute(name = "resourceTypeGeneral", required = true)
        protected org.gbif.doi.metadata.datacite.ResourceType resourceTypeGeneral;

        /**
         * Gets the value of the value property.
         * 
         * @return
         *     possible object is
         *     {@link String }
         *     
         */
        public String getValue() {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *     allowed object is
         *     {@link String }
         *     
         */
        public void setValue(String value) {
            this.value = value;
        }

        /**
         * Gets the value of the resourceTypeGeneral property.
         * 
         * @return
         *     possible object is
         *     {@link org.gbif.doi.metadata.datacite.ResourceType }
         *     
         */
        public org.gbif.doi.metadata.datacite.ResourceType getResourceTypeGeneral() {
            return resourceTypeGeneral;
        }

        /**
         * Sets the value of the resourceTypeGeneral property.
         * 
         * @param value
         *     allowed object is
         *     {@link org.gbif.doi.metadata.datacite.ResourceType }
         *     
         */
        public void setResourceTypeGeneral(org.gbif.doi.metadata.datacite.ResourceType value) {
            this.resourceTypeGeneral = value;
        }

        public static DataCiteMetadata.ResourceType.Builder<Void> builder() {
            return new DataCiteMetadata.ResourceType.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.ResourceType.Builder<Void> copyOf(final DataCiteMetadata.ResourceType _other) {
            return new DataCiteMetadata.ResourceType.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.ResourceType.Builder<Void> copyOf(final DataCiteMetadata.ResourceType _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.ResourceType.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.ResourceType.Builder<Void> copyExcept(final DataCiteMetadata.ResourceType _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.ResourceType.Builder<Void> copyOnly(final DataCiteMetadata.ResourceType _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("value", value).add("resourceTypeGeneral", resourceTypeGeneral).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(value, resourceTypeGeneral);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.ResourceType o = ((DataCiteMetadata.ResourceType) other);
            return (Objects.equal(value, o.value)&&Objects.equal(resourceTypeGeneral, o.resourceTypeGeneral));
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.ResourceType _product;
            private String value;
            private org.gbif.doi.metadata.datacite.ResourceType resourceTypeGeneral;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.ResourceType _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    this.value = _other.value;
                    this.resourceTypeGeneral = _other.resourceTypeGeneral;
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.ResourceType _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                        this.value = _other.value;
                    }
                    final PropertyTree resourceTypeGeneralPropertyTree = ((propertyTree == null)?null:propertyTree.get("resourceTypeGeneral"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(resourceTypeGeneralPropertyTree!= null):((resourceTypeGeneralPropertyTree == null)||(!resourceTypeGeneralPropertyTree.isLeaf())))) {
                        this.resourceTypeGeneral = _other.resourceTypeGeneral;
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.ResourceType >P init(final P product) {
                product.value = this.value;
                product.resourceTypeGeneral = this.resourceTypeGeneral;
                return product;
            }

            /**
             * Sets the new value of "value" (any previous value will be replaced)
             * 
             * @param value
             *     New value of the "value" property.
             */
            public DataCiteMetadata.ResourceType.Builder<TParentBuilder> withValue(final String value) {
                this.value = value;
                return this;
            }

            /**
             * Sets the new value of "resourceTypeGeneral" (any previous value will be replaced)
             * 
             * @param resourceTypeGeneral
             *     New value of the "resourceTypeGeneral" property.
             */
            public DataCiteMetadata.ResourceType.Builder<TParentBuilder> withResourceTypeGeneral(final org.gbif.doi.metadata.datacite.ResourceType resourceTypeGeneral) {
                this.resourceTypeGeneral = resourceTypeGeneral;
                return this;
            }

            public DataCiteMetadata.ResourceType build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.ResourceType());
                } else {
                    return ((DataCiteMetadata.ResourceType) this._product);
                }
            }

        }

        public static class Select
            extends DataCiteMetadata.ResourceType.Selector<DataCiteMetadata.ResourceType.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.ResourceType.Select _root() {
                return new DataCiteMetadata.ResourceType.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.ResourceType.Selector<TRoot, TParent>> value = null;
            private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.ResourceType.Selector<TRoot, TParent>> resourceTypeGeneral = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.value!= null) {
                    products.put("value", this.value.init());
                }
                if (this.resourceTypeGeneral!= null) {
                    products.put("resourceTypeGeneral", this.resourceTypeGeneral.init());
                }
                return products;
            }

            public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.ResourceType.Selector<TRoot, TParent>> value() {
                return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.ResourceType.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
            }

            public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.ResourceType.Selector<TRoot, TParent>> resourceTypeGeneral() {
                return ((this.resourceTypeGeneral == null)?this.resourceTypeGeneral = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.ResourceType.Selector<TRoot, TParent>>(this._root, this, "resourceTypeGeneral"):this.resourceTypeGeneral);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="rights" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="rightsURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                 &lt;attribute name="rightsIdentifier" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *                 &lt;attribute name="rightsIdentifierScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *                 &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                 &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "rights"
    })
    public static class RightsList {

        protected List<DataCiteMetadata.RightsList.Rights> rights;

        /**
         * Gets the value of the rights property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the rights property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getRights().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DataCiteMetadata.RightsList.Rights }
         * 
         * 
         */
        public List<DataCiteMetadata.RightsList.Rights> getRights() {
            if (rights == null) {
                rights = new ArrayList<DataCiteMetadata.RightsList.Rights>();
            }
            return this.rights;
        }

        public static DataCiteMetadata.RightsList.Builder<Void> builder() {
            return new DataCiteMetadata.RightsList.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.RightsList.Builder<Void> copyOf(final DataCiteMetadata.RightsList _other) {
            return new DataCiteMetadata.RightsList.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.RightsList.Builder<Void> copyOf(final DataCiteMetadata.RightsList _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.RightsList.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.RightsList.Builder<Void> copyExcept(final DataCiteMetadata.RightsList _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.RightsList.Builder<Void> copyOnly(final DataCiteMetadata.RightsList _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("rights", rights).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(rights);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.RightsList o = ((DataCiteMetadata.RightsList) other);
            return Objects.equal(rights, o.rights);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.RightsList _product;
            private List<DataCiteMetadata.RightsList.Rights.Builder<DataCiteMetadata.RightsList.Builder<TParentBuilder>>> rights;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.RightsList _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    if (_other.rights == null) {
                        this.rights = null;
                    } else {
                        this.rights = new ArrayList<DataCiteMetadata.RightsList.Rights.Builder<DataCiteMetadata.RightsList.Builder<TParentBuilder>>>();
                        for (DataCiteMetadata.RightsList.Rights _item: _other.rights) {
                            this.rights.add(((_other.rights == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.RightsList.Rights.Builder.class, _item, this, _item, true)));
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.RightsList _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree rightsPropertyTree = ((propertyTree == null)?null:propertyTree.get("rights"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(rightsPropertyTree!= null):((rightsPropertyTree == null)||(!rightsPropertyTree.isLeaf())))) {
                        if (_other.rights == null) {
                            this.rights = null;
                        } else {
                            this.rights = new ArrayList<DataCiteMetadata.RightsList.Rights.Builder<DataCiteMetadata.RightsList.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.RightsList.Rights _item: _other.rights) {
                                this.rights.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.RightsList.Rights.Builder.class, _item, this, _item, true, rightsPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.RightsList >P init(final P product) {
                if (this.rights!= null) {
                    final List<DataCiteMetadata.RightsList.Rights> rights = new ArrayList<DataCiteMetadata.RightsList.Rights>(this.rights.size());
                    for (DataCiteMetadata.RightsList.Rights.Builder<DataCiteMetadata.RightsList.Builder<TParentBuilder>> _item: this.rights) {
                        rights.add(_item.build());
                    }
                    product.rights = rights;
                }
                return product;
            }

            /**
             * Adds the given items to the value of "rights"
             * 
             * @param rights
             *     Items to add to the value of the "rights" property
             */
            public DataCiteMetadata.RightsList.Builder<TParentBuilder> addRights(final Collection<? extends DataCiteMetadata.RightsList.Rights> rights) {
                if (this.rights == null) {
                    this.rights = new ArrayList<DataCiteMetadata.RightsList.Rights.Builder<DataCiteMetadata.RightsList.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadata.RightsList.Rights _item: rights) {
                    this.rights.add(new DataCiteMetadata.RightsList.Rights.Builder<DataCiteMetadata.RightsList.Builder<TParentBuilder>>(this, _item, false));
                }
                return this;
            }

            /**
             * Sets the new value of "rights" (any previous value will be replaced)
             * 
             * @param rights
             *     New value of the "rights" property.
             */
            public DataCiteMetadata.RightsList.Builder<TParentBuilder> withRights(final Collection<? extends DataCiteMetadata.RightsList.Rights> rights) {
                if (this.rights!= null) {
                    this.rights.clear();
                }
                return addRights(rights);
            }

            /**
             * Adds the given items to the value of "rights"
             * 
             * @param rights
             *     Items to add to the value of the "rights" property
             */
            public DataCiteMetadata.RightsList.Builder<TParentBuilder> addRights(DataCiteMetadata.RightsList.Rights... rights) {
                addRights(Arrays.asList(rights));
                return this;
            }

            /**
             * Sets the new value of "rights" (any previous value will be replaced)
             * 
             * @param rights
             *     New value of the "rights" property.
             */
            public DataCiteMetadata.RightsList.Builder<TParentBuilder> withRights(DataCiteMetadata.RightsList.Rights... rights) {
                withRights(Arrays.asList(rights));
                return this;
            }

            /**
             * Returns a new builder to build an additional value of the "rights" property.
             * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.RightsList.Rights.Builder#end()} to return to the current builder.
             * 
             * @return
             *     a new builder to build an additional value of the "rights" property.
             *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.RightsList.Rights.Builder#end()} to return to the current builder.
             */
            public DataCiteMetadata.RightsList.Rights.Builder<? extends DataCiteMetadata.RightsList.Builder<TParentBuilder>> addRights() {
                if (this.rights == null) {
                    this.rights = new ArrayList<DataCiteMetadata.RightsList.Rights.Builder<DataCiteMetadata.RightsList.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadata.RightsList.Rights.Builder<DataCiteMetadata.RightsList.Builder<TParentBuilder>> rightsBuilder = new DataCiteMetadata.RightsList.Rights.Builder<DataCiteMetadata.RightsList.Builder<TParentBuilder>>(this, null, false);
                this.rights.add(rightsBuilder);
                return rightsBuilder;
            }

            public DataCiteMetadata.RightsList build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.RightsList());
                } else {
                    return ((DataCiteMetadata.RightsList) this._product);
                }
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="rightsURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *       &lt;attribute name="rightsIdentifier" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *       &lt;attribute name="rightsIdentifierScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Rights {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "rightsURI")
            @XmlSchemaType(name = "anyURI")
            protected String rightsURI;
            @XmlAttribute(name = "rightsIdentifier")
            @XmlSchemaType(name = "anySimpleType")
            protected String rightsIdentifier;
            @XmlAttribute(name = "rightsIdentifierScheme")
            @XmlSchemaType(name = "anySimpleType")
            protected String rightsIdentifierScheme;
            @XmlAttribute(name = "schemeURI")
            @XmlSchemaType(name = "anyURI")
            protected String schemeURI;
            @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
            protected String lang;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the rightsURI property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getRightsURI() {
                return rightsURI;
            }

            /**
             * Sets the value of the rightsURI property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setRightsURI(String value) {
                this.rightsURI = value;
            }

            /**
             * Gets the value of the rightsIdentifier property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getRightsIdentifier() {
                return rightsIdentifier;
            }

            /**
             * Sets the value of the rightsIdentifier property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setRightsIdentifier(String value) {
                this.rightsIdentifier = value;
            }

            /**
             * Gets the value of the rightsIdentifierScheme property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getRightsIdentifierScheme() {
                return rightsIdentifierScheme;
            }

            /**
             * Sets the value of the rightsIdentifierScheme property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setRightsIdentifierScheme(String value) {
                this.rightsIdentifierScheme = value;
            }

            /**
             * Gets the value of the schemeURI property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getSchemeURI() {
                return schemeURI;
            }

            /**
             * Sets the value of the schemeURI property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setSchemeURI(String value) {
                this.schemeURI = value;
            }

            /**
             * Gets the value of the lang property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getLang() {
                return lang;
            }

            /**
             * Sets the value of the lang property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setLang(String value) {
                this.lang = value;
            }

            public static DataCiteMetadata.RightsList.Rights.Builder<Void> builder() {
                return new DataCiteMetadata.RightsList.Rights.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadata.RightsList.Rights.Builder<Void> copyOf(final DataCiteMetadata.RightsList.Rights _other) {
                return new DataCiteMetadata.RightsList.Rights.Builder<Void>(null, _other, true);
            }

            public static DataCiteMetadata.RightsList.Rights.Builder<Void> copyOf(final DataCiteMetadata.RightsList.Rights _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                return new DataCiteMetadata.RightsList.Rights.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
            }

            public static DataCiteMetadata.RightsList.Rights.Builder<Void> copyExcept(final DataCiteMetadata.RightsList.Rights _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadata.RightsList.Rights.Builder<Void> copyOnly(final DataCiteMetadata.RightsList.Rights _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("rightsURI", rightsURI).add("rightsIdentifier", rightsIdentifier).add("rightsIdentifierScheme", rightsIdentifierScheme).add("schemeURI", schemeURI).add("lang", lang).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, rightsURI, rightsIdentifier, rightsIdentifierScheme, schemeURI, lang);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadata.RightsList.Rights o = ((DataCiteMetadata.RightsList.Rights) other);
                return (((((Objects.equal(value, o.value)&&Objects.equal(rightsURI, o.rightsURI))&&Objects.equal(rightsIdentifier, o.rightsIdentifier))&&Objects.equal(rightsIdentifierScheme, o.rightsIdentifierScheme))&&Objects.equal(schemeURI, o.schemeURI))&&Objects.equal(lang, o.lang));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadata.RightsList.Rights _product;
                private String value;
                private String rightsURI;
                private String rightsIdentifier;
                private String rightsIdentifierScheme;
                private String schemeURI;
                private String lang;

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.RightsList.Rights _other, final boolean _copy) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        this.value = _other.value;
                        this.rightsURI = _other.rightsURI;
                        this.rightsIdentifier = _other.rightsIdentifier;
                        this.rightsIdentifierScheme = _other.rightsIdentifierScheme;
                        this.schemeURI = _other.schemeURI;
                        this.lang = _other.lang;
                    } else {
                        this._product = _other;
                    }
                }

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.RightsList.Rights _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = _other.value;
                        }
                        final PropertyTree rightsURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("rightsURI"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(rightsURIPropertyTree!= null):((rightsURIPropertyTree == null)||(!rightsURIPropertyTree.isLeaf())))) {
                            this.rightsURI = _other.rightsURI;
                        }
                        final PropertyTree rightsIdentifierPropertyTree = ((propertyTree == null)?null:propertyTree.get("rightsIdentifier"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(rightsIdentifierPropertyTree!= null):((rightsIdentifierPropertyTree == null)||(!rightsIdentifierPropertyTree.isLeaf())))) {
                            this.rightsIdentifier = _other.rightsIdentifier;
                        }
                        final PropertyTree rightsIdentifierSchemePropertyTree = ((propertyTree == null)?null:propertyTree.get("rightsIdentifierScheme"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(rightsIdentifierSchemePropertyTree!= null):((rightsIdentifierSchemePropertyTree == null)||(!rightsIdentifierSchemePropertyTree.isLeaf())))) {
                            this.rightsIdentifierScheme = _other.rightsIdentifierScheme;
                        }
                        final PropertyTree schemeURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("schemeURI"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(schemeURIPropertyTree!= null):((schemeURIPropertyTree == null)||(!schemeURIPropertyTree.isLeaf())))) {
                            this.schemeURI = _other.schemeURI;
                        }
                        final PropertyTree langPropertyTree = ((propertyTree == null)?null:propertyTree.get("lang"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(langPropertyTree!= null):((langPropertyTree == null)||(!langPropertyTree.isLeaf())))) {
                            this.lang = _other.lang;
                        }
                    } else {
                        this._product = _other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadata.RightsList.Rights >P init(final P product) {
                    product.value = this.value;
                    product.rightsURI = this.rightsURI;
                    product.rightsIdentifier = this.rightsIdentifier;
                    product.rightsIdentifierScheme = this.rightsIdentifierScheme;
                    product.schemeURI = this.schemeURI;
                    product.lang = this.lang;
                    return product;
                }

                /**
                 * Sets the new value of "value" (any previous value will be replaced)
                 * 
                 * @param value
                 *     New value of the "value" property.
                 */
                public DataCiteMetadata.RightsList.Rights.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                /**
                 * Sets the new value of "rightsURI" (any previous value will be replaced)
                 * 
                 * @param rightsURI
                 *     New value of the "rightsURI" property.
                 */
                public DataCiteMetadata.RightsList.Rights.Builder<TParentBuilder> withRightsURI(final String rightsURI) {
                    this.rightsURI = rightsURI;
                    return this;
                }

                /**
                 * Sets the new value of "rightsIdentifier" (any previous value will be replaced)
                 * 
                 * @param rightsIdentifier
                 *     New value of the "rightsIdentifier" property.
                 */
                public DataCiteMetadata.RightsList.Rights.Builder<TParentBuilder> withRightsIdentifier(final String rightsIdentifier) {
                    this.rightsIdentifier = rightsIdentifier;
                    return this;
                }

                /**
                 * Sets the new value of "rightsIdentifierScheme" (any previous value will be replaced)
                 * 
                 * @param rightsIdentifierScheme
                 *     New value of the "rightsIdentifierScheme" property.
                 */
                public DataCiteMetadata.RightsList.Rights.Builder<TParentBuilder> withRightsIdentifierScheme(final String rightsIdentifierScheme) {
                    this.rightsIdentifierScheme = rightsIdentifierScheme;
                    return this;
                }

                /**
                 * Sets the new value of "schemeURI" (any previous value will be replaced)
                 * 
                 * @param schemeURI
                 *     New value of the "schemeURI" property.
                 */
                public DataCiteMetadata.RightsList.Rights.Builder<TParentBuilder> withSchemeURI(final String schemeURI) {
                    this.schemeURI = schemeURI;
                    return this;
                }

                /**
                 * Sets the new value of "lang" (any previous value will be replaced)
                 * 
                 * @param lang
                 *     New value of the "lang" property.
                 */
                public DataCiteMetadata.RightsList.Rights.Builder<TParentBuilder> withLang(final String lang) {
                    this.lang = lang;
                    return this;
                }

                public DataCiteMetadata.RightsList.Rights build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadata.RightsList.Rights());
                    } else {
                        return ((DataCiteMetadata.RightsList.Rights) this._product);
                    }
                }

            }

            public static class Select
                extends DataCiteMetadata.RightsList.Rights.Selector<DataCiteMetadata.RightsList.Rights.Select, Void>
            {


                Select() {
                    super(null, null, null);
                }

                public static DataCiteMetadata.RightsList.Rights.Select _root() {
                    return new DataCiteMetadata.RightsList.Rights.Select();
                }

            }

            public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                extends com.kscs.util.jaxb.Selector<TRoot, TParent>
            {

                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> value = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> rightsURI = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> rightsIdentifier = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> rightsIdentifierScheme = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> schemeURI = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> lang = null;

                public Selector(final TRoot root, final TParent parent, final String propertyName) {
                    super(root, parent, propertyName);
                }

                @Override
                public Map<String, PropertyTree> buildChildren() {
                    final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                    products.putAll(super.buildChildren());
                    if (this.value!= null) {
                        products.put("value", this.value.init());
                    }
                    if (this.rightsURI!= null) {
                        products.put("rightsURI", this.rightsURI.init());
                    }
                    if (this.rightsIdentifier!= null) {
                        products.put("rightsIdentifier", this.rightsIdentifier.init());
                    }
                    if (this.rightsIdentifierScheme!= null) {
                        products.put("rightsIdentifierScheme", this.rightsIdentifierScheme.init());
                    }
                    if (this.schemeURI!= null) {
                        products.put("schemeURI", this.schemeURI.init());
                    }
                    if (this.lang!= null) {
                        products.put("lang", this.lang.init());
                    }
                    return products;
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> value() {
                    return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> rightsURI() {
                    return ((this.rightsURI == null)?this.rightsURI = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>>(this._root, this, "rightsURI"):this.rightsURI);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> rightsIdentifier() {
                    return ((this.rightsIdentifier == null)?this.rightsIdentifier = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>>(this._root, this, "rightsIdentifier"):this.rightsIdentifier);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> rightsIdentifierScheme() {
                    return ((this.rightsIdentifierScheme == null)?this.rightsIdentifierScheme = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>>(this._root, this, "rightsIdentifierScheme"):this.rightsIdentifierScheme);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> schemeURI() {
                    return ((this.schemeURI == null)?this.schemeURI = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>>(this._root, this, "schemeURI"):this.schemeURI);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>> lang() {
                    return ((this.lang == null)?this.lang = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.RightsList.Rights.Selector<TRoot, TParent>>(this._root, this, "lang"):this.lang);
                }

            }

        }

        public static class Select
            extends DataCiteMetadata.RightsList.Selector<DataCiteMetadata.RightsList.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.RightsList.Select _root() {
                return new DataCiteMetadata.RightsList.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private DataCiteMetadata.RightsList.Rights.Selector<TRoot, DataCiteMetadata.RightsList.Selector<TRoot, TParent>> rights = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.rights!= null) {
                    products.put("rights", this.rights.init());
                }
                return products;
            }

            public DataCiteMetadata.RightsList.Rights.Selector<TRoot, DataCiteMetadata.RightsList.Selector<TRoot, TParent>> rights() {
                return ((this.rights == null)?this.rights = new DataCiteMetadata.RightsList.Rights.Selector<TRoot, DataCiteMetadata.RightsList.Selector<TRoot, TParent>>(this._root, this, "rights"):this.rights);
            }

        }

    }

    public static class Select
        extends DataCiteMetadata.Selector<DataCiteMetadata.Select, Void>
    {


        Select() {
            super(null, null, null);
        }

        public static DataCiteMetadata.Select _root() {
            return new DataCiteMetadata.Select();
        }

    }

    public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
        extends com.kscs.util.jaxb.Selector<TRoot, TParent>
    {

        private DataCiteMetadata.Identifier.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> identifier = null;
        private DataCiteMetadata.Creators.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> creators = null;
        private DataCiteMetadata.Titles.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> titles = null;
        private DataCiteMetadata.Publisher.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> publisher = null;
        private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> publicationYear = null;
        private DataCiteMetadata.ResourceType.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> resourceType = null;
        private DataCiteMetadata.Subjects.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> subjects = null;
        private DataCiteMetadata.Contributors.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> contributors = null;
        private DataCiteMetadata.Dates.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> dates = null;
        private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> language = null;
        private DataCiteMetadata.AlternateIdentifiers.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> alternateIdentifiers = null;
        private DataCiteMetadata.RelatedIdentifiers.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> relatedIdentifiers = null;
        private DataCiteMetadata.Sizes.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> sizes = null;
        private DataCiteMetadata.Formats.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> formats = null;
        private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> version = null;
        private DataCiteMetadata.RightsList.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> rightsList = null;
        private DataCiteMetadata.Descriptions.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> descriptions = null;
        private DataCiteMetadata.GeoLocations.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> geoLocations = null;
        private DataCiteMetadata.FundingReferences.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> fundingReferences = null;

        public Selector(final TRoot root, final TParent parent, final String propertyName) {
            super(root, parent, propertyName);
        }

        @Override
        public Map<String, PropertyTree> buildChildren() {
            final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
            products.putAll(super.buildChildren());
            if (this.identifier!= null) {
                products.put("identifier", this.identifier.init());
            }
            if (this.creators!= null) {
                products.put("creators", this.creators.init());
            }
            if (this.titles!= null) {
                products.put("titles", this.titles.init());
            }
            if (this.publisher!= null) {
                products.put("publisher", this.publisher.init());
            }
            if (this.publicationYear!= null) {
                products.put("publicationYear", this.publicationYear.init());
            }
            if (this.resourceType!= null) {
                products.put("resourceType", this.resourceType.init());
            }
            if (this.subjects!= null) {
                products.put("subjects", this.subjects.init());
            }
            if (this.contributors!= null) {
                products.put("contributors", this.contributors.init());
            }
            if (this.dates!= null) {
                products.put("dates", this.dates.init());
            }
            if (this.language!= null) {
                products.put("language", this.language.init());
            }
            if (this.alternateIdentifiers!= null) {
                products.put("alternateIdentifiers", this.alternateIdentifiers.init());
            }
            if (this.relatedIdentifiers!= null) {
                products.put("relatedIdentifiers", this.relatedIdentifiers.init());
            }
            if (this.sizes!= null) {
                products.put("sizes", this.sizes.init());
            }
            if (this.formats!= null) {
                products.put("formats", this.formats.init());
            }
            if (this.version!= null) {
                products.put("version", this.version.init());
            }
            if (this.rightsList!= null) {
                products.put("rightsList", this.rightsList.init());
            }
            if (this.descriptions!= null) {
                products.put("descriptions", this.descriptions.init());
            }
            if (this.geoLocations!= null) {
                products.put("geoLocations", this.geoLocations.init());
            }
            if (this.fundingReferences!= null) {
                products.put("fundingReferences", this.fundingReferences.init());
            }
            return products;
        }

        public DataCiteMetadata.Identifier.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> identifier() {
            return ((this.identifier == null)?this.identifier = new DataCiteMetadata.Identifier.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "identifier"):this.identifier);
        }

        public DataCiteMetadata.Creators.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> creators() {
            return ((this.creators == null)?this.creators = new DataCiteMetadata.Creators.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "creators"):this.creators);
        }

        public DataCiteMetadata.Titles.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> titles() {
            return ((this.titles == null)?this.titles = new DataCiteMetadata.Titles.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "titles"):this.titles);
        }

        public DataCiteMetadata.Publisher.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> publisher() {
            return ((this.publisher == null)?this.publisher = new DataCiteMetadata.Publisher.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "publisher"):this.publisher);
        }

        public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> publicationYear() {
            return ((this.publicationYear == null)?this.publicationYear = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "publicationYear"):this.publicationYear);
        }

        public DataCiteMetadata.ResourceType.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> resourceType() {
            return ((this.resourceType == null)?this.resourceType = new DataCiteMetadata.ResourceType.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "resourceType"):this.resourceType);
        }

        public DataCiteMetadata.Subjects.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> subjects() {
            return ((this.subjects == null)?this.subjects = new DataCiteMetadata.Subjects.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "subjects"):this.subjects);
        }

        public DataCiteMetadata.Contributors.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> contributors() {
            return ((this.contributors == null)?this.contributors = new DataCiteMetadata.Contributors.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "contributors"):this.contributors);
        }

        public DataCiteMetadata.Dates.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> dates() {
            return ((this.dates == null)?this.dates = new DataCiteMetadata.Dates.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "dates"):this.dates);
        }

        public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> language() {
            return ((this.language == null)?this.language = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "language"):this.language);
        }

        public DataCiteMetadata.AlternateIdentifiers.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> alternateIdentifiers() {
            return ((this.alternateIdentifiers == null)?this.alternateIdentifiers = new DataCiteMetadata.AlternateIdentifiers.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "alternateIdentifiers"):this.alternateIdentifiers);
        }

        public DataCiteMetadata.RelatedIdentifiers.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> relatedIdentifiers() {
            return ((this.relatedIdentifiers == null)?this.relatedIdentifiers = new DataCiteMetadata.RelatedIdentifiers.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "relatedIdentifiers"):this.relatedIdentifiers);
        }

        public DataCiteMetadata.Sizes.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> sizes() {
            return ((this.sizes == null)?this.sizes = new DataCiteMetadata.Sizes.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "sizes"):this.sizes);
        }

        public DataCiteMetadata.Formats.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> formats() {
            return ((this.formats == null)?this.formats = new DataCiteMetadata.Formats.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "formats"):this.formats);
        }

        public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> version() {
            return ((this.version == null)?this.version = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "version"):this.version);
        }

        public DataCiteMetadata.RightsList.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> rightsList() {
            return ((this.rightsList == null)?this.rightsList = new DataCiteMetadata.RightsList.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "rightsList"):this.rightsList);
        }

        public DataCiteMetadata.Descriptions.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> descriptions() {
            return ((this.descriptions == null)?this.descriptions = new DataCiteMetadata.Descriptions.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "descriptions"):this.descriptions);
        }

        public DataCiteMetadata.GeoLocations.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> geoLocations() {
            return ((this.geoLocations == null)?this.geoLocations = new DataCiteMetadata.GeoLocations.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "geoLocations"):this.geoLocations);
        }

        public DataCiteMetadata.FundingReferences.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>> fundingReferences() {
            return ((this.fundingReferences == null)?this.fundingReferences = new DataCiteMetadata.FundingReferences.Selector<TRoot, DataCiteMetadata.Selector<TRoot, TParent>>(this._root, this, "fundingReferences"):this.fundingReferences);
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="size" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "size"
    })
    public static class Sizes {

        protected List<String> size;

        /**
         * Gets the value of the size property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the size property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getSize().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link String }
         * 
         * 
         */
        public List<String> getSize() {
            if (size == null) {
                size = new ArrayList<String>();
            }
            return this.size;
        }

        public static DataCiteMetadata.Sizes.Builder<Void> builder() {
            return new DataCiteMetadata.Sizes.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.Sizes.Builder<Void> copyOf(final DataCiteMetadata.Sizes _other) {
            return new DataCiteMetadata.Sizes.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.Sizes.Builder<Void> copyOf(final DataCiteMetadata.Sizes _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.Sizes.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.Sizes.Builder<Void> copyExcept(final DataCiteMetadata.Sizes _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.Sizes.Builder<Void> copyOnly(final DataCiteMetadata.Sizes _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("size", size).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(size);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.Sizes o = ((DataCiteMetadata.Sizes) other);
            return Objects.equal(size, o.size);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.Sizes _product;
            private List<String> size;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Sizes _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    this.size = ((_other.size == null)?null:new ArrayList<String>(_other.size));
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Sizes _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree sizePropertyTree = ((propertyTree == null)?null:propertyTree.get("size"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(sizePropertyTree!= null):((sizePropertyTree == null)||(!sizePropertyTree.isLeaf())))) {
                        this.size = ((_other.size == null)?null:new ArrayList<String>(_other.size));
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.Sizes >P init(final P product) {
                product.size = this.size;
                return product;
            }

            /**
             * Adds the given items to the value of "size"
             * 
             * @param size
             *     Items to add to the value of the "size" property
             */
            public DataCiteMetadata.Sizes.Builder<TParentBuilder> addSize(final Collection<? extends String> size) {
                if (this.size == null) {
                    this.size = new ArrayList<String>();
                }
                this.size.addAll(size);
                return this;
            }

            /**
             * Sets the new value of "size" (any previous value will be replaced)
             * 
             * @param size
             *     New value of the "size" property.
             */
            public DataCiteMetadata.Sizes.Builder<TParentBuilder> withSize(final Collection<? extends String> size) {
                if (this.size!= null) {
                    this.size.clear();
                }
                return addSize(size);
            }

            /**
             * Adds the given items to the value of "size"
             * 
             * @param size
             *     Items to add to the value of the "size" property
             */
            public DataCiteMetadata.Sizes.Builder<TParentBuilder> addSize(String... size) {
                addSize(Arrays.asList(size));
                return this;
            }

            /**
             * Sets the new value of "size" (any previous value will be replaced)
             * 
             * @param size
             *     New value of the "size" property.
             */
            public DataCiteMetadata.Sizes.Builder<TParentBuilder> withSize(String... size) {
                withSize(Arrays.asList(size));
                return this;
            }

            public DataCiteMetadata.Sizes build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.Sizes());
                } else {
                    return ((DataCiteMetadata.Sizes) this._product);
                }
            }

        }

        public static class Select
            extends DataCiteMetadata.Sizes.Selector<DataCiteMetadata.Sizes.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.Sizes.Select _root() {
                return new DataCiteMetadata.Sizes.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Sizes.Selector<TRoot, TParent>> size = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.size!= null) {
                    products.put("size", this.size.init());
                }
                return products;
            }

            public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Sizes.Selector<TRoot, TParent>> size() {
                return ((this.size == null)?this.size = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Sizes.Selector<TRoot, TParent>>(this._root, this, "size"):this.size);
            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="subject" maxOccurs="unbounded" minOccurs="0">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="subjectScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
     *                 &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                 &lt;attribute name="valueURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
     *                 &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "subject"
    })
    public static class Subjects {

        protected List<DataCiteMetadata.Subjects.Subject> subject;

        /**
         * Gets the value of the subject property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the subject property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getSubject().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DataCiteMetadata.Subjects.Subject }
         * 
         * 
         */
        public List<DataCiteMetadata.Subjects.Subject> getSubject() {
            if (subject == null) {
                subject = new ArrayList<DataCiteMetadata.Subjects.Subject>();
            }
            return this.subject;
        }

        public static DataCiteMetadata.Subjects.Builder<Void> builder() {
            return new DataCiteMetadata.Subjects.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.Subjects.Builder<Void> copyOf(final DataCiteMetadata.Subjects _other) {
            return new DataCiteMetadata.Subjects.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.Subjects.Builder<Void> copyOf(final DataCiteMetadata.Subjects _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.Subjects.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.Subjects.Builder<Void> copyExcept(final DataCiteMetadata.Subjects _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.Subjects.Builder<Void> copyOnly(final DataCiteMetadata.Subjects _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("subject", subject).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(subject);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.Subjects o = ((DataCiteMetadata.Subjects) other);
            return Objects.equal(subject, o.subject);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.Subjects _product;
            private List<DataCiteMetadata.Subjects.Subject.Builder<DataCiteMetadata.Subjects.Builder<TParentBuilder>>> subject;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Subjects _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    if (_other.subject == null) {
                        this.subject = null;
                    } else {
                        this.subject = new ArrayList<DataCiteMetadata.Subjects.Subject.Builder<DataCiteMetadata.Subjects.Builder<TParentBuilder>>>();
                        for (DataCiteMetadata.Subjects.Subject _item: _other.subject) {
                            this.subject.add(((_other.subject == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Subjects.Subject.Builder.class, _item, this, _item, true)));
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Subjects _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree subjectPropertyTree = ((propertyTree == null)?null:propertyTree.get("subject"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(subjectPropertyTree!= null):((subjectPropertyTree == null)||(!subjectPropertyTree.isLeaf())))) {
                        if (_other.subject == null) {
                            this.subject = null;
                        } else {
                            this.subject = new ArrayList<DataCiteMetadata.Subjects.Subject.Builder<DataCiteMetadata.Subjects.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.Subjects.Subject _item: _other.subject) {
                                this.subject.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Subjects.Subject.Builder.class, _item, this, _item, true, subjectPropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.Subjects >P init(final P product) {
                if (this.subject!= null) {
                    final List<DataCiteMetadata.Subjects.Subject> subject = new ArrayList<DataCiteMetadata.Subjects.Subject>(this.subject.size());
                    for (DataCiteMetadata.Subjects.Subject.Builder<DataCiteMetadata.Subjects.Builder<TParentBuilder>> _item: this.subject) {
                        subject.add(_item.build());
                    }
                    product.subject = subject;
                }
                return product;
            }

            /**
             * Adds the given items to the value of "subject"
             * 
             * @param subject
             *     Items to add to the value of the "subject" property
             */
            public DataCiteMetadata.Subjects.Builder<TParentBuilder> addSubject(final Collection<? extends DataCiteMetadata.Subjects.Subject> subject) {
                if (this.subject == null) {
                    this.subject = new ArrayList<DataCiteMetadata.Subjects.Subject.Builder<DataCiteMetadata.Subjects.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadata.Subjects.Subject _item: subject) {
                    this.subject.add(new DataCiteMetadata.Subjects.Subject.Builder<DataCiteMetadata.Subjects.Builder<TParentBuilder>>(this, _item, false));
                }
                return this;
            }

            /**
             * Sets the new value of "subject" (any previous value will be replaced)
             * 
             * @param subject
             *     New value of the "subject" property.
             */
            public DataCiteMetadata.Subjects.Builder<TParentBuilder> withSubject(final Collection<? extends DataCiteMetadata.Subjects.Subject> subject) {
                if (this.subject!= null) {
                    this.subject.clear();
                }
                return addSubject(subject);
            }

            /**
             * Adds the given items to the value of "subject"
             * 
             * @param subject
             *     Items to add to the value of the "subject" property
             */
            public DataCiteMetadata.Subjects.Builder<TParentBuilder> addSubject(DataCiteMetadata.Subjects.Subject... subject) {
                addSubject(Arrays.asList(subject));
                return this;
            }

            /**
             * Sets the new value of "subject" (any previous value will be replaced)
             * 
             * @param subject
             *     New value of the "subject" property.
             */
            public DataCiteMetadata.Subjects.Builder<TParentBuilder> withSubject(DataCiteMetadata.Subjects.Subject... subject) {
                withSubject(Arrays.asList(subject));
                return this;
            }

            /**
             * Returns a new builder to build an additional value of the "subject" property.
             * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Subjects.Subject.Builder#end()} to return to the current builder.
             * 
             * @return
             *     a new builder to build an additional value of the "subject" property.
             *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Subjects.Subject.Builder#end()} to return to the current builder.
             */
            public DataCiteMetadata.Subjects.Subject.Builder<? extends DataCiteMetadata.Subjects.Builder<TParentBuilder>> addSubject() {
                if (this.subject == null) {
                    this.subject = new ArrayList<DataCiteMetadata.Subjects.Subject.Builder<DataCiteMetadata.Subjects.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadata.Subjects.Subject.Builder<DataCiteMetadata.Subjects.Builder<TParentBuilder>> subjectBuilder = new DataCiteMetadata.Subjects.Subject.Builder<DataCiteMetadata.Subjects.Builder<TParentBuilder>>(this, null, false);
                this.subject.add(subjectBuilder);
                return subjectBuilder;
            }

            public DataCiteMetadata.Subjects build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.Subjects());
                } else {
                    return ((DataCiteMetadata.Subjects) this._product);
                }
            }

        }

        public static class Select
            extends DataCiteMetadata.Subjects.Selector<DataCiteMetadata.Subjects.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.Subjects.Select _root() {
                return new DataCiteMetadata.Subjects.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private DataCiteMetadata.Subjects.Subject.Selector<TRoot, DataCiteMetadata.Subjects.Selector<TRoot, TParent>> subject = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.subject!= null) {
                    products.put("subject", this.subject.init());
                }
                return products;
            }

            public DataCiteMetadata.Subjects.Subject.Selector<TRoot, DataCiteMetadata.Subjects.Selector<TRoot, TParent>> subject() {
                return ((this.subject == null)?this.subject = new DataCiteMetadata.Subjects.Subject.Selector<TRoot, DataCiteMetadata.Subjects.Selector<TRoot, TParent>>(this._root, this, "subject"):this.subject);
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="subjectScheme" type="{http://www.w3.org/2001/XMLSchema}anySimpleType" />
         *       &lt;attribute name="schemeURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *       &lt;attribute name="valueURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
         *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Subject {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "subjectScheme")
            @XmlSchemaType(name = "anySimpleType")
            protected String subjectScheme;
            @XmlAttribute(name = "schemeURI")
            @XmlSchemaType(name = "anyURI")
            protected String schemeURI;
            @XmlAttribute(name = "valueURI")
            @XmlSchemaType(name = "anyURI")
            protected String valueURI;
            @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
            protected String lang;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the subjectScheme property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getSubjectScheme() {
                return subjectScheme;
            }

            /**
             * Sets the value of the subjectScheme property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setSubjectScheme(String value) {
                this.subjectScheme = value;
            }

            /**
             * Gets the value of the schemeURI property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getSchemeURI() {
                return schemeURI;
            }

            /**
             * Sets the value of the schemeURI property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setSchemeURI(String value) {
                this.schemeURI = value;
            }

            /**
             * Gets the value of the valueURI property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValueURI() {
                return valueURI;
            }

            /**
             * Sets the value of the valueURI property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValueURI(String value) {
                this.valueURI = value;
            }

            /**
             * Gets the value of the lang property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getLang() {
                return lang;
            }

            /**
             * Sets the value of the lang property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setLang(String value) {
                this.lang = value;
            }

            public static DataCiteMetadata.Subjects.Subject.Builder<Void> builder() {
                return new DataCiteMetadata.Subjects.Subject.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadata.Subjects.Subject.Builder<Void> copyOf(final DataCiteMetadata.Subjects.Subject _other) {
                return new DataCiteMetadata.Subjects.Subject.Builder<Void>(null, _other, true);
            }

            public static DataCiteMetadata.Subjects.Subject.Builder<Void> copyOf(final DataCiteMetadata.Subjects.Subject _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                return new DataCiteMetadata.Subjects.Subject.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
            }

            public static DataCiteMetadata.Subjects.Subject.Builder<Void> copyExcept(final DataCiteMetadata.Subjects.Subject _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadata.Subjects.Subject.Builder<Void> copyOnly(final DataCiteMetadata.Subjects.Subject _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("subjectScheme", subjectScheme).add("schemeURI", schemeURI).add("valueURI", valueURI).add("lang", lang).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, subjectScheme, schemeURI, valueURI, lang);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadata.Subjects.Subject o = ((DataCiteMetadata.Subjects.Subject) other);
                return ((((Objects.equal(value, o.value)&&Objects.equal(subjectScheme, o.subjectScheme))&&Objects.equal(schemeURI, o.schemeURI))&&Objects.equal(valueURI, o.valueURI))&&Objects.equal(lang, o.lang));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadata.Subjects.Subject _product;
                private String value;
                private String subjectScheme;
                private String schemeURI;
                private String valueURI;
                private String lang;

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Subjects.Subject _other, final boolean _copy) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        this.value = _other.value;
                        this.subjectScheme = _other.subjectScheme;
                        this.schemeURI = _other.schemeURI;
                        this.valueURI = _other.valueURI;
                        this.lang = _other.lang;
                    } else {
                        this._product = _other;
                    }
                }

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Subjects.Subject _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = _other.value;
                        }
                        final PropertyTree subjectSchemePropertyTree = ((propertyTree == null)?null:propertyTree.get("subjectScheme"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(subjectSchemePropertyTree!= null):((subjectSchemePropertyTree == null)||(!subjectSchemePropertyTree.isLeaf())))) {
                            this.subjectScheme = _other.subjectScheme;
                        }
                        final PropertyTree schemeURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("schemeURI"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(schemeURIPropertyTree!= null):((schemeURIPropertyTree == null)||(!schemeURIPropertyTree.isLeaf())))) {
                            this.schemeURI = _other.schemeURI;
                        }
                        final PropertyTree valueURIPropertyTree = ((propertyTree == null)?null:propertyTree.get("valueURI"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valueURIPropertyTree!= null):((valueURIPropertyTree == null)||(!valueURIPropertyTree.isLeaf())))) {
                            this.valueURI = _other.valueURI;
                        }
                        final PropertyTree langPropertyTree = ((propertyTree == null)?null:propertyTree.get("lang"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(langPropertyTree!= null):((langPropertyTree == null)||(!langPropertyTree.isLeaf())))) {
                            this.lang = _other.lang;
                        }
                    } else {
                        this._product = _other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadata.Subjects.Subject >P init(final P product) {
                    product.value = this.value;
                    product.subjectScheme = this.subjectScheme;
                    product.schemeURI = this.schemeURI;
                    product.valueURI = this.valueURI;
                    product.lang = this.lang;
                    return product;
                }

                /**
                 * Sets the new value of "value" (any previous value will be replaced)
                 * 
                 * @param value
                 *     New value of the "value" property.
                 */
                public DataCiteMetadata.Subjects.Subject.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                /**
                 * Sets the new value of "subjectScheme" (any previous value will be replaced)
                 * 
                 * @param subjectScheme
                 *     New value of the "subjectScheme" property.
                 */
                public DataCiteMetadata.Subjects.Subject.Builder<TParentBuilder> withSubjectScheme(final String subjectScheme) {
                    this.subjectScheme = subjectScheme;
                    return this;
                }

                /**
                 * Sets the new value of "schemeURI" (any previous value will be replaced)
                 * 
                 * @param schemeURI
                 *     New value of the "schemeURI" property.
                 */
                public DataCiteMetadata.Subjects.Subject.Builder<TParentBuilder> withSchemeURI(final String schemeURI) {
                    this.schemeURI = schemeURI;
                    return this;
                }

                /**
                 * Sets the new value of "valueURI" (any previous value will be replaced)
                 * 
                 * @param valueURI
                 *     New value of the "valueURI" property.
                 */
                public DataCiteMetadata.Subjects.Subject.Builder<TParentBuilder> withValueURI(final String valueURI) {
                    this.valueURI = valueURI;
                    return this;
                }

                /**
                 * Sets the new value of "lang" (any previous value will be replaced)
                 * 
                 * @param lang
                 *     New value of the "lang" property.
                 */
                public DataCiteMetadata.Subjects.Subject.Builder<TParentBuilder> withLang(final String lang) {
                    this.lang = lang;
                    return this;
                }

                public DataCiteMetadata.Subjects.Subject build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadata.Subjects.Subject());
                    } else {
                        return ((DataCiteMetadata.Subjects.Subject) this._product);
                    }
                }

            }

            public static class Select
                extends DataCiteMetadata.Subjects.Subject.Selector<DataCiteMetadata.Subjects.Subject.Select, Void>
            {


                Select() {
                    super(null, null, null);
                }

                public static DataCiteMetadata.Subjects.Subject.Select _root() {
                    return new DataCiteMetadata.Subjects.Subject.Select();
                }

            }

            public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                extends com.kscs.util.jaxb.Selector<TRoot, TParent>
            {

                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>> value = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>> subjectScheme = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>> schemeURI = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>> valueURI = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>> lang = null;

                public Selector(final TRoot root, final TParent parent, final String propertyName) {
                    super(root, parent, propertyName);
                }

                @Override
                public Map<String, PropertyTree> buildChildren() {
                    final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                    products.putAll(super.buildChildren());
                    if (this.value!= null) {
                        products.put("value", this.value.init());
                    }
                    if (this.subjectScheme!= null) {
                        products.put("subjectScheme", this.subjectScheme.init());
                    }
                    if (this.schemeURI!= null) {
                        products.put("schemeURI", this.schemeURI.init());
                    }
                    if (this.valueURI!= null) {
                        products.put("valueURI", this.valueURI.init());
                    }
                    if (this.lang!= null) {
                        products.put("lang", this.lang.init());
                    }
                    return products;
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>> value() {
                    return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>> subjectScheme() {
                    return ((this.subjectScheme == null)?this.subjectScheme = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>>(this._root, this, "subjectScheme"):this.subjectScheme);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>> schemeURI() {
                    return ((this.schemeURI == null)?this.schemeURI = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>>(this._root, this, "schemeURI"):this.schemeURI);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>> valueURI() {
                    return ((this.valueURI == null)?this.valueURI = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>>(this._root, this, "valueURI"):this.valueURI);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>> lang() {
                    return ((this.lang == null)?this.lang = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Subjects.Subject.Selector<TRoot, TParent>>(this._root, this, "lang"):this.lang);
                }

            }

        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;complexContent>
     *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       &lt;sequence>
     *         &lt;element name="title" maxOccurs="unbounded">
     *           &lt;complexType>
     *             &lt;simpleContent>
     *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *                 &lt;attribute name="titleType" type="{http://datacite.org/schema/kernel-4}titleType" />
     *                 &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
     *               &lt;/extension>
     *             &lt;/simpleContent>
     *           &lt;/complexType>
     *         &lt;/element>
     *       &lt;/sequence>
     *     &lt;/restriction>
     *   &lt;/complexContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "title"
    })
    public static class Titles {

        @XmlElement(required = true)
        protected List<DataCiteMetadata.Titles.Title> title;

        /**
         * Gets the value of the title property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the JAXB object.
         * This is why there is not a <CODE>set</CODE> method for the title property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getTitle().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DataCiteMetadata.Titles.Title }
         * 
         * 
         */
        public List<DataCiteMetadata.Titles.Title> getTitle() {
            if (title == null) {
                title = new ArrayList<DataCiteMetadata.Titles.Title>();
            }
            return this.title;
        }

        public static DataCiteMetadata.Titles.Builder<Void> builder() {
            return new DataCiteMetadata.Titles.Builder<Void>(null, null, false);
        }

        public static DataCiteMetadata.Titles.Builder<Void> copyOf(final DataCiteMetadata.Titles _other) {
            return new DataCiteMetadata.Titles.Builder<Void>(null, _other, true);
        }

        public static DataCiteMetadata.Titles.Builder<Void> copyOf(final DataCiteMetadata.Titles _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
            return new DataCiteMetadata.Titles.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
        }

        public static DataCiteMetadata.Titles.Builder<Void> copyExcept(final DataCiteMetadata.Titles _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
        }

        public static DataCiteMetadata.Titles.Builder<Void> copyOnly(final DataCiteMetadata.Titles _other, final PropertyTree _propertyTree) {
            return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
        }

        @Override
        public String toString() {
            return Objects.toStringHelper(this).add("title", title).toString();
        }

        @Override
        public int hashCode() {
            return Objects.hashCode(title);
        }

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass()!= other.getClass()) {
                return false;
            }
            final DataCiteMetadata.Titles o = ((DataCiteMetadata.Titles) other);
            return Objects.equal(title, o.title);
        }

        public static class Builder<TParentBuilder >{

            protected final TParentBuilder _parentBuilder;
            protected final DataCiteMetadata.Titles _product;
            private List<DataCiteMetadata.Titles.Title.Builder<DataCiteMetadata.Titles.Builder<TParentBuilder>>> title;

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Titles _other, final boolean _copy) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    if (_other.title == null) {
                        this.title = null;
                    } else {
                        this.title = new ArrayList<DataCiteMetadata.Titles.Title.Builder<DataCiteMetadata.Titles.Builder<TParentBuilder>>>();
                        for (DataCiteMetadata.Titles.Title _item: _other.title) {
                            this.title.add(((_other.title == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Titles.Title.Builder.class, _item, this, _item, true)));
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Titles _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                this._parentBuilder = _parentBuilder;
                if (_copy) {
                    this._product = null;
                    final PropertyTree titlePropertyTree = ((propertyTree == null)?null:propertyTree.get("title"));
                    if (((treeUse == PropertyTreeUse.INCLUDE)?(titlePropertyTree!= null):((titlePropertyTree == null)||(!titlePropertyTree.isLeaf())))) {
                        if (_other.title == null) {
                            this.title = null;
                        } else {
                            this.title = new ArrayList<DataCiteMetadata.Titles.Title.Builder<DataCiteMetadata.Titles.Builder<TParentBuilder>>>();
                            for (DataCiteMetadata.Titles.Title _item: _other.title) {
                                this.title.add(((_item == null)?null:BuilderUtilities.getBuilder(DataCiteMetadata.Titles.Title.Builder.class, _item, this, _item, true, titlePropertyTree, treeUse)));
                            }
                        }
                    }
                } else {
                    this._product = _other;
                }
            }

            public TParentBuilder end() {
                return this._parentBuilder;
            }

            protected<P extends DataCiteMetadata.Titles >P init(final P product) {
                if (this.title!= null) {
                    final List<DataCiteMetadata.Titles.Title> title = new ArrayList<DataCiteMetadata.Titles.Title>(this.title.size());
                    for (DataCiteMetadata.Titles.Title.Builder<DataCiteMetadata.Titles.Builder<TParentBuilder>> _item: this.title) {
                        title.add(_item.build());
                    }
                    product.title = title;
                }
                return product;
            }

            /**
             * Adds the given items to the value of "title"
             * 
             * @param title
             *     Items to add to the value of the "title" property
             */
            public DataCiteMetadata.Titles.Builder<TParentBuilder> addTitle(final Collection<? extends DataCiteMetadata.Titles.Title> title) {
                if (this.title == null) {
                    this.title = new ArrayList<DataCiteMetadata.Titles.Title.Builder<DataCiteMetadata.Titles.Builder<TParentBuilder>>>();
                }
                for (DataCiteMetadata.Titles.Title _item: title) {
                    this.title.add(new DataCiteMetadata.Titles.Title.Builder<DataCiteMetadata.Titles.Builder<TParentBuilder>>(this, _item, false));
                }
                return this;
            }

            /**
             * Sets the new value of "title" (any previous value will be replaced)
             * 
             * @param title
             *     New value of the "title" property.
             */
            public DataCiteMetadata.Titles.Builder<TParentBuilder> withTitle(final Collection<? extends DataCiteMetadata.Titles.Title> title) {
                if (this.title!= null) {
                    this.title.clear();
                }
                return addTitle(title);
            }

            /**
             * Adds the given items to the value of "title"
             * 
             * @param title
             *     Items to add to the value of the "title" property
             */
            public DataCiteMetadata.Titles.Builder<TParentBuilder> addTitle(DataCiteMetadata.Titles.Title... title) {
                addTitle(Arrays.asList(title));
                return this;
            }

            /**
             * Sets the new value of "title" (any previous value will be replaced)
             * 
             * @param title
             *     New value of the "title" property.
             */
            public DataCiteMetadata.Titles.Builder<TParentBuilder> withTitle(DataCiteMetadata.Titles.Title... title) {
                withTitle(Arrays.asList(title));
                return this;
            }

            /**
             * Returns a new builder to build an additional value of the "title" property.
             * Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Titles.Title.Builder#end()} to return to the current builder.
             * 
             * @return
             *     a new builder to build an additional value of the "title" property.
             *     Use {@link org.gbif.doi.metadata.datacite.DataCiteMetadata.Titles.Title.Builder#end()} to return to the current builder.
             */
            public DataCiteMetadata.Titles.Title.Builder<? extends DataCiteMetadata.Titles.Builder<TParentBuilder>> addTitle() {
                if (this.title == null) {
                    this.title = new ArrayList<DataCiteMetadata.Titles.Title.Builder<DataCiteMetadata.Titles.Builder<TParentBuilder>>>();
                }
                final DataCiteMetadata.Titles.Title.Builder<DataCiteMetadata.Titles.Builder<TParentBuilder>> titleBuilder = new DataCiteMetadata.Titles.Title.Builder<DataCiteMetadata.Titles.Builder<TParentBuilder>>(this, null, false);
                this.title.add(titleBuilder);
                return titleBuilder;
            }

            public DataCiteMetadata.Titles build() {
                if (this._product == null) {
                    return this.init(new DataCiteMetadata.Titles());
                } else {
                    return ((DataCiteMetadata.Titles) this._product);
                }
            }

        }

        public static class Select
            extends DataCiteMetadata.Titles.Selector<DataCiteMetadata.Titles.Select, Void>
        {


            Select() {
                super(null, null, null);
            }

            public static DataCiteMetadata.Titles.Select _root() {
                return new DataCiteMetadata.Titles.Select();
            }

        }

        public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
            extends com.kscs.util.jaxb.Selector<TRoot, TParent>
        {

            private DataCiteMetadata.Titles.Title.Selector<TRoot, DataCiteMetadata.Titles.Selector<TRoot, TParent>> title = null;

            public Selector(final TRoot root, final TParent parent, final String propertyName) {
                super(root, parent, propertyName);
            }

            @Override
            public Map<String, PropertyTree> buildChildren() {
                final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                products.putAll(super.buildChildren());
                if (this.title!= null) {
                    products.put("title", this.title.init());
                }
                return products;
            }

            public DataCiteMetadata.Titles.Title.Selector<TRoot, DataCiteMetadata.Titles.Selector<TRoot, TParent>> title() {
                return ((this.title == null)?this.title = new DataCiteMetadata.Titles.Title.Selector<TRoot, DataCiteMetadata.Titles.Selector<TRoot, TParent>>(this._root, this, "title"):this.title);
            }

        }


        /**
         * <p>Java class for anonymous complex type.
         * 
         * <p>The following schema fragment specifies the expected content contained within this class.
         * 
         * <pre>
         * &lt;complexType>
         *   &lt;simpleContent>
         *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
         *       &lt;attribute name="titleType" type="{http://datacite.org/schema/kernel-4}titleType" />
         *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/>
         *     &lt;/extension>
         *   &lt;/simpleContent>
         * &lt;/complexType>
         * </pre>
         * 
         * 
         */
        @XmlAccessorType(XmlAccessType.FIELD)
        @XmlType(name = "", propOrder = {
            "value"
        })
        public static class Title {

            @XmlValue
            protected String value;
            @XmlAttribute(name = "titleType")
            protected TitleType titleType;
            @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
            protected String lang;

            /**
             * Gets the value of the value property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getValue() {
                return value;
            }

            /**
             * Sets the value of the value property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setValue(String value) {
                this.value = value;
            }

            /**
             * Gets the value of the titleType property.
             * 
             * @return
             *     possible object is
             *     {@link TitleType }
             *     
             */
            public TitleType getTitleType() {
                return titleType;
            }

            /**
             * Sets the value of the titleType property.
             * 
             * @param value
             *     allowed object is
             *     {@link TitleType }
             *     
             */
            public void setTitleType(TitleType value) {
                this.titleType = value;
            }

            /**
             * Gets the value of the lang property.
             * 
             * @return
             *     possible object is
             *     {@link String }
             *     
             */
            public String getLang() {
                return lang;
            }

            /**
             * Sets the value of the lang property.
             * 
             * @param value
             *     allowed object is
             *     {@link String }
             *     
             */
            public void setLang(String value) {
                this.lang = value;
            }

            public static DataCiteMetadata.Titles.Title.Builder<Void> builder() {
                return new DataCiteMetadata.Titles.Title.Builder<Void>(null, null, false);
            }

            public static DataCiteMetadata.Titles.Title.Builder<Void> copyOf(final DataCiteMetadata.Titles.Title _other) {
                return new DataCiteMetadata.Titles.Title.Builder<Void>(null, _other, true);
            }

            public static DataCiteMetadata.Titles.Title.Builder<Void> copyOf(final DataCiteMetadata.Titles.Title _other, final PropertyTree _propertyTree, final PropertyTreeUse _propertyTreeUse) {
                return new DataCiteMetadata.Titles.Title.Builder<Void>(null, _other, true, _propertyTree, _propertyTreeUse);
            }

            public static DataCiteMetadata.Titles.Title.Builder<Void> copyExcept(final DataCiteMetadata.Titles.Title _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.EXCLUDE);
            }

            public static DataCiteMetadata.Titles.Title.Builder<Void> copyOnly(final DataCiteMetadata.Titles.Title _other, final PropertyTree _propertyTree) {
                return copyOf(_other, _propertyTree, PropertyTreeUse.INCLUDE);
            }

            @Override
            public String toString() {
                return Objects.toStringHelper(this).add("value", value).add("titleType", titleType).add("lang", lang).toString();
            }

            @Override
            public int hashCode() {
                return Objects.hashCode(value, titleType, lang);
            }

            @Override
            public boolean equals(Object other) {
                if (this == other) {
                    return true;
                }
                if (other == null) {
                    return false;
                }
                if (getClass()!= other.getClass()) {
                    return false;
                }
                final DataCiteMetadata.Titles.Title o = ((DataCiteMetadata.Titles.Title) other);
                return ((Objects.equal(value, o.value)&&Objects.equal(titleType, o.titleType))&&Objects.equal(lang, o.lang));
            }

            public static class Builder<TParentBuilder >{

                protected final TParentBuilder _parentBuilder;
                protected final DataCiteMetadata.Titles.Title _product;
                private String value;
                private TitleType titleType;
                private String lang;

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Titles.Title _other, final boolean _copy) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        this.value = _other.value;
                        this.titleType = _other.titleType;
                        this.lang = _other.lang;
                    } else {
                        this._product = _other;
                    }
                }

                public Builder(final TParentBuilder _parentBuilder, final DataCiteMetadata.Titles.Title _other, final boolean _copy, final PropertyTree propertyTree, final PropertyTreeUse treeUse) {
                    this._parentBuilder = _parentBuilder;
                    if (_copy) {
                        this._product = null;
                        final PropertyTree valuePropertyTree = ((propertyTree == null)?null:propertyTree.get("value"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(valuePropertyTree!= null):((valuePropertyTree == null)||(!valuePropertyTree.isLeaf())))) {
                            this.value = _other.value;
                        }
                        final PropertyTree titleTypePropertyTree = ((propertyTree == null)?null:propertyTree.get("titleType"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(titleTypePropertyTree!= null):((titleTypePropertyTree == null)||(!titleTypePropertyTree.isLeaf())))) {
                            this.titleType = _other.titleType;
                        }
                        final PropertyTree langPropertyTree = ((propertyTree == null)?null:propertyTree.get("lang"));
                        if (((treeUse == PropertyTreeUse.INCLUDE)?(langPropertyTree!= null):((langPropertyTree == null)||(!langPropertyTree.isLeaf())))) {
                            this.lang = _other.lang;
                        }
                    } else {
                        this._product = _other;
                    }
                }

                public TParentBuilder end() {
                    return this._parentBuilder;
                }

                protected<P extends DataCiteMetadata.Titles.Title >P init(final P product) {
                    product.value = this.value;
                    product.titleType = this.titleType;
                    product.lang = this.lang;
                    return product;
                }

                /**
                 * Sets the new value of "value" (any previous value will be replaced)
                 * 
                 * @param value
                 *     New value of the "value" property.
                 */
                public DataCiteMetadata.Titles.Title.Builder<TParentBuilder> withValue(final String value) {
                    this.value = value;
                    return this;
                }

                /**
                 * Sets the new value of "titleType" (any previous value will be replaced)
                 * 
                 * @param titleType
                 *     New value of the "titleType" property.
                 */
                public DataCiteMetadata.Titles.Title.Builder<TParentBuilder> withTitleType(final TitleType titleType) {
                    this.titleType = titleType;
                    return this;
                }

                /**
                 * Sets the new value of "lang" (any previous value will be replaced)
                 * 
                 * @param lang
                 *     New value of the "lang" property.
                 */
                public DataCiteMetadata.Titles.Title.Builder<TParentBuilder> withLang(final String lang) {
                    this.lang = lang;
                    return this;
                }

                public DataCiteMetadata.Titles.Title build() {
                    if (this._product == null) {
                        return this.init(new DataCiteMetadata.Titles.Title());
                    } else {
                        return ((DataCiteMetadata.Titles.Title) this._product);
                    }
                }

            }

            public static class Select
                extends DataCiteMetadata.Titles.Title.Selector<DataCiteMetadata.Titles.Title.Select, Void>
            {


                Select() {
                    super(null, null, null);
                }

                public static DataCiteMetadata.Titles.Title.Select _root() {
                    return new DataCiteMetadata.Titles.Title.Select();
                }

            }

            public static class Selector<TRoot extends com.kscs.util.jaxb.Selector<TRoot, ?> , TParent >
                extends com.kscs.util.jaxb.Selector<TRoot, TParent>
            {

                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Titles.Title.Selector<TRoot, TParent>> value = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Titles.Title.Selector<TRoot, TParent>> titleType = null;
                private com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Titles.Title.Selector<TRoot, TParent>> lang = null;

                public Selector(final TRoot root, final TParent parent, final String propertyName) {
                    super(root, parent, propertyName);
                }

                @Override
                public Map<String, PropertyTree> buildChildren() {
                    final Map<String, PropertyTree> products = new HashMap<String, PropertyTree>();
                    products.putAll(super.buildChildren());
                    if (this.value!= null) {
                        products.put("value", this.value.init());
                    }
                    if (this.titleType!= null) {
                        products.put("titleType", this.titleType.init());
                    }
                    if (this.lang!= null) {
                        products.put("lang", this.lang.init());
                    }
                    return products;
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Titles.Title.Selector<TRoot, TParent>> value() {
                    return ((this.value == null)?this.value = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Titles.Title.Selector<TRoot, TParent>>(this._root, this, "value"):this.value);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Titles.Title.Selector<TRoot, TParent>> titleType() {
                    return ((this.titleType == null)?this.titleType = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Titles.Title.Selector<TRoot, TParent>>(this._root, this, "titleType"):this.titleType);
                }

                public com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Titles.Title.Selector<TRoot, TParent>> lang() {
                    return ((this.lang == null)?this.lang = new com.kscs.util.jaxb.Selector<TRoot, DataCiteMetadata.Titles.Title.Selector<TRoot, TParent>>(this._root, this, "lang"):this.lang);
                }

            }

        }

    }

}
